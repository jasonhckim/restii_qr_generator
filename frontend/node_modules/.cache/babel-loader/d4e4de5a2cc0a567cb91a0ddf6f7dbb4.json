{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _getWrap = _interopRequireDefault(require(\"./getWrap\"));\nvar _getNodesHeight = _interopRequireDefault(require(\"./getNodesHeight\"));\n\n/* eslint-disable no-continue */\nvar getBreak = R.pathOr(false, ['props', 'break']);\nvar getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\nvar defaultPresenceAhead = function defaultPresenceAhead(element) {\n  return function (height) {\n    return Math.min(element.box.height, height);\n  };\n};\nvar getPresenceAhead = function getPresenceAhead(elements, height) {\n  var result = 0;\n  for (var i = 0; i < elements.length; i += 1) {\n    var element = elements[i];\n    if (!element.box) continue;\n    var isElementInside = height > element.box.top;\n    var presenceAhead = element.props.presenceAhead || defaultPresenceAhead(element);\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n  return result;\n};\nvar shouldBreak = function shouldBreak(child, futureElements, height) {\n  var minPresenceAhead = getMinPresenceAhead(child);\n  var presenceAhead = getPresenceAhead(futureElements, height);\n  var futureHeight = (0, _getNodesHeight.default)(futureElements);\n  var shouldSplit = height < child.box.top + child.box.height;\n  var shouldWrap = (0, _getWrap.default)(child);\n  return getBreak(child) || !shouldWrap && shouldSplit || minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead;\n};\nvar _default = shouldBreak;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_getWrap","_getNodesHeight","getBreak","pathOr","getMinPresenceAhead","path","defaultPresenceAhead","element","height","Math","min","box","getPresenceAhead","elements","result","i","length","isElementInside","top","presenceAhead","props","shouldBreak","child","futureElements","minPresenceAhead","futureHeight","shouldSplit","shouldWrap","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/node/shouldBreak.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getWrap = _interopRequireDefault(require(\"./getWrap\"));\n\nvar _getNodesHeight = _interopRequireDefault(require(\"./getNodesHeight\"));\n\n/* eslint-disable no-continue */\nvar getBreak = R.pathOr(false, ['props', 'break']);\nvar getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nvar defaultPresenceAhead = function defaultPresenceAhead(element) {\n  return function (height) {\n    return Math.min(element.box.height, height);\n  };\n};\n\nvar getPresenceAhead = function getPresenceAhead(elements, height) {\n  var result = 0;\n\n  for (var i = 0; i < elements.length; i += 1) {\n    var element = elements[i];\n    if (!element.box) continue;\n    var isElementInside = height > element.box.top;\n    var presenceAhead = element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nvar shouldBreak = function shouldBreak(child, futureElements, height) {\n  var minPresenceAhead = getMinPresenceAhead(child);\n  var presenceAhead = getPresenceAhead(futureElements, height);\n  var futureHeight = (0, _getNodesHeight.default)(futureElements);\n  var shouldSplit = height < child.box.top + child.box.height;\n  var shouldWrap = (0, _getWrap.default)(child);\n  return getBreak(child) || !shouldWrap && shouldSplit || minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead;\n};\n\nvar _default = shouldBreak;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,QAAQ,GAAGP,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAE3D,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAEzE;AACA,IAAIQ,QAAQ,GAAGH,CAAC,CAACI,MAAM,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAClD,IAAIC,mBAAmB,GAAGL,CAAC,CAACM,IAAI,CAAC,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AAE/D,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,OAAO,EAAE;EAChE,OAAO,UAAUC,MAAM,EAAE;IACvB,OAAOC,IAAI,CAACC,GAAG,CAACH,OAAO,CAACI,GAAG,CAACH,MAAM,EAAEA,MAAM,CAAC;EAC7C,CAAC;AACH,CAAC;AAED,IAAII,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,QAAQ,EAAEL,MAAM,EAAE;EACjE,IAAIM,MAAM,GAAG,CAAC;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC3C,IAAIR,OAAO,GAAGM,QAAQ,CAACE,CAAC,CAAC;IACzB,IAAI,CAACR,OAAO,CAACI,GAAG,EAAE;IAClB,IAAIM,eAAe,GAAGT,MAAM,GAAGD,OAAO,CAACI,GAAG,CAACO,GAAG;IAC9C,IAAIC,aAAa,GAAGZ,OAAO,CAACa,KAAK,CAACD,aAAa,IAAIb,oBAAoB,CAACC,OAAO,CAAC;IAEhF,IAAIA,OAAO,IAAIU,eAAe,EAAE;MAC9BH,MAAM,IAAIK,aAAa,CAACX,MAAM,GAAGD,OAAO,CAACI,GAAG,CAACO,GAAG,CAAC;IACnD;EACF;EAEA,OAAOJ,MAAM;AACf,CAAC;AAED,IAAIO,WAAW,GAAG,SAASA,WAAWA,CAACC,KAAK,EAAEC,cAAc,EAAEf,MAAM,EAAE;EACpE,IAAIgB,gBAAgB,GAAGpB,mBAAmB,CAACkB,KAAK,CAAC;EACjD,IAAIH,aAAa,GAAGP,gBAAgB,CAACW,cAAc,EAAEf,MAAM,CAAC;EAC5D,IAAIiB,YAAY,GAAG,CAAC,CAAC,EAAExB,eAAe,CAACN,OAAO,EAAE4B,cAAc,CAAC;EAC/D,IAAIG,WAAW,GAAGlB,MAAM,GAAGc,KAAK,CAACX,GAAG,CAACO,GAAG,GAAGI,KAAK,CAACX,GAAG,CAACH,MAAM;EAC3D,IAAImB,UAAU,GAAG,CAAC,CAAC,EAAE3B,QAAQ,CAACL,OAAO,EAAE2B,KAAK,CAAC;EAC7C,OAAOpB,QAAQ,CAACoB,KAAK,CAAC,IAAI,CAACK,UAAU,IAAID,WAAW,IAAIF,gBAAgB,GAAGC,YAAY,IAAIN,aAAa,GAAGK,gBAAgB;AAC7H,CAAC;AAED,IAAII,QAAQ,GAAGP,WAAW;AAC1BxB,OAAO,CAACF,OAAO,GAAGiC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}