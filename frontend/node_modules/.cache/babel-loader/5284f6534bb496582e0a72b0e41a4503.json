{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\nvar _height = _interopRequireDefault(require(\"../block/height\"));\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var layoutBlock = (0, _layoutParagraph.default)(engines, options);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy.default)(container);\n  var nextParagraph = paragraphs.shift();\n  while (linesCount > 0 && nextParagraph) {\n    var block = layoutBlock(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice.default)(linesCount, block);\n    var linesHeight = (0, _height.default)(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate.default)(slicedBlock));\n      paragraphRect = (0, _crop.default)(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate.default, (0, _sliceAtHeight.default)(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n  return blocks;\n};\nvar _default = R.curryN(4, typesetter);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_copy","_crop","_slice","_height","_truncate","_layoutParagraph","_sliceAtHeight","typesetter","engines","options","container","attributedStrings","blocks","paragraphs","concat","layoutBlock","maxLines","propOr","Infinity","truncateEllipsis","truncateMode","linesCount","paragraphRect","nextParagraph","shift","block","slicedBlock","linesHeight","shouldTruncate","length","height","push","when","always","compose","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/layout/typesetter.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\n\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\n\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\n\nvar _height = _interopRequireDefault(require(\"../block/height\"));\n\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\n\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\n\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var layoutBlock = (0, _layoutParagraph.default)(engines, options);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy.default)(container);\n  var nextParagraph = paragraphs.shift();\n\n  while (linesCount > 0 && nextParagraph) {\n    var block = layoutBlock(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice.default)(linesCount, block);\n    var linesHeight = (0, _height.default)(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate.default)(slicedBlock));\n      paragraphRect = (0, _crop.default)(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate.default, (0, _sliceAtHeight.default)(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n\n  return blocks;\n};\n\nvar _default = R.curryN(4, typesetter);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}