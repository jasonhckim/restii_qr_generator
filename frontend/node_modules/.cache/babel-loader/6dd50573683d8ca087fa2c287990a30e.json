{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\nvar isType = R.propEq('type');\nvar isLink = isType(P.Link);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\n\nvar hasRenderProp = R.hasPath(['props', 'render']);\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\nvar isTextType = R.either(isText, isTextInstance);\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\nvar isTextLink = function isTextLink(node) {\n  var children = node.children || []; // Text string inside a Link\n\n  if (children.every(isTextInstance)) return true; // Text node inside a Link\n\n  if (children.every(isText)) return false;\n  return children.every(isTextType);\n};\n/**\n * Wraps node children inside Text node\n *\n * @param {Object} node\n * @returns {Boolean} node with intermediate Text child\n */\n\nvar wrapText = function wrapText(node) {\n  var textElement = {\n    type: P.Text,\n    props: {},\n    style: {},\n    box: {},\n    children: node.children\n  };\n  return R.assoc('children', [textElement], node);\n};\nvar transformLink = function transformLink(node) {\n  if (!isLink(node)) return node; // If has render prop substitute the instance by a Text, that will\n  // ultimately render the inline Link via the textkit PDF renderer.\n\n  if (hasRenderProp(node)) return R.assoc('type', P.Text, node); // If is a text link (either contains Text or TextInstalce), wrap it\n  // inside a Text element so styles are applied correctly\n\n  if (isTextLink(node)) return wrapText(node);\n  return node;\n};\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\n\nvar resolveLinkSubstitution = function resolveLinkSubstitution(node) {\n  var resolveChild = R.compose(transformLink, resolveLinkSubstitution);\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\nvar _default = resolveLinkSubstitution;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","P","isType","propEq","isLink","Link","isText","Text","isTextInstance","TextInstance","hasRenderProp","hasPath","isTextType","either","isTextLink","node","children","every","wrapText","textElement","type","props","style","box","assoc","transformLink","resolveLinkSubstitution","resolveChild","compose","evolve","map","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/steps/resolveLinkSubstitution.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar isType = R.propEq('type');\nvar isLink = isType(P.Link);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\n\nvar hasRenderProp = R.hasPath(['props', 'render']);\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\nvar isTextType = R.either(isText, isTextInstance);\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\nvar isTextLink = function isTextLink(node) {\n  var children = node.children || []; // Text string inside a Link\n\n  if (children.every(isTextInstance)) return true; // Text node inside a Link\n\n  if (children.every(isText)) return false;\n  return children.every(isTextType);\n};\n/**\n * Wraps node children inside Text node\n *\n * @param {Object} node\n * @returns {Boolean} node with intermediate Text child\n */\n\n\nvar wrapText = function wrapText(node) {\n  var textElement = {\n    type: P.Text,\n    props: {},\n    style: {},\n    box: {},\n    children: node.children\n  };\n  return R.assoc('children', [textElement], node);\n};\n\nvar transformLink = function transformLink(node) {\n  if (!isLink(node)) return node; // If has render prop substitute the instance by a Text, that will\n  // ultimately render the inline Link via the textkit PDF renderer.\n\n  if (hasRenderProp(node)) return R.assoc('type', P.Text, node); // If is a text link (either contains Text or TextInstalce), wrap it\n  // inside a Text element so styles are applied correctly\n\n  if (isTextLink(node)) return wrapText(node);\n  return node;\n};\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\n\n\nvar resolveLinkSubstitution = function resolveLinkSubstitution(node) {\n  var resolveChild = R.compose(transformLink, resolveLinkSubstitution);\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\n\nvar _default = resolveLinkSubstitution;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}