{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\nvar _advanceWidthBetween = _interopRequireDefault(require(\"../run/advanceWidthBetween\"));\n\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {number} advance width\n */\nvar advanceWidthBetween = function advanceWidthBetween(start, end, string) {\n  return R.compose(R.sum, R.map((0, _advanceWidthBetween.default)(start, end)), (0, _filter.default)(start, end), R.propOr([], 'runs'))(string);\n};\nvar _default = R.curryN(3, advanceWidthBetween);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_filter","_advanceWidthBetween","advanceWidthBetween","start","end","string","compose","sum","map","propOr","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/attributedString/advanceWidthBetween.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\n\nvar _advanceWidthBetween = _interopRequireDefault(require(\"../run/advanceWidthBetween\"));\n\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {number} advance width\n */\nvar advanceWidthBetween = function advanceWidthBetween(start, end, string) {\n  return R.compose(R.sum, R.map((0, _advanceWidthBetween.default)(start, end)), (0, _filter.default)(start, end), R.propOr([], 'runs'))(string);\n};\n\nvar _default = R.curryN(3, advanceWidthBetween);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;AAE9D,IAAIO,oBAAoB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIQ,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACzE,OAAON,CAAC,CAACO,OAAO,CAACP,CAAC,CAACQ,GAAG,EAAER,CAAC,CAACS,GAAG,CAAC,CAAC,CAAC,EAAEP,oBAAoB,CAACN,OAAO,EAAEQ,KAAK,EAAEC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEJ,OAAO,CAACL,OAAO,EAAEQ,KAAK,EAAEC,GAAG,CAAC,EAAEL,CAAC,CAACU,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAACJ,MAAM,CAAC;AAC/I,CAAC;AAED,IAAIK,QAAQ,GAAGX,CAAC,CAACY,MAAM,CAAC,CAAC,EAAET,mBAAmB,CAAC;AAE/CL,OAAO,CAACF,OAAO,GAAGe,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}