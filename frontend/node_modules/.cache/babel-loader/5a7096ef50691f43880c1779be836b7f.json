{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\nvar _upperFirst = _interopRequireDefault(require(\"../utils/upperFirst\"));\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\n/* eslint-disable no-unused-expressions */\nvar isNotNil = R.complement(R.isNil);\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n      if (!R.isNil(value) && yogaNode) {\n        var hasEdge = isNotNil(edge);\n        var fixedMethod = \"set\" + (0, _upperFirst.default)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _matchPercent.default)(value);\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n      return node;\n    };\n  };\n};\nvar _default = setYogaValue;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_yoga","_upperFirst","_matchPercent","isNotNil","complement","isNil","setYogaValue","attr","edge","value","node","yogaNode","_yogaNode","hasEdge","fixedMethod","autoMethod","percentMethod","percent","Error","_yogaNode$percentMeth","call","_yogaNode$percentMeth2","_yogaNode$autoMethod","setFlexBasis","UNIT_AUTO","_yogaNode$autoMethod2","_yogaNode$fixedMethod","_yogaNode$fixedMethod2","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/node/setYogaValue.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"../utils/upperFirst\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\n/* eslint-disable no-unused-expressions */\nvar isNotNil = R.complement(R.isNil);\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n\n      if (!R.isNil(value) && yogaNode) {\n        var hasEdge = isNotNil(edge);\n        var fixedMethod = \"set\" + (0, _upperFirst.default)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _matchPercent.default)(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n\nvar _default = setYogaValue;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}