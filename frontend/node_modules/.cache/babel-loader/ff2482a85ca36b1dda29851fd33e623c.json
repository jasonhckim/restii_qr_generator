{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _parse = _interopRequireDefault(require(\"postcss-value-parser/lib/parse\"));\nvar _unit = _interopRequireDefault(require(\"postcss-value-parser/lib/unit\"));\n\n/* eslint-disable no-plusplus */\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    expandsTo = _ref.expandsTo,\n    _ref$maxValues = _ref.maxValues,\n    maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n    _ref$autoSupported = _ref.autoSupported,\n    autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n  return function (model, value) {\n    var _ref2;\n    var nodes = (0, _parse.default)(\"\" + value);\n    var parts = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i]; // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = (0, _unit.default)(node.value); // when unit isn't specified this condition is true\n\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    } // checks that we have enough parsed values\n\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n    var first = parts[0];\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\nvar _default = expandBoxModel;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_parse","_unit","BOX_MODEL_UNITS","logError","style","value","console","error","repeat","length","expandBoxModel","_temp","_ref","expandsTo","_ref$maxValues","maxValues","_ref$autoSupported","autoSupported","model","_ref2","nodes","parts","i","node","type","push","result","includes","unit","first","second","third","fourth","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/stylesheet/lib/expand/boxModel.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parse = _interopRequireDefault(require(\"postcss-value-parser/lib/parse\"));\n\nvar _unit = _interopRequireDefault(require(\"postcss-value-parser/lib/unit\"));\n\n/* eslint-disable no-plusplus */\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\n\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      expandsTo = _ref.expandsTo,\n      _ref$maxValues = _ref.maxValues,\n      maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n      _ref$autoSupported = _ref.autoSupported,\n      autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n\n  return function (model, value) {\n    var _ref2;\n\n    var nodes = (0, _parse.default)(\"\" + value);\n    var parts = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i]; // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = (0, _unit.default)(node.value); // when unit isn't specified this condition is true\n\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    } // checks that we have enough parsed values\n\n\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n\n    var first = parts[0];\n\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar _default = expandBoxModel;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}