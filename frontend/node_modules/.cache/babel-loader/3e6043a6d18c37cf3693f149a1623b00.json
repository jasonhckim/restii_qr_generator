{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _copy = _interopRequireDefault(require(\"./copy\"));\nvar _scale = _interopRequireDefault(require(\"./scale\"));\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\nvar _append = _interopRequireDefault(require(\"../indices/append\"));\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n\n/**\n * Append glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\nvar appendGlyph = function appendGlyph(glyph, run) {\n  var runScale = (0, _scale.default)(run);\n  var glyphLength = R.length(glyph.codePoints);\n  return R.evolve({\n    end: R.add(glyphLength),\n    glyphs: R.append(glyph),\n    glyphIndices: (0, _append.default)(glyphLength),\n    positions: R.append({\n      xAdvance: glyph.advanceWidth * runScale\n    })\n  })(run);\n};\n/**\n * Append glyph or code point to run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\nvar append = function append(value, run) {\n  if (!value) return (0, _copy.default)(run);\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return appendGlyph(glyph, run);\n};\nvar _default = R.curryN(2, append);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_copy","_scale","_getFont","_isNumber","_append","_fromCodePoint","appendGlyph","glyph","run","runScale","glyphLength","length","codePoints","evolve","end","add","glyphs","append","glyphIndices","positions","xAdvance","advanceWidth","value","font","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/run/append.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"./copy\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _append = _interopRequireDefault(require(\"../indices/append\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n\n/**\n * Append glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\nvar appendGlyph = function appendGlyph(glyph, run) {\n  var runScale = (0, _scale.default)(run);\n  var glyphLength = R.length(glyph.codePoints);\n  return R.evolve({\n    end: R.add(glyphLength),\n    glyphs: R.append(glyph),\n    glyphIndices: (0, _append.default)(glyphLength),\n    positions: R.append({\n      xAdvance: glyph.advanceWidth * runScale\n    })\n  })(run);\n};\n/**\n * Append glyph or code point to run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar append = function append(value, run) {\n  if (!value) return (0, _copy.default)(run);\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return appendGlyph(glyph, run);\n};\n\nvar _default = R.curryN(2, append);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAErD,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;AAEvD,IAAIQ,QAAQ,GAAGT,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAE3D,IAAIS,SAAS,GAAGV,sBAAsB,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAEpE,IAAIU,OAAO,GAAGX,sBAAsB,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAElE,IAAIW,cAAc,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIY,WAAW,GAAG,SAASA,WAAWA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACjD,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAER,MAAM,CAACN,OAAO,EAAEa,GAAG,CAAC;EACvC,IAAIE,WAAW,GAAGX,CAAC,CAACY,MAAM,CAACJ,KAAK,CAACK,UAAU,CAAC;EAC5C,OAAOb,CAAC,CAACc,MAAM,CAAC;IACdC,GAAG,EAAEf,CAAC,CAACgB,GAAG,CAACL,WAAW,CAAC;IACvBM,MAAM,EAAEjB,CAAC,CAACkB,MAAM,CAACV,KAAK,CAAC;IACvBW,YAAY,EAAE,CAAC,CAAC,EAAEd,OAAO,CAACT,OAAO,EAAEe,WAAW,CAAC;IAC/CS,SAAS,EAAEpB,CAAC,CAACkB,MAAM,CAAC;MAClBG,QAAQ,EAAEb,KAAK,CAACc,YAAY,GAAGZ;IACjC,CAAC;EACH,CAAC,CAAC,CAACD,GAAG,CAAC;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIS,MAAM,GAAG,SAASA,MAAMA,CAACK,KAAK,EAAEd,GAAG,EAAE;EACvC,IAAI,CAACc,KAAK,EAAE,OAAO,CAAC,CAAC,EAAEtB,KAAK,CAACL,OAAO,EAAEa,GAAG,CAAC;EAC1C,IAAIe,IAAI,GAAG,CAAC,CAAC,EAAErB,QAAQ,CAACP,OAAO,EAAEa,GAAG,CAAC;EACrC,IAAID,KAAK,GAAG,CAAC,CAAC,EAAEJ,SAAS,CAACR,OAAO,EAAE2B,KAAK,CAAC,GAAG,CAAC,CAAC,EAAEjB,cAAc,CAACV,OAAO,EAAE2B,KAAK,EAAEC,IAAI,CAAC,GAAGD,KAAK;EAC5F,OAAOhB,WAAW,CAACC,KAAK,EAAEC,GAAG,CAAC;AAChC,CAAC;AAED,IAAIgB,QAAQ,GAAGzB,CAAC,CAAC0B,MAAM,CAAC,CAAC,EAAER,MAAM,CAAC;AAElCpB,OAAO,CAACF,OAAO,GAAG6B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}