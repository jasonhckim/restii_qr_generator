{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _scale = _interopRequireDefault(require(\"./scale\"));\nvar _offset = _interopRequireDefault(require(\"./offset\"));\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt.default)(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity,\n    // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize.default, R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\nvar _default = R.curryN(3, slice);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_scale","_offset","_getFont","_slice","_glyphIndexAt","_normalize","slice","start","end","run","runScale","font","glyphStartIndex","glyphEndIndex","startGlyph","path","endGlyph","startOffset","startGlyphs","Infinity","endOffset","endGlyphs","sliceOffset","Math","min","evolve","add","compose","apply","juxt","identity","o","always","glyphs","_glyphs","flatten","positions","_positions","map","g","xAdvance","advanceWidth","glyphIndices","attributes","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/run/slice.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt.default)(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity, // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize.default, R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\n\nvar _default = R.curryN(3, slice);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}