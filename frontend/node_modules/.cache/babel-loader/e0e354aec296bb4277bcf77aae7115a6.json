{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\restii_qr_generator\\\\frontend\\\\src\\\\components\\\\GeneratePDF.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document, StyleSheet, Image, PDFDownloadLink } from \"@react-pdf/renderer\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: \"#fff\"\n  },\n  qrContainer: {\n    width: \"33%\",\n    padding: 10,\n    textAlign: \"center\",\n    alignItems: \"center\"\n  },\n  qrImage: {\n    width: 100,\n    height: 100\n  },\n  tableText: {\n    fontSize: 12,\n    marginTop: 5\n  }\n});\nconst QRCodePDF = ({\n  qrCodes\n}) => /*#__PURE__*/React.createElement(Document, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Page, {\n  size: \"LETTER\",\n  style: styles.page,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, qrCodes.map(({\n  table,\n  qrImage\n}) => /*#__PURE__*/React.createElement(View, {\n  key: table,\n  style: styles.qrContainer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(Image, {\n  style: styles.qrImage,\n  src: qrImage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Text, {\n  style: styles.tableText,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }\n}, \"Table \", table)))));\nconst GeneratePDF = ({\n  qrCodes\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    textAlign: \"center\",\n    marginTop: \"20px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, qrCodes.length > 0 && /*#__PURE__*/React.createElement(PDFDownloadLink, {\n  document: /*#__PURE__*/React.createElement(QRCodePDF, {\n    qrCodes: qrCodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }),\n  fileName: \"restaurant_qr_codes.pdf\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }\n}, ({\n  loading\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  style: buttonStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }\n}, loading ? \"Generating PDF...\" : \"Download QR Codes PDF\")));\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  fontSize: \"16px\",\n  backgroundColor: \"#007BFF\",\n  color: \"white\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\nexport default GeneratePDF;","map":{"version":3,"names":["React","Page","Text","View","Document","StyleSheet","Image","PDFDownloadLink","styles","create","page","flexDirection","flexWrap","justifyContent","padding","backgroundColor","qrContainer","width","textAlign","alignItems","qrImage","height","tableText","fontSize","marginTop","QRCodePDF","qrCodes","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","style","map","table","key","src","GeneratePDF","length","document","loading","buttonStyle","color","border","borderRadius","cursor"],"sources":["C:/Users/user/restii_qr_generator/frontend/src/components/GeneratePDF.js"],"sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFDownloadLink } from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    qrContainer: {\r\n        width: \"33%\",\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    qrImage: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    tableText: {\r\n        fontSize: 12,\r\n        marginTop: 5,\r\n    },\r\n});\r\n\r\nconst QRCodePDF = ({ qrCodes }) => (\r\n    <Document>\r\n        <Page size=\"LETTER\" style={styles.page}>\r\n            {qrCodes.map(({ table, qrImage }) => (\r\n                <View key={table} style={styles.qrContainer}>\r\n                    <Image style={styles.qrImage} src={qrImage} />\r\n                    <Text style={styles.tableText}>Table {table}</Text>\r\n                </View>\r\n            ))}\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nconst GeneratePDF = ({ qrCodes }) => (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        {qrCodes.length > 0 && (\r\n            <PDFDownloadLink document={<QRCodePDF qrCodes={qrCodes} />} fileName=\"restaurant_qr_codes.pdf\">\r\n                {({ loading }) => (\r\n                    <button style={buttonStyle}>{loading ? \"Generating PDF...\" : \"Download QR Codes PDF\"}</button>\r\n                )}\r\n            </PDFDownloadLink>\r\n        )}\r\n    </div>\r\n);\r\n\r\nconst buttonStyle = {\r\n    padding: \"10px 15px\",\r\n    fontSize: \"16px\",\r\n    backgroundColor: \"#007BFF\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n};\r\n\r\nexport default GeneratePDF;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}