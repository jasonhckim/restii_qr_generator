{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _unicodeProperties = _interopRequireDefault(require(\"@react-pdf/unicode-properties\"));\nvar _empty = _interopRequireDefault(require(\"../../attributedString/empty\"));\nvar ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */\n\nvar scriptItemizer = function scriptItemizer(options, attributedString) {\n  var string = attributedString.string;\n  var lastScript = 'Unknown';\n  var lastIndex = 0;\n  var index = 0;\n  var res = [];\n  if (!string) return (0, _empty.default)();\n  for (var i = 0; i < string.length; i += 1) {\n    var char = string[i];\n    var codePoint = char.codePointAt();\n    var script = _unicodeProperties.default.getScript(codePoint);\n    if (script !== lastScript && !ignoredScripts.includes(script)) {\n      if (lastScript !== 'Unknown') {\n        res.push({\n          start: lastIndex,\n          end: index,\n          attributes: {\n            script: lastScript\n          }\n        });\n      }\n      lastIndex = index;\n      lastScript = script;\n    }\n    index += char.length;\n  }\n  if (lastIndex < string.length) {\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        script: lastScript\n      }\n    });\n  }\n  return {\n    string: string,\n    runs: res\n  };\n};\nvar _default = R.curryN(2, scriptItemizer);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_unicodeProperties","_empty","ignoredScripts","scriptItemizer","options","attributedString","string","lastScript","lastIndex","index","res","i","length","char","codePoint","codePointAt","script","getScript","includes","push","start","end","attributes","runs","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/engines/scriptItemizer/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _unicodeProperties = _interopRequireDefault(require(\"@react-pdf/unicode-properties\"));\n\nvar _empty = _interopRequireDefault(require(\"../../attributedString/empty\"));\n\nvar ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */\n\nvar scriptItemizer = function scriptItemizer(options, attributedString) {\n  var string = attributedString.string;\n  var lastScript = 'Unknown';\n  var lastIndex = 0;\n  var index = 0;\n  var res = [];\n  if (!string) return (0, _empty.default)();\n\n  for (var i = 0; i < string.length; i += 1) {\n    var char = string[i];\n    var codePoint = char.codePointAt();\n\n    var script = _unicodeProperties.default.getScript(codePoint);\n\n    if (script !== lastScript && !ignoredScripts.includes(script)) {\n      if (lastScript !== 'Unknown') {\n        res.push({\n          start: lastIndex,\n          end: index,\n          attributes: {\n            script: lastScript\n          }\n        });\n      }\n\n      lastIndex = index;\n      lastScript = script;\n    }\n\n    index += char.length;\n  }\n\n  if (lastIndex < string.length) {\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        script: lastScript\n      }\n    });\n  }\n\n  return {\n    string: string,\n    runs: res\n  };\n};\n\nvar _default = R.curryN(2, scriptItemizer);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,kBAAkB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAEzF,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAE5E,IAAIQ,cAAc,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,OAAO,EAAEC,gBAAgB,EAAE;EACtE,IAAIC,MAAM,GAAGD,gBAAgB,CAACC,MAAM;EACpC,IAAIC,UAAU,GAAG,SAAS;EAC1B,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAI,CAACJ,MAAM,EAAE,OAAO,CAAC,CAAC,EAAEL,MAAM,CAACN,OAAO,EAAE,CAAC;EAEzC,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,IAAIE,IAAI,GAAGP,MAAM,CAACK,CAAC,CAAC;IACpB,IAAIG,SAAS,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAElC,IAAIC,MAAM,GAAGhB,kBAAkB,CAACL,OAAO,CAACsB,SAAS,CAACH,SAAS,CAAC;IAE5D,IAAIE,MAAM,KAAKT,UAAU,IAAI,CAACL,cAAc,CAACgB,QAAQ,CAACF,MAAM,CAAC,EAAE;MAC7D,IAAIT,UAAU,KAAK,SAAS,EAAE;QAC5BG,GAAG,CAACS,IAAI,CAAC;UACPC,KAAK,EAAEZ,SAAS;UAChBa,GAAG,EAAEZ,KAAK;UACVa,UAAU,EAAE;YACVN,MAAM,EAAET;UACV;QACF,CAAC,CAAC;MACJ;MAEAC,SAAS,GAAGC,KAAK;MACjBF,UAAU,GAAGS,MAAM;IACrB;IAEAP,KAAK,IAAII,IAAI,CAACD,MAAM;EACtB;EAEA,IAAIJ,SAAS,GAAGF,MAAM,CAACM,MAAM,EAAE;IAC7BF,GAAG,CAACS,IAAI,CAAC;MACPC,KAAK,EAAEZ,SAAS;MAChBa,GAAG,EAAEf,MAAM,CAACM,MAAM;MAClBU,UAAU,EAAE;QACVN,MAAM,EAAET;MACV;IACF,CAAC,CAAC;EACJ;EAEA,OAAO;IACLD,MAAM,EAAEA,MAAM;IACdiB,IAAI,EAAEb;EACR,CAAC;AACH,CAAC;AAED,IAAIc,QAAQ,GAAGzB,CAAC,CAAC0B,MAAM,CAAC,CAAC,EAAEtB,cAAc,CAAC;AAE1CN,OAAO,CAACF,OAAO,GAAG6B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}