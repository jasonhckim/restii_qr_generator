{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/lib/layout\"));\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/linebreaker\"));\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString\"));\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/justification\"));\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/scriptItemizer\"));\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/wordHyphenation\"));\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/textDecoration\"));\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\nvar isTextInstance = R.propEq('type', P.TextInstance);\nvar engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nvar engine = (0, _layout.default)(engines);\nvar getFragments = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n    _instance$props$fill = _instance$props.fill,\n    fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n    _instance$props$fontF = _instance$props.fontFamily,\n    fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n    fontWeight = _instance$props.fontWeight,\n    fontStyle = _instance$props.fontStyle,\n    _instance$props$fontS = _instance$props.fontSize,\n    fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n    textDecoration = _instance$props.textDecoration,\n    textDecorationColor = _instance$props.textDecorationColor,\n    textDecorationStyle = _instance$props.textDecorationStyle,\n    textTransform = _instance$props.textTransform,\n    opacity = _instance$props.opacity;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n  return fragments;\n};\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  return _attributedString.default.fromFragments(getFragments(fontStore, instance));\n};\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var attributedString = getAttributedString(fontStore, node);\n    var x = R.pathOr(0, ['props', 'x'], node);\n    var y = R.pathOr(0, ['props', 'y'], node);\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n    return R.assoc('lines', lines, node);\n  };\n};\nvar layoutText = function layoutText(fontStore, node) {\n  return R.evolve({\n    children: R.map(layoutTspan(fontStore))\n  })(node);\n};\nvar _default = R.curryN(2, layoutText);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","P","_layout","_linebreaker","_attributedString","_justification","_scriptItemizer","_wordHyphenation","_textDecoration","_transformText","_fontSubstitution","isTextInstance","propEq","TextInstance","engines","linebreaker","justification","scriptItemizer","wordHyphenation","fontSubstitution","textDecoration","engine","getFragments","fontStore","instance","string","fragments","_instance$props","props","_instance$props$fill","fill","_instance$props$fontF","fontFamily","fontWeight","fontStyle","_instance$props$fontS","fontSize","textDecorationColor","textDecorationStyle","textTransform","opacity","obj","getFont","font","data","attributes","color","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","i","children","length","child","push","value","apply","getAttributedString","fromFragments","AlmostInfinity","shrinkWhitespaceFactor","before","after","layoutTspan","node","attributedString","x","pathOr","y","container","width","height","hyphenationCallback","getHyphenationCallback","layoutOptions","lines","compose","reduce","concat","assoc","layoutText","evolve","map","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/svg/layoutText.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/lib/layout\"));\n\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/linebreaker\"));\n\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString\"));\n\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/justification\"));\n\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/scriptItemizer\"));\n\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/wordHyphenation\"));\n\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/textDecoration\"));\n\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\n\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\n\nvar isTextInstance = R.propEq('type', P.TextInstance);\nvar engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nvar engine = (0, _layout.default)(engines);\n\nvar getFragments = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n      _instance$props$fill = _instance$props.fill,\n      fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n      _instance$props$fontF = _instance$props.fontFamily,\n      fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n      fontWeight = _instance$props.fontWeight,\n      fontStyle = _instance$props.fontStyle,\n      _instance$props$fontS = _instance$props.fontSize,\n      fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n      textDecoration = _instance$props.textDecoration,\n      textDecorationColor = _instance$props.textDecorationColor,\n      textDecorationStyle = _instance$props.textDecorationStyle,\n      textTransform = _instance$props.textTransform,\n      opacity = _instance$props.opacity;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  return _attributedString.default.fromFragments(getFragments(fontStore, instance));\n};\n\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var attributedString = getAttributedString(fontStore, node);\n    var x = R.pathOr(0, ['props', 'x'], node);\n    var y = R.pathOr(0, ['props', 'y'], node);\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n    return R.assoc('lines', lines, node);\n  };\n};\n\nvar layoutText = function layoutText(fontStore, node) {\n  return R.evolve({\n    children: R.map(layoutTspan(fontStore))\n  })(node);\n};\n\nvar _default = R.curryN(2, layoutText);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,CAAC,GAAGJ,uBAAuB,CAACF,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAEjE,IAAIO,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,IAAIQ,YAAY,GAAGT,sBAAsB,CAACC,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAEhG,IAAIS,iBAAiB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAElG,IAAIU,cAAc,GAAGX,sBAAsB,CAACC,OAAO,CAAC,8CAA8C,CAAC,CAAC;AAEpG,IAAIW,eAAe,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,+CAA+C,CAAC,CAAC;AAEtG,IAAIY,gBAAgB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,gDAAgD,CAAC,CAAC;AAExG,IAAIa,eAAe,GAAGd,sBAAsB,CAACC,OAAO,CAAC,+CAA+C,CAAC,CAAC;AAEtG,IAAIc,cAAc,GAAGf,sBAAsB,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAE7E,IAAIe,iBAAiB,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAEnF,IAAIgB,cAAc,GAAGX,CAAC,CAACY,MAAM,CAAC,MAAM,EAAEX,CAAC,CAACY,YAAY,CAAC;AACrD,IAAIC,OAAO,GAAG;EACZC,WAAW,EAAEZ,YAAY,CAACP,OAAO;EACjCoB,aAAa,EAAEX,cAAc,CAACT,OAAO;EACrCqB,cAAc,EAAEX,eAAe,CAACV,OAAO;EACvCsB,eAAe,EAAEX,gBAAgB,CAACX,OAAO;EACzCuB,gBAAgB,EAAET,iBAAiB,CAACd,OAAO;EAC3CwB,cAAc,EAAEZ,eAAe,CAACZ;AAClC,CAAC;AACD,IAAIyB,MAAM,GAAG,CAAC,CAAC,EAAEnB,OAAO,CAACN,OAAO,EAAEkB,OAAO,CAAC;AAE1C,IAAIQ,YAAY,GAAG,SAASA,YAAYA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAC5D,IAAI,CAACA,QAAQ,EAAE,OAAO,CAAC;IACrBC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,eAAe,GAAGH,QAAQ,CAACI,KAAK;IAChCC,oBAAoB,GAAGF,eAAe,CAACG,IAAI;IAC3CA,IAAI,GAAGD,oBAAoB,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,oBAAoB;IACvEE,qBAAqB,GAAGJ,eAAe,CAACK,UAAU;IAClDA,UAAU,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,WAAW,GAAGA,qBAAqB;IACnFE,UAAU,GAAGN,eAAe,CAACM,UAAU;IACvCC,SAAS,GAAGP,eAAe,CAACO,SAAS;IACrCC,qBAAqB,GAAGR,eAAe,CAACS,QAAQ;IAChDA,QAAQ,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;IACxEf,cAAc,GAAGO,eAAe,CAACP,cAAc;IAC/CiB,mBAAmB,GAAGV,eAAe,CAACU,mBAAmB;IACzDC,mBAAmB,GAAGX,eAAe,CAACW,mBAAmB;IACzDC,aAAa,GAAGZ,eAAe,CAACY,aAAa;IAC7CC,OAAO,GAAGb,eAAe,CAACa,OAAO;EACrC,IAAIC,GAAG,GAAGlB,SAAS,GAAGA,SAAS,CAACmB,OAAO,CAAC;IACtCV,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA;EACb,CAAC,CAAC,GAAG,IAAI;EACT,IAAIS,IAAI,GAAGF,GAAG,GAAGA,GAAG,CAACG,IAAI,GAAGZ,UAAU;EACtC,IAAIa,UAAU,GAAG;IACfF,IAAI,EAAEA,IAAI;IACVH,OAAO,EAAEA,OAAO;IAChBJ,QAAQ,EAAEA,QAAQ;IAClBU,KAAK,EAAEhB,IAAI;IACXiB,cAAc,EAAET,mBAAmB;IACnCU,SAAS,EAAE5B,cAAc,KAAK,WAAW,IAAIA,cAAc,KAAK,wBAAwB,IAAIA,cAAc,KAAK,wBAAwB;IACvI6B,cAAc,EAAEZ,mBAAmB,IAAIP,IAAI;IAC3CoB,MAAM,EAAE9B,cAAc,KAAK,cAAc,IAAIA,cAAc,KAAK,wBAAwB,IAAIA,cAAc,KAAK,wBAAwB;IACvI+B,WAAW,EAAEb,mBAAmB;IAChCc,WAAW,EAAEf,mBAAmB,IAAIP;EACtC,CAAC;EAED,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,QAAQ,CAAC8B,QAAQ,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IACpD,IAAIG,KAAK,GAAGhC,QAAQ,CAAC8B,QAAQ,CAACD,CAAC,CAAC;IAEhC,IAAI1C,cAAc,CAAC6C,KAAK,CAAC,EAAE;MACzB9B,SAAS,CAAC+B,IAAI,CAAC;QACbhC,MAAM,EAAE,CAAC,CAAC,EAAEhB,cAAc,CAACb,OAAO,EAAE4D,KAAK,CAACE,KAAK,EAAEnB,aAAa,CAAC;QAC/DM,UAAU,EAAEA;MACd,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIW,KAAK,EAAE;MAChB9B,SAAS,CAAC+B,IAAI,CAACE,KAAK,CAACjC,SAAS,EAAEJ,YAAY,CAACkC,KAAK,CAAC,CAAC;IACtD;EACF;EAEA,OAAO9B,SAAS;AAClB,CAAC;AAED,IAAIkC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACrC,SAAS,EAAEC,QAAQ,EAAE;EAC1E,OAAOpB,iBAAiB,CAACR,OAAO,CAACiE,aAAa,CAACvC,YAAY,CAACC,SAAS,EAAEC,QAAQ,CAAC,CAAC;AACnF,CAAC;AAED,IAAIsC,cAAc,GAAG,YAAY;AACjC,IAAIC,sBAAsB,GAAG;EAC3BC,MAAM,EAAE,CAAC,GAAG;EACZC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAAC3C,SAAS,EAAE;EAChD,OAAO,UAAU4C,IAAI,EAAE;IACrB,IAAIC,gBAAgB,GAAGR,mBAAmB,CAACrC,SAAS,EAAE4C,IAAI,CAAC;IAC3D,IAAIE,CAAC,GAAGrE,CAAC,CAACsE,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAEH,IAAI,CAAC;IACzC,IAAII,CAAC,GAAGvE,CAAC,CAACsE,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAEH,IAAI,CAAC;IACzC,IAAIK,SAAS,GAAG;MACdH,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEA,CAAC;MACJE,KAAK,EAAEX,cAAc;MACrBY,MAAM,EAAEZ;IACV,CAAC;IACD,IAAIa,mBAAmB,GAAGR,IAAI,CAACvC,KAAK,CAAC+C,mBAAmB,KAAKpD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACqD,sBAAsB,CAAC,CAAC,CAAC,IAAI,IAAI;IAC9J,IAAIC,aAAa,GAAG;MAClBF,mBAAmB,EAAEA,mBAAmB;MACxCZ,sBAAsB,EAAEA;IAC1B,CAAC;IACD,IAAIe,KAAK,GAAG9E,CAAC,CAAC+E,OAAO,CAAC/E,CAAC,CAACgF,MAAM,CAAChF,CAAC,CAACiF,MAAM,EAAE,EAAE,CAAC,EAAE5D,MAAM,CAAC,CAAC+C,gBAAgB,EAAEI,SAAS,EAAEK,aAAa,CAAC;IACjG,OAAO7E,CAAC,CAACkF,KAAK,CAAC,OAAO,EAAEJ,KAAK,EAAEX,IAAI,CAAC;EACtC,CAAC;AACH,CAAC;AAED,IAAIgB,UAAU,GAAG,SAASA,UAAUA,CAAC5D,SAAS,EAAE4C,IAAI,EAAE;EACpD,OAAOnE,CAAC,CAACoF,MAAM,CAAC;IACd9B,QAAQ,EAAEtD,CAAC,CAACqF,GAAG,CAACnB,WAAW,CAAC3C,SAAS,CAAC;EACxC,CAAC,CAAC,CAAC4C,IAAI,CAAC;AACV,CAAC;AAED,IAAImB,QAAQ,GAAGtF,CAAC,CAACuF,MAAM,CAAC,CAAC,EAAEJ,UAAU,CAAC;AAEtCrF,OAAO,CAACF,OAAO,GAAG0F,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}