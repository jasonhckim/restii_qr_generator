{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\restii_qr_generator\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { generateQRCodes } from \"./api\";\nimport QRPreview from \"./components/QRPreview\";\nimport GeneratePDF from \"./components/GeneratePDF\"; // ðŸ†• Import PDF Component\n\nfunction App() {\n  const [restaurantName, setRestaurantName] = useState(\"\");\n  const [numTables, setNumTables] = useState(1);\n  const [qrSize, setQrSize] = useState(2);\n  const [qrCodes, setQrCodes] = useState([]);\n  const handleGenerate = async () => {\n    const data = await generateQRCodes(restaurantName, numTables, qrSize);\n    setQrCodes(data.qrCodes);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Restaurant QR Code Generator\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Restaurant Name\",\n    onChange: e => setRestaurantName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"40\",\n    value: numTables,\n    onChange: e => setNumTables(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setQrSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"2\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"3\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"4\\\"\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleGenerate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Generate QR Codes\"), /*#__PURE__*/React.createElement(QRPreview, {\n    qrCodes: qrCodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GeneratePDF, {\n    qrCodes: qrCodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), \" \");\n}\nexport default App;","map":{"version":3,"names":["React","useState","generateQRCodes","QRPreview","GeneratePDF","App","restaurantName","setRestaurantName","numTables","setNumTables","qrSize","setQrSize","qrCodes","setQrCodes","handleGenerate","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","min","max","onClick"],"sources":["C:/Users/user/restii_qr_generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { generateQRCodes } from \"./api\";\r\nimport QRPreview from \"./components/QRPreview\";\r\nimport GeneratePDF from \"./components/GeneratePDF\"; // ðŸ†• Import PDF Component\r\n\r\nfunction App() {\r\n    const [restaurantName, setRestaurantName] = useState(\"\");\r\n    const [numTables, setNumTables] = useState(1);\r\n    const [qrSize, setQrSize] = useState(2);\r\n    const [qrCodes, setQrCodes] = useState([]);\r\n\r\n    const handleGenerate = async () => {\r\n        const data = await generateQRCodes(restaurantName, numTables, qrSize);\r\n        setQrCodes(data.qrCodes);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Restaurant QR Code Generator</h2>\r\n            <input type=\"text\" placeholder=\"Restaurant Name\" onChange={e => setRestaurantName(e.target.value)} />\r\n            <input type=\"number\" min=\"1\" max=\"40\" value={numTables} onChange={e => setNumTables(e.target.value)} />\r\n            <select onChange={e => setQrSize(e.target.value)}>\r\n                <option value=\"2\">2\"</option>\r\n                <option value=\"3\">3\"</option>\r\n                <option value=\"4\">4\"</option>\r\n            </select>\r\n            <button onClick={handleGenerate}>Generate QR Codes</button>\r\n\r\n            <QRPreview qrCodes={qrCodes} />\r\n            <GeneratePDF qrCodes={qrCodes} /> {/* ðŸ†• Add Download PDF Button */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}