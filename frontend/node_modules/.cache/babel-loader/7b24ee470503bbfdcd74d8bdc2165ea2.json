{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Return glyph index at string index, if glyph indices present.\n * Otherwise return string index\n *\n * @param  {number}  string index\n * @param  {Object}  run\n * @return {number}  glyph index\n */\nvar glyphIndexAt = function glyphIndexAt(index, run) {\n  return R.pathOr(index, ['glyphIndices', index])(run);\n};\nvar _default = R.curryN(2, glyphIndexAt);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","glyphIndexAt","index","run","pathOr","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/run/glyphIndexAt.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Return glyph index at string index, if glyph indices present.\n * Otherwise return string index\n *\n * @param  {number}  string index\n * @param  {Object}  run\n * @return {number}  glyph index\n */\nvar glyphIndexAt = function glyphIndexAt(index, run) {\n  return R.pathOr(index, ['glyphIndices', index])(run);\n};\n\nvar _default = R.curryN(2, glyphIndexAt);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACD,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,YAAY,GAAG,SAASA,YAAYA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACnD,OAAOH,CAAC,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC;AACtD,CAAC;AAED,IAAIE,QAAQ,GAAGL,CAAC,CAACM,MAAM,CAAC,CAAC,EAAEL,YAAY,CAAC;AAExCH,OAAO,CAACD,OAAO,GAAGQ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}