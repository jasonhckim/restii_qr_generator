{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _lineIndexAtHeight = _interopRequireDefault(require(\"./lineIndexAtHeight\"));\nvar _heightAtLineIndex = _interopRequireDefault(require(\"./heightAtLineIndex\"));\nvar zero = R.always(0);\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar getWidows = R.pathOr(2, ['props', 'widows']);\nvar getOrphans = R.pathOr(2, ['props', 'orphans']);\nvar getLineBreak = function getLineBreak(node, height) {\n  var top = getTop(node);\n  var widows = getWidows(node);\n  var orphans = getOrphans(node);\n  var linesQuantity = node.lines.length;\n  var slicedLine = (0, _lineIndexAtHeight.default)(node, height - top);\n  if (slicedLine === 0) {\n    return 0;\n  }\n  if (linesQuantity < orphans) {\n    return linesQuantity;\n  }\n  if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  }\n  if (linesQuantity === orphans + widows) {\n    return orphans;\n  }\n  if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n  return slicedLine;\n}; // Also receives contentArea in case it's needed\n\nvar splitText = function splitText(node, height) {\n  var slicedLineIndex = getLineBreak(node, height);\n  var currentHeight = (0, _heightAtLineIndex.default)(node, slicedLineIndex);\n  var nextHeight = node.box.height - currentHeight;\n  var current = R.evolve({\n    lines: R.slice(0, slicedLineIndex),\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero\n    }),\n    box: {\n      height: R.always(currentHeight),\n      borderBottomWidth: zero\n    }\n  }, node);\n  var next = R.evolve({\n    lines: R.slice(slicedLineIndex, Infinity),\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero\n    }\n  }, node);\n  return [current, next];\n};\nvar _default = splitText;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_lineIndexAtHeight","_heightAtLineIndex","zero","always","getTop","pathOr","getWidows","getOrphans","getLineBreak","node","height","top","widows","orphans","linesQuantity","lines","length","slicedLine","splitText","slicedLineIndex","currentHeight","nextHeight","box","current","evolve","slice","style","marginBottom","paddingBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","next","Infinity","marginTop","paddingTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/text/splitText.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _lineIndexAtHeight = _interopRequireDefault(require(\"./lineIndexAtHeight\"));\n\nvar _heightAtLineIndex = _interopRequireDefault(require(\"./heightAtLineIndex\"));\n\nvar zero = R.always(0);\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar getWidows = R.pathOr(2, ['props', 'widows']);\nvar getOrphans = R.pathOr(2, ['props', 'orphans']);\n\nvar getLineBreak = function getLineBreak(node, height) {\n  var top = getTop(node);\n  var widows = getWidows(node);\n  var orphans = getOrphans(node);\n  var linesQuantity = node.lines.length;\n  var slicedLine = (0, _lineIndexAtHeight.default)(node, height - top);\n\n  if (slicedLine === 0) {\n    return 0;\n  }\n\n  if (linesQuantity < orphans) {\n    return linesQuantity;\n  }\n\n  if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  }\n\n  if (linesQuantity === orphans + widows) {\n    return orphans;\n  }\n\n  if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n\n  return slicedLine;\n}; // Also receives contentArea in case it's needed\n\n\nvar splitText = function splitText(node, height) {\n  var slicedLineIndex = getLineBreak(node, height);\n  var currentHeight = (0, _heightAtLineIndex.default)(node, slicedLineIndex);\n  var nextHeight = node.box.height - currentHeight;\n  var current = R.evolve({\n    lines: R.slice(0, slicedLineIndex),\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero\n    }),\n    box: {\n      height: R.always(currentHeight),\n      borderBottomWidth: zero\n    }\n  }, node);\n  var next = R.evolve({\n    lines: R.slice(slicedLineIndex, Infinity),\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero\n    }\n  }, node);\n  return [current, next];\n};\n\nvar _default = splitText;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}