{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.resolvePageDimensions = exports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\nvar _getPosition = _interopRequireDefault(require(\"../node/getPosition\"));\nvar _getDimension = _interopRequireDefault(require(\"../node/getDimension\"));\nvar _getBorderWidth = _interopRequireDefault(require(\"../node/getBorderWidth\"));\nvar _setDisplay = _interopRequireDefault(require(\"../node/setDisplay\"));\nvar _setOverflow = _interopRequireDefault(require(\"../node/setOverflow\"));\nvar _setFlexWrap = _interopRequireDefault(require(\"../node/setFlexWrap\"));\nvar _setFlexGrow = _interopRequireDefault(require(\"../node/setFlexGrow\"));\nvar _setFlexBasis = _interopRequireDefault(require(\"../node/setFlexBasis\"));\nvar _setAlignSelf = _interopRequireDefault(require(\"../node/setAlignSelf\"));\nvar _setAlignItems = _interopRequireDefault(require(\"../node/setAlignItems\"));\nvar _setFlexShrink = _interopRequireDefault(require(\"../node/setFlexShrink\"));\nvar _setAspectRatio = _interopRequireDefault(require(\"../node/setAspectRatio\"));\nvar _setAlignContent = _interopRequireDefault(require(\"../node/setAlignContent\"));\nvar _setPositionType = _interopRequireDefault(require(\"../node/setPositionType\"));\nvar _setFlexDirection = _interopRequireDefault(require(\"../node/setFlexDirection\"));\nvar _setJustifyContent = _interopRequireDefault(require(\"../node/setJustifyContent\"));\nvar _setMargin = require(\"../node/setMargin\");\nvar _setPadding = require(\"../node/setPadding\");\nvar _setBorderWidth = require(\"../node/setBorderWidth\");\nvar _setPosition = require(\"../node/setPosition\");\nvar _setDimension = require(\"../node/setDimension\");\nvar _measureSvg = _interopRequireDefault(require(\"../svg/measureSvg\"));\nvar _measureText = _interopRequireDefault(require(\"../text/measureText\"));\nvar _measureImage = _interopRequireDefault(require(\"../image/measureImage\"));\nvar _measureCanvas = _interopRequireDefault(require(\"../canvas/measureCanvas\"));\nvar YOGA_NODE = '_yogaNode';\nvar YOGA_CONFIG = _yoga.default.Config.create();\nYOGA_CONFIG.setPointScaleFactor(0);\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isNote = isType(P.Note);\nvar isPage = isType(P.Page);\nvar isImage = isType(P.Image);\nvar isCanvas = isType(P.Canvas);\nvar isTextInstance = isType(P.TextInstance);\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return (0, _setDimension.setHeight)(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\nvar setYogaValues = R.tap(function (node) {\n  R.compose(setNodeHeight(node), (0, _setDimension.setWidth)(node.style.width), (0, _setDimension.setMinWidth)(node.style.minWidth), (0, _setDimension.setMaxWidth)(node.style.maxWidth), (0, _setDimension.setMinHeight)(node.style.minHeight), (0, _setDimension.setMaxHeight)(node.style.maxHeight), (0, _setMargin.setMarginTop)(node.style.marginTop), (0, _setMargin.setMarginRight)(node.style.marginRight), (0, _setMargin.setMarginBottom)(node.style.marginBottom), (0, _setMargin.setMarginLeft)(node.style.marginLeft), (0, _setPadding.setPaddingTop)(node.style.paddingTop), (0, _setPadding.setPaddingRight)(node.style.paddingRight), (0, _setPadding.setPaddingBottom)(node.style.paddingBottom), (0, _setPadding.setPaddingLeft)(node.style.paddingLeft), (0, _setPositionType.default)(node.style.position), (0, _setPosition.setPositionTop)(node.style.top), (0, _setPosition.setPositionRight)(node.style.right), (0, _setPosition.setPositionBottom)(node.style.bottom), (0, _setPosition.setPositionLeft)(node.style.left), (0, _setBorderWidth.setBorderTop)(node.style.borderTopWidth), (0, _setBorderWidth.setBorderRight)(node.style.borderRightWidth), (0, _setBorderWidth.setBorderBottom)(node.style.borderBottomWidth), (0, _setBorderWidth.setBorderLeft)(node.style.borderLeftWidth), (0, _setDisplay.default)(node.style.display), (0, _setFlexDirection.default)(node.style.flexDirection), (0, _setAlignSelf.default)(node.style.alignSelf), (0, _setAlignContent.default)(node.style.alignContent), (0, _setAlignItems.default)(node.style.alignItems), (0, _setJustifyContent.default)(node.style.justifyContent), (0, _setFlexWrap.default)(node.style.flexWrap), (0, _setOverflow.default)(node.style.overflow), (0, _setAspectRatio.default)(node.style.aspectRatio), (0, _setFlexBasis.default)(node.style.flexBasis), (0, _setFlexGrow.default)(node.style.flexGrow), (0, _setFlexShrink.default)(node.style.flexShrink))(node);\n});\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\n\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return R.tap(function (child) {\n    return parent.insertChild(child[YOGA_NODE], parent.getChildCount());\n  });\n};\nvar setMeasureFunc = function setMeasureFunc(page, fontStore) {\n  return function (node) {\n    var yogaNode = node[YOGA_NODE];\n    if (isText(node)) {\n      yogaNode.setMeasureFunc((0, _measureText.default)(page, node, fontStore));\n    }\n    if (isImage(node)) {\n      yogaNode.setMeasureFunc((0, _measureImage.default)(page, node));\n    }\n    if (isCanvas(node)) {\n      yogaNode.setMeasureFunc((0, _measureCanvas.default)(page, node));\n    }\n    if (isSvg(node)) {\n      yogaNode.setMeasureFunc((0, _measureSvg.default)(page, node));\n    }\n    return node;\n  };\n};\nvar isNotText = R.complement(isText);\nvar isNotNote = R.complement(isNote);\nvar isNotSvg = R.complement(isSvg);\nvar isNotTextInstance = R.complement(isTextInstance);\nvar isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = _yoga.default.Node.createWithConfig(YOGA_CONFIG);\n    return R.compose(setMeasureFunc(page, fontStore), R.when(isLayoutElement, R.evolve({\n      children: R.map(R.compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore)))\n    })), setYogaValues, R.assoc(YOGA_NODE, yogaNode))(node);\n  };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\nvar calculateLayout = function calculateLayout(page) {\n  page[YOGA_NODE].calculateLayout();\n  return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\n\nvar persistDimensions = function persistDimensions(node) {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(R.mergeAll([(0, _getPadding.default)(node), (0, _getMargin.default)(node), (0, _getBorderWidth.default)(node), (0, _getPosition.default)(node), (0, _getDimension.default)(node)]))\n  })(node);\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  return R.compose(R.dissoc(YOGA_NODE), R.evolve({\n    children: R.map(destroyYogaNodes)\n  }))(node);\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node[YOGA_NODE]) node[YOGA_NODE].freeRecursive();\n  return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\n\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  return R.ifElse(R.isNil, R.always(null), R.compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore)))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\n\nexports.resolvePageDimensions = resolvePageDimensions;\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n  return R.evolve({\n    children: R.map(mapChild)\n  })(node);\n};\nvar _default = resolveDimensions;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","resolvePageDimensions","R","_yoga","P","_getMargin","_getPadding","_getPosition","_getDimension","_getBorderWidth","_setDisplay","_setOverflow","_setFlexWrap","_setFlexGrow","_setFlexBasis","_setAlignSelf","_setAlignItems","_setFlexShrink","_setAspectRatio","_setAlignContent","_setPositionType","_setFlexDirection","_setJustifyContent","_setMargin","_setPadding","_setBorderWidth","_setPosition","_setDimension","_measureSvg","_measureText","_measureImage","_measureCanvas","YOGA_NODE","YOGA_CONFIG","Config","create","setPointScaleFactor","isType","propEq","isSvg","Svg","isText","Text","isNote","Note","isPage","Page","isImage","Image","isCanvas","Canvas","isTextInstance","TextInstance","setNodeHeight","node","value","box","height","style","setHeight","setYogaValues","tap","compose","setWidth","width","setMinWidth","minWidth","setMaxWidth","maxWidth","setMinHeight","minHeight","setMaxHeight","maxHeight","setMarginTop","marginTop","setMarginRight","marginRight","setMarginBottom","marginBottom","setMarginLeft","marginLeft","setPaddingTop","paddingTop","setPaddingRight","paddingRight","setPaddingBottom","paddingBottom","setPaddingLeft","paddingLeft","position","setPositionTop","top","setPositionRight","right","setPositionBottom","bottom","setPositionLeft","left","setBorderTop","borderTopWidth","setBorderRight","borderRightWidth","setBorderBottom","borderBottomWidth","setBorderLeft","borderLeftWidth","display","flexDirection","alignSelf","alignContent","alignItems","justifyContent","flexWrap","overflow","aspectRatio","flexBasis","flexGrow","flexShrink","insertYogaNodes","parent","child","insertChild","getChildCount","setMeasureFunc","page","fontStore","yogaNode","isNotText","complement","isNotNote","isNotSvg","isNotTextInstance","isLayoutElement","allPass","createYogaNodes","Node","createWithConfig","when","evolve","children","map","assoc","calculateLayout","persistDimensions","always","mergeAll","destroyYogaNodes","dissoc","freeYogaNodes","freeRecursive","ifElse","isNil","resolveDimensions","mapChild","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/steps/resolveDimensions.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.resolvePageDimensions = exports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _getPosition = _interopRequireDefault(require(\"../node/getPosition\"));\n\nvar _getDimension = _interopRequireDefault(require(\"../node/getDimension\"));\n\nvar _getBorderWidth = _interopRequireDefault(require(\"../node/getBorderWidth\"));\n\nvar _setDisplay = _interopRequireDefault(require(\"../node/setDisplay\"));\n\nvar _setOverflow = _interopRequireDefault(require(\"../node/setOverflow\"));\n\nvar _setFlexWrap = _interopRequireDefault(require(\"../node/setFlexWrap\"));\n\nvar _setFlexGrow = _interopRequireDefault(require(\"../node/setFlexGrow\"));\n\nvar _setFlexBasis = _interopRequireDefault(require(\"../node/setFlexBasis\"));\n\nvar _setAlignSelf = _interopRequireDefault(require(\"../node/setAlignSelf\"));\n\nvar _setAlignItems = _interopRequireDefault(require(\"../node/setAlignItems\"));\n\nvar _setFlexShrink = _interopRequireDefault(require(\"../node/setFlexShrink\"));\n\nvar _setAspectRatio = _interopRequireDefault(require(\"../node/setAspectRatio\"));\n\nvar _setAlignContent = _interopRequireDefault(require(\"../node/setAlignContent\"));\n\nvar _setPositionType = _interopRequireDefault(require(\"../node/setPositionType\"));\n\nvar _setFlexDirection = _interopRequireDefault(require(\"../node/setFlexDirection\"));\n\nvar _setJustifyContent = _interopRequireDefault(require(\"../node/setJustifyContent\"));\n\nvar _setMargin = require(\"../node/setMargin\");\n\nvar _setPadding = require(\"../node/setPadding\");\n\nvar _setBorderWidth = require(\"../node/setBorderWidth\");\n\nvar _setPosition = require(\"../node/setPosition\");\n\nvar _setDimension = require(\"../node/setDimension\");\n\nvar _measureSvg = _interopRequireDefault(require(\"../svg/measureSvg\"));\n\nvar _measureText = _interopRequireDefault(require(\"../text/measureText\"));\n\nvar _measureImage = _interopRequireDefault(require(\"../image/measureImage\"));\n\nvar _measureCanvas = _interopRequireDefault(require(\"../canvas/measureCanvas\"));\n\nvar YOGA_NODE = '_yogaNode';\n\nvar YOGA_CONFIG = _yoga.default.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isNote = isType(P.Note);\nvar isPage = isType(P.Page);\nvar isImage = isType(P.Image);\nvar isCanvas = isType(P.Canvas);\nvar isTextInstance = isType(P.TextInstance);\n\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return (0, _setDimension.setHeight)(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar setYogaValues = R.tap(function (node) {\n  R.compose(setNodeHeight(node), (0, _setDimension.setWidth)(node.style.width), (0, _setDimension.setMinWidth)(node.style.minWidth), (0, _setDimension.setMaxWidth)(node.style.maxWidth), (0, _setDimension.setMinHeight)(node.style.minHeight), (0, _setDimension.setMaxHeight)(node.style.maxHeight), (0, _setMargin.setMarginTop)(node.style.marginTop), (0, _setMargin.setMarginRight)(node.style.marginRight), (0, _setMargin.setMarginBottom)(node.style.marginBottom), (0, _setMargin.setMarginLeft)(node.style.marginLeft), (0, _setPadding.setPaddingTop)(node.style.paddingTop), (0, _setPadding.setPaddingRight)(node.style.paddingRight), (0, _setPadding.setPaddingBottom)(node.style.paddingBottom), (0, _setPadding.setPaddingLeft)(node.style.paddingLeft), (0, _setPositionType.default)(node.style.position), (0, _setPosition.setPositionTop)(node.style.top), (0, _setPosition.setPositionRight)(node.style.right), (0, _setPosition.setPositionBottom)(node.style.bottom), (0, _setPosition.setPositionLeft)(node.style.left), (0, _setBorderWidth.setBorderTop)(node.style.borderTopWidth), (0, _setBorderWidth.setBorderRight)(node.style.borderRightWidth), (0, _setBorderWidth.setBorderBottom)(node.style.borderBottomWidth), (0, _setBorderWidth.setBorderLeft)(node.style.borderLeftWidth), (0, _setDisplay.default)(node.style.display), (0, _setFlexDirection.default)(node.style.flexDirection), (0, _setAlignSelf.default)(node.style.alignSelf), (0, _setAlignContent.default)(node.style.alignContent), (0, _setAlignItems.default)(node.style.alignItems), (0, _setJustifyContent.default)(node.style.justifyContent), (0, _setFlexWrap.default)(node.style.flexWrap), (0, _setOverflow.default)(node.style.overflow), (0, _setAspectRatio.default)(node.style.aspectRatio), (0, _setFlexBasis.default)(node.style.flexBasis), (0, _setFlexGrow.default)(node.style.flexGrow), (0, _setFlexShrink.default)(node.style.flexShrink))(node);\n});\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\n\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return R.tap(function (child) {\n    return parent.insertChild(child[YOGA_NODE], parent.getChildCount());\n  });\n};\n\nvar setMeasureFunc = function setMeasureFunc(page, fontStore) {\n  return function (node) {\n    var yogaNode = node[YOGA_NODE];\n\n    if (isText(node)) {\n      yogaNode.setMeasureFunc((0, _measureText.default)(page, node, fontStore));\n    }\n\n    if (isImage(node)) {\n      yogaNode.setMeasureFunc((0, _measureImage.default)(page, node));\n    }\n\n    if (isCanvas(node)) {\n      yogaNode.setMeasureFunc((0, _measureCanvas.default)(page, node));\n    }\n\n    if (isSvg(node)) {\n      yogaNode.setMeasureFunc((0, _measureSvg.default)(page, node));\n    }\n\n    return node;\n  };\n};\n\nvar isNotText = R.complement(isText);\nvar isNotNote = R.complement(isNote);\nvar isNotSvg = R.complement(isSvg);\nvar isNotTextInstance = R.complement(isTextInstance);\nvar isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = _yoga.default.Node.createWithConfig(YOGA_CONFIG);\n\n    return R.compose(setMeasureFunc(page, fontStore), R.when(isLayoutElement, R.evolve({\n      children: R.map(R.compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore)))\n    })), setYogaValues, R.assoc(YOGA_NODE, yogaNode))(node);\n  };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar calculateLayout = function calculateLayout(page) {\n  page[YOGA_NODE].calculateLayout();\n  return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\n\n\nvar persistDimensions = function persistDimensions(node) {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(R.mergeAll([(0, _getPadding.default)(node), (0, _getMargin.default)(node), (0, _getBorderWidth.default)(node), (0, _getPosition.default)(node), (0, _getDimension.default)(node)]))\n  })(node);\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  return R.compose(R.dissoc(YOGA_NODE), R.evolve({\n    children: R.map(destroyYogaNodes)\n  }))(node);\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node[YOGA_NODE]) node[YOGA_NODE].freeRecursive();\n  return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\n\n\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  return R.ifElse(R.isNil, R.always(null), R.compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore)))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\n\n\nexports.resolvePageDimensions = resolvePageDimensions;\n\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n\n  return R.evolve({\n    children: R.map(mapChild)\n  })(node);\n};\n\nvar _default = resolveDimensions;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}