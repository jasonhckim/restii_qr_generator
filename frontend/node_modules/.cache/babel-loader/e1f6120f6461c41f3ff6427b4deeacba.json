{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _absSvgPath = _interopRequireDefault(require(\"abs-svg-path\"));\nvar _parseSvgPath = _interopRequireDefault(require(\"parse-svg-path\"));\nvar _normalizeSvgPath = _interopRequireDefault(require(\"normalize-svg-path\"));\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\nvar _parsePoints = _interopRequireDefault(require(\"./parsePoints\"));\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var path = R.compose(_normalizeSvgPath.default, _absSvgPath.default, _parseSvgPath.default, R.pathOr('', ['props', 'd']))(node);\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n  return bounds;\n};\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var r = R.pathOr(0, ['props', 'r'], node);\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  return [cx - r, cy - r, cx + r, cy + r];\n};\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  var rx = R.pathOr(0, ['props', 'rx'], node);\n  var ry = R.pathOr(0, ['props', 'ry'], node);\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var x1 = R.pathOr(0, ['props', 'x1'], node);\n  var y1 = R.pathOr(0, ['props', 'y1'], node);\n  var x2 = R.pathOr(0, ['props', 'x2'], node);\n  var y2 = R.pathOr(0, ['props', 'y2'], node);\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var x = R.pathOr(0, ['props', 'x'], node);\n  var y = R.pathOr(0, ['props', 'y'], node);\n  var width = R.pathOr(0, ['props', 'width'], node);\n  var height = R.pathOr(0, ['props', 'height'], node);\n  return [x, y, x + width, y + height];\n};\nvar max = R.reduce(R.max, -Infinity);\nvar min = R.reduce(R.min, Infinity);\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var points = R.compose(_parsePoints.default, R.pathOr([], ['props', 'points']))(node);\n  var xValues = R.pluck(0, points);\n  var yValues = R.pluck(1, points);\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nvar getBoundingBox = R.cond([[_isRect.default, getRectBoundingBox], [_isLine.default, getLineBoundingBox], [_isPath.default, getPathBoundingBox], [_isCircle.default, getCircleBoundingBox], [_isEllipse.default, getEllipseBoundingBox], [_isPolygon.default, getPolylineBoundingBox], [_isPolyline.default, getPolylineBoundingBox], [R.T, R.always([0, 0, 0, 0])]]);\nvar _default = getBoundingBox;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_absSvgPath","_parseSvgPath","_normalizeSvgPath","_isRect","_isLine","_isPath","_isCircle","_isPolygon","_isEllipse","_isPolyline","_parsePoints","getPathBoundingBox","node","path","compose","pathOr","length","bounds","Infinity","i","l","points","slice","j","getCircleBoundingBox","r","cx","cy","getEllipseBoundingBox","rx","ry","getLineBoundingBox","x1","y1","x2","y2","min","max","getRectBoundingBox","x","y","width","height","reduce","getPolylineBoundingBox","xValues","pluck","yValues","getBoundingBox","cond","T","always","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/render/lib/svg/getBoundingBox.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _absSvgPath = _interopRequireDefault(require(\"abs-svg-path\"));\n\nvar _parseSvgPath = _interopRequireDefault(require(\"parse-svg-path\"));\n\nvar _normalizeSvgPath = _interopRequireDefault(require(\"normalize-svg-path\"));\n\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\n\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\n\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\n\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\n\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\n\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\n\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\n\nvar _parsePoints = _interopRequireDefault(require(\"./parsePoints\"));\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var path = R.compose(_normalizeSvgPath.default, _absSvgPath.default, _parseSvgPath.default, R.pathOr('', ['props', 'd']))(node);\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var r = R.pathOr(0, ['props', 'r'], node);\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  var rx = R.pathOr(0, ['props', 'rx'], node);\n  var ry = R.pathOr(0, ['props', 'ry'], node);\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var x1 = R.pathOr(0, ['props', 'x1'], node);\n  var y1 = R.pathOr(0, ['props', 'y1'], node);\n  var x2 = R.pathOr(0, ['props', 'x2'], node);\n  var y2 = R.pathOr(0, ['props', 'y2'], node);\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var x = R.pathOr(0, ['props', 'x'], node);\n  var y = R.pathOr(0, ['props', 'y'], node);\n  var width = R.pathOr(0, ['props', 'width'], node);\n  var height = R.pathOr(0, ['props', 'height'], node);\n  return [x, y, x + width, y + height];\n};\n\nvar max = R.reduce(R.max, -Infinity);\nvar min = R.reduce(R.min, Infinity);\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var points = R.compose(_parsePoints.default, R.pathOr([], ['props', 'points']))(node);\n  var xValues = R.pluck(0, points);\n  var yValues = R.pluck(1, points);\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar getBoundingBox = R.cond([[_isRect.default, getRectBoundingBox], [_isLine.default, getLineBoundingBox], [_isPath.default, getPathBoundingBox], [_isCircle.default, getCircleBoundingBox], [_isEllipse.default, getEllipseBoundingBox], [_isPolygon.default, getPolylineBoundingBox], [_isPolyline.default, getPolylineBoundingBox], [R.T, R.always([0, 0, 0, 0])]]);\nvar _default = getBoundingBox;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}