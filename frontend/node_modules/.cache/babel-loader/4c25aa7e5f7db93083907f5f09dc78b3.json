{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _standardFont = _interopRequireDefault(require(\"./standardFont\"));\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\nvar getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new _standardFont.default(name);\n  fontCache[name] = font;\n  return font;\n};\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n      runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n      var chars = string.slice(run.start, run.end);\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont); // If the default font does not have a glyph and the fallback font does, we use it\n\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run); // If anything that would impact res has changed, update it\n\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n        index += char.length;\n      }\n    }\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize(R.last(runs));\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\nvar _default = fontSubstitution;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_standardFont","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getOrCreateFont","name","font","getFallbackFont","shouldFallbackToFont","codePoint","includes","hasGlyphForCodePoint","fontSubstitution","_ref","string","runs","lastFont","lastFontSize","lastIndex","index","res","i","length","run","defaultFont","attributes","push","start","end","chars","slice","j","char","codePointAt","shouldFallback","fontSize","unitsPerEm","scale","_fontSize","last","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/text/fontSubstitution.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _standardFont = _interopRequireDefault(require(\"./standardFont\"));\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\nvar getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new _standardFont.default(name);\n  fontCache[name] = font;\n  return font;\n};\n\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\n\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\n\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n        runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n\n      var chars = string.slice(run.start, run.end);\n\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont); // If the default font does not have a glyph and the fallback font does, we use it\n\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run); // If anything that would impact res has changed, update it\n\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n\n        index += char.length;\n      }\n    }\n\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize(R.last(runs));\n\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar _default = fontSubstitution;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAErE,IAAIO,SAAS,GAAG,CAAC,CAAC;AAClB,IAAIC,mBAAmB,GAAG,CAAC,GAAG,CAAC;AAC/B,IAAIC,WAAW,GAAGJ,CAAC,CAACK,MAAM,CAAC,EAAE,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAE1D,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,IAAI,EAAE;EACnD,IAAIL,SAAS,CAACK,IAAI,CAAC,EAAE,OAAOL,SAAS,CAACK,IAAI,CAAC;EAC3C,IAAIC,IAAI,GAAG,IAAIP,aAAa,CAACL,OAAO,CAACW,IAAI,CAAC;EAC1CL,SAAS,CAACK,IAAI,CAAC,GAAGC,IAAI;EACtB,OAAOA,IAAI;AACb,CAAC;AAED,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;EAC/C,OAAOH,eAAe,CAAC,WAAW,CAAC;AACrC,CAAC;AAED,IAAII,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,SAAS,EAAEH,IAAI,EAAE;EACxE,OAAO,CAACA,IAAI,IAAI,CAACL,mBAAmB,CAACS,QAAQ,CAACD,SAAS,CAAC,IAAI,CAACH,IAAI,CAACK,oBAAoB,CAACF,SAAS,CAAC,IAAIF,eAAe,CAAC,CAAC,CAACI,oBAAoB,CAACF,SAAS,CAAC;AACxJ,CAAC;AAED,IAAIG,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;EACjD,OAAO,UAAUC,IAAI,EAAE;IACrB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACpBC,IAAI,GAAGF,IAAI,CAACE,IAAI;IACpB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,GAAG,GAAG,EAAE;IAEZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACvC,IAAIE,GAAG,GAAGR,IAAI,CAACM,CAAC,CAAC;MACjB,IAAIG,WAAW,GAAG,OAAOD,GAAG,CAACE,UAAU,CAACnB,IAAI,KAAK,QAAQ,GAAGF,eAAe,CAACmB,GAAG,CAACE,UAAU,CAACnB,IAAI,CAAC,GAAGiB,GAAG,CAACE,UAAU,CAACnB,IAAI;MAEtH,IAAIQ,MAAM,CAACQ,MAAM,KAAK,CAAC,EAAE;QACvBF,GAAG,CAACM,IAAI,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,GAAG,EAAE,CAAC;UACNH,UAAU,EAAE;YACVnB,IAAI,EAAEkB;UACR;QACF,CAAC,CAAC;QACF;MACF;MAEA,IAAIK,KAAK,GAAGf,MAAM,CAACgB,KAAK,CAACP,GAAG,CAACI,KAAK,EAAEJ,GAAG,CAACK,GAAG,CAAC;MAE5C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACP,MAAM,EAAES,CAAC,IAAI,CAAC,EAAE;QACxC,IAAIC,IAAI,GAAGH,KAAK,CAACE,CAAC,CAAC;QACnB,IAAItB,SAAS,GAAGuB,IAAI,CAACC,WAAW,CAAC,CAAC;QAClC,IAAIC,cAAc,GAAG1B,oBAAoB,CAACC,SAAS,EAAEe,WAAW,CAAC,CAAC,CAAC;;QAEnE,IAAIlB,IAAI,GAAG4B,cAAc,GAAG3B,eAAe,CAAC,CAAC,GAAGiB,WAAW;QAC3D,IAAIW,QAAQ,GAAGjC,WAAW,CAACqB,GAAG,CAAC,CAAC,CAAC;;QAEjC,IAAIjB,IAAI,KAAKU,QAAQ,IAAImB,QAAQ,KAAKlB,YAAY,IAAIX,IAAI,CAAC8B,UAAU,KAAKpB,QAAQ,CAACoB,UAAU,EAAE;UAC7F,IAAIpB,QAAQ,EAAE;YACZI,GAAG,CAACM,IAAI,CAAC;cACPC,KAAK,EAAET,SAAS;cAChBU,GAAG,EAAET,KAAK;cACVM,UAAU,EAAE;gBACVnB,IAAI,EAAEU,QAAQ;gBACdqB,KAAK,EAAEpB,YAAY,GAAGD,QAAQ,CAACoB;cACjC;YACF,CAAC,CAAC;UACJ;UAEApB,QAAQ,GAAGV,IAAI;UACfW,YAAY,GAAGkB,QAAQ;UACvBjB,SAAS,GAAGC,KAAK;QACnB;QAEAA,KAAK,IAAIa,IAAI,CAACV,MAAM;MACtB;IACF;IAEA,IAAIJ,SAAS,GAAGJ,MAAM,CAACQ,MAAM,EAAE;MAC7B,IAAIgB,SAAS,GAAGpC,WAAW,CAACJ,CAAC,CAACyC,IAAI,CAACxB,IAAI,CAAC,CAAC;MAEzCK,GAAG,CAACM,IAAI,CAAC;QACPC,KAAK,EAAET,SAAS;QAChBU,GAAG,EAAEd,MAAM,CAACQ,MAAM;QAClBG,UAAU,EAAE;UACVnB,IAAI,EAAEU,QAAQ;UACdqB,KAAK,EAAEC,SAAS,GAAGtB,QAAQ,CAACoB;QAC9B;MACF,CAAC,CAAC;IACJ;IAEA,OAAO;MACLtB,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEK;IACR,CAAC;EACH,CAAC;AACH,CAAC;AAED,IAAIoB,QAAQ,GAAG5B,gBAAgB;AAC/BhB,OAAO,CAACF,OAAO,GAAG8C,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}