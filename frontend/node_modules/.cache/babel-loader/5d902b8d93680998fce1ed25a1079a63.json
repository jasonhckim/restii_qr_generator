{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nvar heightAtLineIndex = function heightAtLineIndex(node, index) {\n  var counter = 0;\n  if (!node.lines) return counter;\n  for (var i = 0; i < index; i += 1) {\n    var line = node.lines[i];\n    if (!line) break;\n    counter += line.box.height;\n  }\n  return counter;\n};\nvar _default = heightAtLineIndex;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","heightAtLineIndex","node","index","counter","lines","i","line","box","height","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/text/heightAtLineIndex.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nvar heightAtLineIndex = function heightAtLineIndex(node, index) {\n  var counter = 0;\n  if (!node.lines) return counter;\n\n  for (var i = 0; i < index; i += 1) {\n    var line = node.lines[i];\n    if (!line) break;\n    counter += line.box.height;\n  }\n\n  return counter;\n};\n\nvar _default = heightAtLineIndex;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9D,IAAIC,OAAO,GAAG,CAAC;EACf,IAAI,CAACF,IAAI,CAACG,KAAK,EAAE,OAAOD,OAAO;EAE/B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,IAAI,CAAC,EAAE;IACjC,IAAIC,IAAI,GAAGL,IAAI,CAACG,KAAK,CAACC,CAAC,CAAC;IACxB,IAAI,CAACC,IAAI,EAAE;IACXH,OAAO,IAAIG,IAAI,CAACC,GAAG,CAACC,MAAM;EAC5B;EAEA,OAAOL,OAAO;AAChB,CAAC;AAED,IAAIM,QAAQ,GAAGT,iBAAiB;AAChCH,OAAO,CAACE,OAAO,GAAGU,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}