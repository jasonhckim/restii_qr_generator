{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/); // Handle \"initial\", \"inherit\", \"unset\".\n\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n  var parsed = [];\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n    if (transform) {\n      var _transform$split = transform.split('('),\n        name = _transform$split[0],\n        rawValue = _transform$split[1];\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n  return parsed;\n};\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n    value = _ref.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n            return Number.parseFloat(num);\n          }),\n          scaleX = _value$map[0],\n          _value$map$ = _value$map[1],\n          scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n    case 'rotate':\n      {\n        var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n        var _unitsRegexp$exec = unitsRegexp.exec(value),\n          angle = _unitsRegexp$exec[1],\n          unit = _unitsRegexp$exec[2];\n        var number = Number.parseFloat(angle);\n        return {\n          operation: 'rotate',\n          value: [unit === 'rad' ? number * 180 / Math.PI : number]\n        };\n      }\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\nvar _default = processTransform;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","parse","transformString","transforms","trim","split","length","parsed","i","transform","_transform$split","name","rawValue","splitChar","indexOf","value","map","val","push","operation","normalizeTransformOperation","_ref","_value$map","num","Number","parseFloat","scaleX","_value$map$","scaleY","unitsRegexp","_unitsRegexp$exec","exec","angle","unit","number","Math","PI","normalize","operations","processTransform","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/stylesheet/lib/transform/transform.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/); // Handle \"initial\", \"inherit\", \"unset\".\n\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n\n  var parsed = [];\n\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n\n    if (transform) {\n      var _transform$split = transform.split('('),\n          name = _transform$split[0],\n          rawValue = _transform$split[1];\n\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n\n  return parsed;\n};\n\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n      value = _ref.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n          return Number.parseFloat(num);\n        }),\n            scaleX = _value$map[0],\n            _value$map$ = _value$map[1],\n            scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n\n    case 'rotate':\n      {\n        var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n\n        var _unitsRegexp$exec = unitsRegexp.exec(value),\n            angle = _unitsRegexp$exec[1],\n            unit = _unitsRegexp$exec[2];\n\n        var number = Number.parseFloat(angle);\n        return {\n          operation: 'rotate',\n          value: [unit === 'rad' ? number * 180 / Math.PI : number]\n        };\n      }\n\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\n\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\n\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar _default = processTransform;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}