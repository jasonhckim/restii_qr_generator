{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\n/* eslint-disable no-param-reassign */\nvar SAFETY_HEIGHT = 10;\nvar getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n  var nil = function nil() {\n    return ctx;\n  };\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n  var moveTo = R.compose(nil, addPoint);\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return nil();\n  }; // Change dimensions\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n  ctx.getWidth = function () {\n    return R.compose(getMax, R.pluck(0))(points);\n  };\n  ctx.getHeight = function () {\n    return R.compose(getMax, R.pluck(1))(points);\n  };\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\nvar measureCanvas = function measureCanvas(page, node) {\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  var ctx = measureCtx();\n  node.props.paint(ctx);\n  var width = ctx.getWidth();\n  var height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height: height,\n    width: width\n  };\n};\nvar _default = R.curryN(6, measureCanvas);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_getMargin","_getPadding","_isHeightAuto","SAFETY_HEIGHT","getMax","reduce","max","Infinity","measureCtx","ctx","points","nil","addPoint","x","y","push","moveTo","compose","rect","w","h","ellipse","rx","ry","polygon","apply","arguments","lineTo","circle","roundedRect","text","path","lineWidth","bezierCurveTo","quadraticCurveTo","scale","rotate","translate","dash","clip","save","fill","font","stroke","lineCap","opacity","restore","lineJoin","fontSize","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","pluck","getHeight","measureCanvas","page","node","imageMargin","pagePadding","pageArea","box","height","paddingTop","paddingBottom","marginTop","marginBottom","props","paint","width","Math","min","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/canvas/measureCanvas.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\n/* eslint-disable no-param-reassign */\nvar SAFETY_HEIGHT = 10;\nvar getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = R.compose(nil, addPoint);\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return nil();\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return R.compose(getMax, R.pluck(0))(points);\n  };\n\n  ctx.getHeight = function () {\n    return R.compose(getMax, R.pluck(1))(points);\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  var ctx = measureCtx();\n  node.props.paint(ctx);\n  var width = ctx.getWidth();\n  var height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}