{"ast":null,"code":"import r from 'restructure';\nimport _createForOfIteratorHelperLoose from '@babel/runtime/helpers/createForOfIteratorHelperLoose';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _applyDecoratedDescriptor from '@babel/runtime/helpers/applyDecoratedDescriptor';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\nfontkit.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n};\nfontkit.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n};\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n      return font;\n    }\n  }\n  throw new Error('Unknown font format');\n};\nfontkit.defaultLanguage = 'en';\nfontkit.setDefaultLanguage = function (lang) {\n  if (lang === void 0) {\n    lang = 'en';\n  }\n  fontkit.defaultLanguage = lang;\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n});\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID, languageID) {\n  if (languageID === void 0) {\n    languageID = 0;\n  }\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\nvar ENCODINGS = [\n// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n// macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'],\n// ISO (deprecated)\n['ascii'],\n// windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [\n// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n},\n// ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName',\n// Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null,\n// reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\nNameTable.process = function (stream) {\n  var records = {};\n  for (var _iterator = _createForOfIteratorHelperLoose(this.records), _step; !(_step = _iterator()).done;) {\n    var record = _step.value;\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n    if (records[key] == null) {\n      records[key] = {};\n    }\n    var obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n  this.records = records;\n};\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [\n    // Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [\n    // bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\nvar glyf = new r.Array(new r.Buffer());\nvar CFFIndex = /*#__PURE__*/function () {\n  function CFFIndex(type) {\n    this.type = type;\n  }\n  var _proto = CFFIndex.prototype;\n  _proto.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n    return ctx ? ctx.version : -1;\n  };\n  _proto.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n    if (count === 0) {\n      return [];\n    }\n    var offSize = stream.readUInt8();\n    var offsetType;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n      start = end;\n    }\n    stream.pos = startPos + start;\n    return ret;\n  };\n  _proto.size = function size(arr, parent) {\n    var size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n    var offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n  _proto.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {\n      var item = _step.value;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n    var offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n    for (var _i = 0, _sizes = sizes; _i < _sizes.length; _i++) {\n      var size = _sizes[_i];\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n    for (var _iterator2 = _createForOfIteratorHelperLoose(arr), _step2; !(_step2 = _iterator2()).done;) {\n      var _item = _step2.value;\n      type.encode(stream, _item, parent);\n    }\n    return;\n  };\n  return CFFIndex;\n}();\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\nvar CFFOperand = /*#__PURE__*/function () {\n  function CFFOperand() {}\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n    if (value === 30) {\n      var str = '';\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n2];\n      }\n      return parseFloat(str);\n    }\n    return null;\n  };\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n  return CFFOperand;\n}();\nvar CFFDict = /*#__PURE__*/function () {\n  function CFFDict(ops) {\n    if (ops === void 0) {\n      ops = [];\n    }\n    this.ops = ops;\n    this.fields = {};\n    for (var _iterator = _createForOfIteratorHelperLoose(ops), _step; !(_step = _iterator()).done;) {\n      var field = _step.value;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n  var _proto = CFFDict.prototype;\n  _proto.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  };\n  _proto.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n  _proto.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n        var _field = this.fields[b];\n        if (!_field) {\n          throw new Error(\"Unknown operator \" + b);\n        }\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n    return ret;\n  };\n  _proto.size = function size(dict, parent, includePointers) {\n    if (includePointers === void 0) {\n      includePointers = true;\n    }\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n      for (var _iterator2 = _createForOfIteratorHelperLoose(operands), _step2; !(_step2 = _iterator2()).done;) {\n        var op = _step2.value;\n        len += CFFOperand.size(op);\n      }\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n    return len;\n  };\n  _proto.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.ops), _step3; !(_step3 = _iterator3()).done;) {\n      var field = _step3.value;\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (var _iterator4 = _createForOfIteratorHelperLoose(operands), _step4; !(_step4 = _iterator4()).done;) {\n        var op = _step4.value;\n        CFFOperand.encode(stream, op);\n      }\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (var _iterator5 = _createForOfIteratorHelperLoose(key), _step5; !(_step5 = _iterator5()).done;) {\n        var _op = _step5.value;\n        stream.writeUInt8(_op);\n      }\n    }\n    var i = 0;\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n    return;\n  };\n  return CFFDict;\n}();\nvar CFFPointer = /*#__PURE__*/function (_r$Pointer) {\n  _inheritsLoose(CFFPointer, _r$Pointer);\n  function CFFPointer(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (options.type == null) {\n      options.type = 'global';\n    }\n    return _r$Pointer.call(this, null, type, options) || this;\n  }\n  var _proto = CFFPointer.prototype;\n  _proto.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n  _proto.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n    return [new Ptr(ptr)];\n  };\n  return CFFPointer;\n}(r.Pointer);\nvar Ptr = /*#__PURE__*/function () {\n  function Ptr(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n  var _proto2 = Ptr.prototype;\n  _proto2.valueOf = function valueOf() {\n    return this.val;\n  };\n  return Ptr;\n}();\nvar CFFBlendOp = /*#__PURE__*/function () {\n  function CFFBlendOp() {}\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n  return CFFBlendOp;\n}();\nvar CFFPrivateDict = new CFFDict([\n// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _[\"axisIndex\"] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = /*#__PURE__*/function () {\n  function PredefinedOp(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n  var _proto = PredefinedOp.prototype;\n  _proto.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n    return this.type.decode(stream, parent, operands);\n  };\n  _proto.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n  _proto.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n    return this.type.encode(stream, value, ctx);\n  };\n  return PredefinedOp;\n}();\nvar CFFEncodingVersion = /*#__PURE__*/function (_r$Number) {\n  _inheritsLoose(CFFEncodingVersion, _r$Number);\n  function CFFEncodingVersion() {\n    return _r$Number.call(this, 'UInt8') || this;\n  }\n  var _proto2 = CFFEncodingVersion.prototype;\n  _proto2.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n  return CFFEncodingVersion;\n}(r.Number);\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  } // TODO: supplement?\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(RangeArray, _r$Array);\n  function RangeArray() {\n    return _r$Array.apply(this, arguments) || this;\n  }\n  var _proto3 = RangeArray.prototype;\n  _proto3.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n    return res;\n  };\n  return RangeArray;\n}(r.Array);\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\nvar CFFPrivateOp = /*#__PURE__*/function () {\n  function CFFPrivateOp() {}\n  var _proto4 = CFFPrivateOp.prototype;\n  _proto4.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n  _proto4.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n  _proto4.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n  return CFFPrivateOp;\n}();\nvar FontDict = new CFFDict([\n// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([\n// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null],\n// CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\nvar CFFFont = /*#__PURE__*/function () {\n  function CFFFont(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n  var _proto = CFFFont.prototype;\n  _proto.decode = function decode() {\n    this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n      this.topDict = this.topDictIndex[0];\n    }\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n  _proto.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n    return this.stringIndex[sid - standardStrings.length];\n  };\n  _proto.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n  _proto.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n    if (this.isCIDFont) {\n      return null;\n    }\n    var charset = this.topDict.charset;\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n    if (gid === 0) {\n      return '.notdef';\n    }\n    gid -= 1;\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n    return null;\n  };\n  _proto.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n        while (low <= high) {\n          var mid = low + high >> 1;\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error(\"Unknown FDSelect version: \" + this.topDict.FDSelect.version);\n    }\n  };\n  _proto.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n      return null;\n    }\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n    return this.topDict.FDArray[0].Private;\n  };\n  _createClass(CFFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\nvar ByteAligned = function ByteAligned() {};\nvar BitAligned = function BitAligned() {};\nnew r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis$1 = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis$1),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis$1) // May be NULL\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\nvar ValueRecord = /*#__PURE__*/function () {\n  function ValueRecord(key) {\n    if (key === void 0) {\n      key = 'valueFormat';\n    }\n    this.key = key;\n  }\n  var _proto = ValueRecord.prototype;\n  _proto.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n    if (!struct[this.key]) return;\n    var fields = {};\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n    var format = struct[this.key];\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n    return new r.Struct(fields);\n  };\n  _proto.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n  _proto.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n  return ValueRecord;\n}();\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n}); // export GPOSLookup for JSTF table\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\nvar VariableSizeNumber = /*#__PURE__*/function () {\n  function VariableSizeNumber(size) {\n    this._size = size;\n  }\n  var _proto = VariableSizeNumber.prototype;\n  _proto.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n      case 2:\n        return stream.readUInt16BE();\n      case 3:\n        return stream.readUInt24BE();\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n  _proto.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n  return VariableSizeNumber;\n}();\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [\n  // Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable$1 = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal',\n    // 1 if table has horizontal data, 0 if vertical\n    'minimum',\n    // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream',\n    // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation',\n    // Set if table has variation kerning values\n    'crossStream',\n    // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\n\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\n\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\n\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n});\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac$1,\n  toCoord: shortFrac$1\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\nvar UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n  var _proto = UnboundedArrayAccessor.prototype;\n  _proto.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n    return this._items[index];\n  };\n  _proto.inspect = function inspect() {\n    return \"[UnboundedArray \" + this.type.constructor.name + \"]\";\n  };\n  return UnboundedArrayAccessor;\n}();\nvar UnboundedArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(UnboundedArray, _r$Array);\n  function UnboundedArray(type) {\n    return _r$Array.call(this, type, 0) || this;\n  }\n  var _proto2 = UnboundedArray.prototype;\n  _proto2.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n  return UnboundedArray;\n}(r.Array);\nvar LookupTable = function LookupTable(ValueType) {\n  if (ValueType === void 0) {\n    ValueType = r.uint16;\n  }\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      this.type = type;\n    }\n    var _proto3 = Shadow.prototype;\n    _proto3.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n    _proto3.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n    _proto3.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n    return Shadow;\n  }();\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\nfunction StateTable(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\nfunction StateTable1(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\nvar Offset = /*#__PURE__*/function () {\n  function Offset() {}\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n  return Offset;\n}();\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\ntables.HVAR = HVAR; // Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\nDirectory.process = function () {\n  var tables = {};\n  for (var _iterator = _createForOfIteratorHelperLoose(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n  this.tables = tables;\n};\nDirectory.preEncode = function (stream) {\n  var tables$1 = [];\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n    if (table) {\n      tables$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n  this.tag = 'true';\n  this.numTables = tables$1.length;\n  this.tables = tables$1;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n  return -1;\n}\nfunction range(index, end) {\n  var range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\nvar _class$4;\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\nvar CmapProcessor = (_class$4 = /*#__PURE__*/function () {\n  function CmapProcessor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n    // 32-bit subtables\n    [3, 10], [0, 6], [0, 4],\n    // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = _createForOfIteratorHelperLoose(cmapTable.tables), _step; !(_step = _iterator()).done;) {\n        var cmap = _step.value;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n  var _proto = CmapProcessor.prototype;\n  _proto.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(pairs), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n        platformID = _step2$value[0],\n        encodingID = _step2$value[1];\n      for (var _iterator3 = _createForOfIteratorHelperLoose(cmapTable.tables), _step3; !(_step3 = _iterator3()).done;) {\n        var cmap = _step3.value;\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n    return null;\n  };\n  _proto.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n          while (min <= max) {\n            var mid = min + max >> 1;\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n              var _gid = void 0;\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n              return _gid & 0xffff;\n            }\n          }\n          return 0;\n        }\n      case 8:\n        throw new Error('TODO: cmap format 8');\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n          var _max = cmap.nGroups - 1;\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n            var group = cmap.groups.get(_mid);\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n          return 0;\n        }\n      case 14:\n        throw new Error('TODO: cmap format 14');\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n  _proto.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n    return 0;\n  };\n  _proto.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n          return res;\n        }\n      case 8:\n        throw new Error('TODO: cmap format 8');\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n      case 12:\n      case 13:\n        {\n          var _res = [];\n          for (var _iterator4 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step4; !(_step4 = _iterator4()).done;) {\n            var group = _step4.value;\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n          return _res;\n        }\n      case 14:\n        throw new Error('TODO: cmap format 14');\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n  _proto.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n          return res;\n        }\n      case 4:\n        {\n          var _res2 = [];\n          for (var _i = 0; _i < cmap.segCount; _i++) {\n            var end = cmap.endCode.get(_i);\n            var start = cmap.startCode.get(_i);\n            var rangeOffset = cmap.idRangeOffset.get(_i);\n            var delta = cmap.idDelta.get(_i);\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n          return _res2;\n        }\n      case 12:\n        {\n          var _res3 = [];\n          for (var _iterator5 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step5; !(_step5 = _iterator5()).done;) {\n            var group = _step5.value;\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n          return _res3;\n        }\n      case 13:\n        {\n          var _res4 = [];\n          for (var _iterator6 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step6; !(_step6 = _iterator6()).done;) {\n            var _group = _step6.value;\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n          return _res4;\n        }\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor(_class$4.prototype, \"getCharacterSet\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"getCharacterSet\"), _class$4.prototype), _applyDecoratedDescriptor(_class$4.prototype, \"codePointsForGlyph\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"codePointsForGlyph\"), _class$4.prototype), _class$4);\nvar KernProcessor = /*#__PURE__*/function () {\n  function KernProcessor(font) {\n    this.kern = font.kern;\n  }\n  var _proto = KernProcessor.prototype;\n  _proto.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n  _proto.getKerning = function getKerning(left, right) {\n    var res = 0;\n    for (var _iterator = _createForOfIteratorHelperLoose(this.kern.tables), _step; !(_step = _iterator()).done;) {\n      var table = _step.value;\n      if (table.coverage.crossStream) {\n        continue;\n      }\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n          break;\n        default:\n          throw new Error(\"Unsupported kerning table version \" + table.version);\n      }\n      var val = 0;\n      var s = table.subtable;\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n          break;\n        case 2:\n          var leftOffset = 0,\n            rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n        default:\n          throw new Error(\"Unsupported kerning sub-table format \" + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n    return res;\n  };\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = /*#__PURE__*/function () {\n  function UnicodeLayoutEngine(font) {\n    this.font = font;\n  }\n  var _proto = UnicodeLayoutEngine.prototype;\n  _proto.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n        clusterStart = clusterEnd = index;\n      }\n    }\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n    return positions;\n  };\n  _proto.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n    return;\n  };\n  _proto.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n      case 'CCC26':\n        // point varika\n        return 'Above';\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n    return combiningClass;\n  };\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = /*#__PURE__*/function () {\n  function BBox(minX, minY, maxX, maxY) {\n    if (minX === void 0) {\n      minX = Infinity;\n    }\n    if (minY === void 0) {\n      minY = Infinity;\n    }\n    if (maxX === void 0) {\n      maxX = -Infinity;\n    }\n    if (maxY === void 0) {\n      maxY = -Infinity;\n    }\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n  var _proto = BBox.prototype;\n  _proto.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n  _proto.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}();\n\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tag), _step; !(_step = _iterator()).done;) {\n      var t = _step.value;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n    var _script = unicode.getScript(code);\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n  return UNICODE_SCRIPTS.Unknown;\n}\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n    var _script2 = unicode.getScript(codePoint);\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n};\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n  return 'ltr';\n}\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = /*#__PURE__*/function () {\n  function GlyphRun(glyphs, features, script, language, direction$1) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = _createForOfIteratorHelperLoose(features), _step; !(_step = _iterator()).done;) {\n        var tag = _step.value;\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n  _createClass(GlyphRun, [{\n    key: \"advanceWidth\",\n    get: function get() {\n      var width = 0;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.positions), _step2; !(_step2 = _iterator2()).done;) {\n        var position = _step2.value;\n        width += position.xAdvance;\n      }\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.positions), _step3; !(_step3 = _iterator3()).done;) {\n        var position = _step3.value;\n        height += position.yAdvance;\n      }\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition(xAdvance, yAdvance, xOffset, yOffset) {\n  if (xAdvance === void 0) {\n    xAdvance = 0;\n  }\n  if (yAdvance === void 0) {\n    yAdvance = 0;\n  }\n  if (xOffset === void 0) {\n    xOffset = 0;\n  }\n  if (yOffset === void 0) {\n    yOffset = 0;\n  }\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping[\"cv\" + (\"00\" + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\nvar AATMapping = {};\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\nfunction mapOTToAAT(features) {\n  var res = {};\n  for (var k in features) {\n    var r = void 0;\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n    setting = f[1];\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\nfunction mapAATToOT(features) {\n  var res = {};\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if (typeof features === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n      for (var setting in _feature) {\n        var _r = void 0;\n        var _f = mapFeatureStrings([type, setting]);\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n  return Object.keys(res);\n}\nvar _class$3;\nvar AATLookupTable = (_class$3 = /*#__PURE__*/function () {\n  function AATLookupTable(table) {\n    this.table = table;\n  }\n  var _proto = AATLookupTable.prototype;\n  _proto.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n          return null;\n        }\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n          return null;\n        }\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n  };\n  _proto.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = _createForOfIteratorHelperLoose(this.table.segments), _step; !(_step = _iterator()).done;) {\n            var segment = _step.value;\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n          break;\n        }\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = _createForOfIteratorHelperLoose(this.table.segments), _step2; !(_step2 = _iterator2()).done;) {\n            var _segment = _step2.value;\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n          break;\n        }\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n          break;\n        }\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n    return res;\n  };\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor(_class$3.prototype, \"glyphsForValue\", [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, \"glyphsForValue\"), _class$3.prototype), _class$3);\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\nvar AATStateMachine = /*#__PURE__*/function () {\n  function AATStateMachine(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n  var _proto = AATStateMachine.prototype;\n  _proto.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n    return glyphs;\n  }\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */;\n  _proto.traverse = function traverse(opts, state, visited) {\n    if (state === void 0) {\n      state = 0;\n    }\n    if (visited === void 0) {\n      visited = new Set();\n    }\n    if (visited.has(state)) {\n      return;\n    }\n    visited.add(state);\n    var _this$stateTable = this.stateTable,\n      nClasses = _this$stateTable.nClasses,\n      stateArray = _this$stateTable.stateArray,\n      entryTable = _this$stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.lookupTable.glyphsForValue(classCode)), _step; !(_step = _iterator()).done;) {\n        var glyph = _step.value;\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n  return AATStateMachine;\n}();\nvar _class$2;\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = /*#__PURE__*/function () {\n  function AATMorxProcessor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n  var _proto = AATMorxProcessor.prototype;\n  _proto.process = function process(glyphs, features) {\n    if (features === void 0) {\n      features = {};\n    }\n    for (var _iterator = _createForOfIteratorHelperLoose(this.morx.chains), _step; !(_step = _iterator()).done;) {\n      var chain = _step.value;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(chain.features), _step2; !(_step2 = _iterator2()).done;) {\n        var feature = _step2.value;\n        var f = void 0;\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n      for (var _iterator3 = _createForOfIteratorHelperLoose(chain.subtables), _step3; !(_step3 = _iterator3()).done;) {\n        var subtable = _step3.value;\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n    var index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n      index--;\n    }\n    return glyphs;\n  };\n  _proto.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n  _proto.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n  _proto.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error(\"Invalid morx subtable type: \" + this.subtable.type);\n    }\n  };\n  _proto.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n  _proto.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n      var _lookupTable = new AATLookupTable(_lookup);\n      glyph = this.glyphs[index];\n      var gid = _lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n  _proto.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n    if (entry.flags & PERFORM_ACTION) {\n      var _this$ligatureStack;\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n      while (!last) {\n        var _codePoints;\n        var componentGlyph = this.ligatureStack.pop();\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n      (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n    }\n  };\n  _proto.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n  _proto._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _this$glyphs;\n    var insertions = [];\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n    if (!isBefore) {\n      glyphIndex++;\n    }\n    (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n  };\n  _proto.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n  _proto.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.morx.chains), _step4; !(_step4 = _iterator4()).done;) {\n      var chain = _step4.value;\n      for (var _iterator5 = _createForOfIteratorHelperLoose(chain.features), _step5; !(_step5 = _iterator5()).done;) {\n        var feature = _step5.value;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n    return features;\n  };\n  _proto.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n    return this.inputCache[gid] || [];\n  };\n  _proto.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n    for (var _iterator6 = _createForOfIteratorHelperLoose(this.morx.chains), _step6; !(_step6 = _iterator6()).done;) {\n      var chain = _step6.value;\n      var flags = chain.defaultFlags;\n      for (var _iterator7 = _createForOfIteratorHelperLoose(chain.subtables), _step7; !(_step7 = _iterator7()).done;) {\n        var subtable = _step7.value;\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n  _proto.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor(_class$2.prototype, \"getStateMachine\", [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, \"getStateMachine\"), _class$2.prototype), _class$2);\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction swap(glyphs, rangeA, rangeB, reverseA, reverseB) {\n  if (reverseA === void 0) {\n    reverseA = false;\n  }\n  if (reverseB === void 0) {\n    reverseB = false;\n  }\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n  if (reverseA) {\n    start.reverse();\n  }\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n    default:\n      throw new Error(\"Unknown verb: \" + verb);\n  }\n}\nvar AATLayoutEngine = /*#__PURE__*/function () {\n  function AATLayoutEngine(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n  var _proto = AATLayoutEngine.prototype;\n  _proto.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n    for (var _iterator = _createForOfIteratorHelperLoose(glyphStrings), _step; !(_step = _iterator()).done;) {\n      var glyphs = _step.value;\n      this._addStrings(glyphs, 0, result, '');\n    }\n    return result;\n  };\n  _proto._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n    for (var _iterator2 = _createForOfIteratorHelperLoose(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      var s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n  return AATLayoutEngine;\n}();\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = /*#__PURE__*/function () {\n  function ShapingPlan(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n  var _proto = ShapingPlan.prototype;\n  _proto._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n    for (var _iterator = _createForOfIteratorHelperLoose(features), _step; !(_step = _iterator()).done;) {\n      var feature = _step.value;\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n  /**\n   * Add features to the last stage\n   */;\n  _proto.add = function add(arg, global) {\n    if (global === void 0) {\n      global = true;\n    }\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n  /**\n   * Add a new stage\n   */;\n  _proto.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n  _proto.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n  /**\n   * Assigns the global features to the given glyphs\n   */;\n  _proto.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var glyph = _step2.value;\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */;\n  _proto.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.stages), _step3; !(_step3 = _iterator3()).done;) {\n      var stage = _step3.value;\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n  return ShapingPlan;\n}();\n\n// Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\nvar DefaultShaper = /*#__PURE__*/function () {\n  function DefaultShaper() {}\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n    this.assignFeatures(_plan, glyphs);\n  };\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n  return DefaultShaper;\n}();\nDefaultShaper.zeroMarkWidths = 'AFTER_GPOS';\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 1, 240, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 253, 1, 2, 254, 237, 154, 45, 76, 196, 48, 20, 199, 187, 237, 190, 56, 64, 129, 192, 224, 144, 72, 4, 2, 121, 151, 16, 18, 12, 9, 134, 132, 115, 40, 4, 138, 160, 80, 224, 80, 36, 8, 78, 34, 145, 72, 12, 138, 32, 73, 72, 8, 18, 137, 68, 18, 12, 201, 253, 47, 215, 146, 151, 166, 221, 117, 215, 110, 131, 219, 123, 201, 47, 237, 173, 235, 235, 123, 237, 235, 219, 186, 92, 55, 22, 98, 27, 236, 130, 125, 208, 149, 191, 255, 75, 121, 12, 78, 193, 25, 184, 0, 151, 160, 15, 110, 192, 45, 184, 3, 247, 224, 1, 60, 145, 126, 207, 224, 77, 254, 30, 242, 14, 62, 100, 253, 83, 150, 95, 164, 157, 153, 78, 126, 192, 181, 164, 158, 8, 49, 15, 22, 146, 242, 237, 42, 138, 37, 248, 186, 44, 253, 93, 169, 144, 223, 12, 195, 48, 12, 195, 48, 12, 195, 48, 12, 195, 84, 143, 225, 247, 159, 85, 254, 254, 193, 48, 12, 195, 48, 12, 195, 48, 185, 114, 53, 51, 98, 49, 39, 94, 193, 92, 91, 136, 14, 56, 7, 143, 224, 187, 61, 106, 91, 159, 21, 98, 83, 8, 209, 107, 9, 209, 111, 141, 234, 69, 240, 210, 202, 111, 62, 215, 112, 134, 217, 48, 156, 99, 58, 184, 182, 149, 225, 124, 179, 131, 123, 247, 60, 207, 67, 61, 244, 63, 176, 232, 56, 196, 245, 163, 138, 156, 183, 212, 255, 11, 78, 166, 212, 223, 78, 28, 253, 194, 194, 82, 101, 137, 44, 208, 118, 83, 61, 148, 212, 164, 222, 68, 163, 102, 40, 117, 76, 125, 178, 66, 251, 253, 37, 161, 54, 81, 31, 245, 185, 114, 241, 47, 4, 147, 204, 109, 17, 36, 90, 221, 197, 15, 83, 92, 169, 118, 65, 74, 155, 132, 216, 7, 116, 60, 23, 161, 62, 211, 107, 62, 210, 4, 117, 131, 254, 134, 36, 109, 253, 93, 99, 34, 33, 58, 245, 126, 13, 79, 251, 149, 100, 141, 207, 80, 113, 61, 110, 110, 76, 237, 227, 198, 117, 149, 178, 247, 157, 111, 236, 217, 250, 143, 203, 245, 89, 98, 143, 222, 107, 122, 182, 217, 236, 138, 12, 122, 84, 222, 213, 115, 69, 104, 153, 36, 134, 169, 109, 166, 24, 211, 245, 154, 230, 79, 151, 178, 223, 140, 213, 26, 40, 209, 109, 12, 101, 95, 217, 251, 196, 244, 238, 213, 148, 20, 185, 143, 125, 247, 115, 154, 127, 121, 234, 14, 169, 203, 53, 71, 248, 72, 168, 53, 139, 39, 180, 211, 150, 75, 34, 173, 84, 245, 72, 142, 229, 242, 78, 24, 167, 232, 55, 141, 167, 198, 114, 181, 53, 68, 206, 165, 246, 216, 124, 209, 115, 169, 158, 83, 125, 237, 176, 205, 99, 136, 184, 179, 173, 65, 209, 40, 191, 138, 150, 180, 184, 115, 37, 235, 58, 132, 142, 81, 95, 9, 153, 191, 76, 207, 10, 155, 52, 3, 142, 107, 147, 1];\nvar trieData$2 = {\n  type: type$2,\n  data: data$2\n};\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE$1 = [\n//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]],\n// State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]],\n// State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]],\n// State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]],\n// State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]],\n// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]],\n// State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(ArabicShaper, _DefaultShaper);\n  function ArabicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n    plan.addStage('mset');\n  };\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n        prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n  return ArabicShaper;\n}(DefaultShaper);\nfunction getShapingClass(codePoint) {\n  var res = trie$2.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n  var category = unicode.getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n  return ShapingClasses.Non_Joining;\n}\nvar GlyphIterator = /*#__PURE__*/function () {\n  function GlyphIterator(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n  var _proto = GlyphIterator.prototype;\n  _proto.reset = function reset(options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (index === void 0) {\n      index = 0;\n    }\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n  _proto.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n  _proto.move = function move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n    return this.glyphs[this.index];\n  };\n  _proto.next = function next() {\n    return this.move(+1);\n  };\n  _proto.prev = function prev() {\n    return this.move(-1);\n  };\n  _proto.peek = function peek(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n  _proto.peekIndex = function peekIndex(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n  _proto.increment = function increment(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n    return this.glyphs[this.index];\n  };\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\nvar OTProcessor = /*#__PURE__*/function () {\n  function OTProcessor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n  var _proto = OTProcessor.prototype;\n  _proto.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n    for (var _iterator = _createForOfIteratorHelperLoose(script), _step; !(_step = _iterator()).done;) {\n      var s = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.table.scriptList), _step2; !(_step2 = _iterator2()).done;) {\n        var entry = _step2.value;\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n    return null;\n  };\n  _proto.selectScript = function selectScript(script, language, direction$1) {\n    var changed = false;\n    var entry;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n      if (!entry) {\n        return this.scriptTag;\n      }\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n    if (!direction$1 || direction$1 !== this.direction) {\n      this.direction = direction$1 || direction(script);\n    }\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.script.langSysRecords), _step3; !(_step3 = _iterator3()).done;) {\n        var lang = _step3.value;\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n      changed = true;\n    } // Build a feature lookup table\n\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(this.language.featureIndexes), _step4; !(_step4 = _iterator4()).done;) {\n          var featureIndex = _step4.value;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n    return this.scriptTag;\n  };\n  _proto.lookupsForFeatures = function lookupsForFeatures(userFeatures, exclude) {\n    if (userFeatures === void 0) {\n      userFeatures = [];\n    }\n    var lookups = [];\n    for (var _iterator5 = _createForOfIteratorHelperLoose(userFeatures), _step5; !(_step5 = _iterator5()).done;) {\n      var tag = _step5.value;\n      var feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n      for (var _iterator6 = _createForOfIteratorHelperLoose(feature.lookupListIndexes), _step6; !(_step6 = _iterator6()).done;) {\n        var lookupIndex = _step6.value;\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n  _proto.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n    for (var _iterator7 = _createForOfIteratorHelperLoose(substitutions), _step7; !(_step7 = _iterator7()).done;) {\n      var substitution = _step7.value;\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n    return null;\n  };\n  _proto.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n    var records = variations.featureVariationRecords;\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  _proto.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n  _proto.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n    for (var _iterator8 = _createForOfIteratorHelperLoose(lookups), _step8; !(_step8 = _iterator8()).done;) {\n      var _step8$value = _step8.value,\n        feature = _step8$value.feature,\n        lookup = _step8$value.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n        for (var _iterator9 = _createForOfIteratorHelperLoose(lookup.subTables), _step9; !(_step9 = _iterator9()).done;) {\n          var table = _step9.value;\n          var res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n        this.glyphIterator.next();\n      }\n    }\n  };\n  _proto.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n  _proto.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n    for (var _iterator10 = _createForOfIteratorHelperLoose(lookupRecords), _step10; !(_step10 = _iterator10()).done;) {\n      var lookupRecord = _step10.value;\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = _createForOfIteratorHelperLoose(lookup.subTables), _step11; !(_step11 = _iterator11()).done;) {\n        var table = _step11.value;\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n  _proto.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n      case 2:\n        for (var _iterator12 = _createForOfIteratorHelperLoose(coverage.rangeRecords), _step12; !(_step12 = _iterator12()).done;) {\n          var range = _step12.value;\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n        break;\n    }\n    return -1;\n  };\n  _proto.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n    return matched || true;\n  };\n  _proto.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n  _proto.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n      return component === glyph.id;\n    }, []);\n  };\n  _proto.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n  _proto.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n        break;\n      case 2:\n        for (var _iterator13 = _createForOfIteratorHelperLoose(classDef.classRangeRecord), _step13; !(_step13 = _iterator13()).done;) {\n          var range = _step13.value;\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n        break;\n    }\n    return 0;\n  };\n  _proto.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n  _proto.applyContext = function applyContext(table) {\n    var index;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n        var set = table.ruleSets[index];\n        for (var _iterator14 = _createForOfIteratorHelperLoose(set), _step14; !(_step14 = _iterator14()).done;) {\n          var rule = _step14.value;\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n        break;\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n        set = table.classSet[index];\n        for (var _iterator15 = _createForOfIteratorHelperLoose(set), _step15; !(_step15 = _iterator15()).done;) {\n          var _rule = _step15.value;\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n        break;\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n        break;\n    }\n    return false;\n  };\n  _proto.applyChainingContext = function applyChainingContext(table) {\n    var index;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n        var set = table.chainRuleSets[index];\n        for (var _iterator16 = _createForOfIteratorHelperLoose(set), _step16; !(_step16 = _iterator16()).done;) {\n          var rule = _step16.value;\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n        break;\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n        for (var _iterator17 = _createForOfIteratorHelperLoose(rules), _step17; !(_step17 = _iterator17()).done;) {\n          var _rule2 = _step17.value;\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n        break;\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n        break;\n    }\n    return false;\n  };\n  return OTProcessor;\n}();\nvar GlyphInfo = /*#__PURE__*/function () {\n  function GlyphInfo(font, id, codePoints, features) {\n    if (codePoints === void 0) {\n      codePoints = [];\n    }\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n  var _proto = GlyphInfo.prototype;\n  _proto.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n  _createClass(GlyphInfo, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n  return GlyphInfo;\n}();\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\nvar HangulShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(HangulShaper, _DefaultShaper);\n  function HangulShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n      i++;\n    }\n  };\n  return HangulShaper;\n}(DefaultShaper);\nHangulShaper.zeroMarkWidths = 'NONE';\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\nvar isCombiningT = function isCombiningT(code) {\n  return 1 <= code && code <= T_END;\n}; // Character categories\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n  if (isV(code)) {\n    return V;\n  }\n  if (isT(code)) {\n    return T;\n  }\n  if (isLV(code)) {\n    return LV;\n  }\n  if (isLVT(code)) {\n    return LVT;\n  }\n  if (isTone(code)) {\n    return M;\n  }\n  return X;\n} // State machine actions\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE = [\n//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n// State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n// State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]],\n// State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv, ljmo, vjmo, tjmo;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n  return i;\n}\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n  return i;\n}\nvar INITIAL_STATE = 1;\nvar FAIL_STATE = 0;\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\n\nvar StateMachine = /*#__PURE__*/function () {\n  function StateMachine(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n\n  var _proto = StateMachine.prototype;\n  _proto.match = function match(str) {\n    var _ref;\n    var self = this;\n    return _ref = {}, _ref[Symbol.iterator] = /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var state, startRun, lastAccepting, lastState, p, c;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = INITIAL_STATE;\n              startRun = null;\n              lastAccepting = null;\n              lastState = null;\n              p = 0;\n            case 5:\n              if (!(p < str.length)) {\n                _context.next = 21;\n                break;\n              }\n              c = str[p];\n              lastState = state;\n              state = self.stateTable[state][c];\n              if (!(state === FAIL_STATE)) {\n                _context.next = 15;\n                break;\n              }\n              if (!(startRun != null && lastAccepting != null && lastAccepting >= startRun)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 13;\n              return [startRun, lastAccepting, self.tags[lastState]];\n            case 13:\n              // reset the state as if we started over from the initial state\n              state = self.stateTable[INITIAL_STATE][c];\n              startRun = null;\n            case 15:\n              // start a run if not in the failure state\n              if (state !== FAIL_STATE && startRun == null) {\n                startRun = p;\n              } // if accepting, mark the potential match end\n\n              if (self.accepting[state]) {\n                lastAccepting = p;\n              } // reset the state to the initial state if we get into the failure state\n\n              if (state === FAIL_STATE) {\n                state = INITIAL_STATE;\n              }\n            case 18:\n              p++;\n              _context.next = 5;\n              break;\n            case 21:\n              if (!(startRun != null && lastAccepting != null && lastAccepting >= startRun)) {\n                _context.next = 24;\n                break;\n              }\n              _context.next = 24;\n              return [startRun, lastAccepting, self.tags[state]];\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), _ref;\n  }\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */;\n  _proto.apply = function apply(str, actions) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.match(str)), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n      for (var _iterator2 = _createForOfIteratorHelperLoose(tags), _step2; !(_step2 = _iterator2()).done;) {\n        var tag = _step2.value;\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  };\n  return StateMachine;\n}();\nvar dfa = StateMachine;\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting$1 = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n};\nvar categories$1 = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"null\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"M\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$2 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories$1,\n  decompositions: decompositions$2,\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n};\n\n// Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 216, 96, 1, 102, 15, 153, 240, 237, 157, 123, 140, 92, 85, 29, 199, 239, 238, 206, 206, 204, 238, 204, 238, 116, 11, 68, 8, 98, 81, 32, 196, 80, 109, 64, 34, 182, 20, 22, 144, 96, 10, 137, 88, 77, 164, 85, 81, 68, 9, 136, 65, 80, 131, 144, 54, 8, 8, 106, 45, 32, 15, 65, 76, 44, 252, 33, 229, 47, 138, 254, 193, 67, 99, 193, 180, 18, 17, 44, 16, 80, 33, 96, 20, 176, 168, 53, 4, 172, 81, 2, 162, 32, 126, 207, 220, 115, 230, 158, 57, 115, 222, 143, 123, 103, 101, 126, 201, 39, 247, 113, 206, 61, 231, 119, 126, 191, 243, 190, 119, 103, 151, 212, 178, 236, 96, 176, 12, 28, 1, 78, 6, 167, 128, 79, 128, 207, 130, 119, 131, 247, 70, 56, 158, 14, 206, 6, 95, 2, 235, 28, 158, 91, 15, 46, 3, 27, 192, 53, 224, 187, 224, 102, 176, 25, 108, 1, 119, 130, 123, 52, 207, 95, 0, 46, 6, 63, 7, 191, 2, 247, 131, 71, 192, 19, 224, 105, 176, 4, 252, 5, 252, 13, 188, 12, 230, 193, 127, 65, 125, 50, 15, 155, 197, 113, 79, 240, 86, 112, 32, 88, 10, 14, 3, 43, 192, 113, 224, 68, 240, 33, 176, 6, 156, 6, 206, 2, 95, 0, 95, 1, 95, 5, 223, 0, 87, 130, 235, 193, 38, 176, 25, 108, 1, 119, 130, 173, 224, 62, 240, 32, 120, 12, 60, 5, 254, 8, 118, 129, 221, 224, 21, 240, 6, 152, 172, 103, 217, 12, 216, 11, 236, 7, 14, 4, 75, 193, 225, 96, 37, 56, 22, 172, 170, 231, 186, 175, 198, 113, 13, 56, 141, 94, 159, 133, 227, 121, 224, 66, 112, 17, 184, 28, 92, 1, 190, 67, 195, 191, 143, 227, 45, 224, 54, 112, 7, 216, 90, 207, 203, 125, 31, 61, 218, 242, 32, 141, 255, 24, 142, 191, 4, 79, 209, 235, 199, 233, 241, 58, 240, 12, 206, 31, 226, 158, 217, 229, 152, 135, 13, 207, 112, 105, 238, 198, 249, 43, 224, 13, 208, 104, 100, 89, 7, 188, 5, 44, 1, 7, 131, 101, 224, 136, 70, 127, 124, 114, 156, 167, 247, 30, 6, 31, 192, 249, 201, 224, 20, 240, 169, 70, 110, 175, 51, 113, 60, 151, 198, 185, 128, 222, 187, 24, 199, 111, 130, 171, 27, 121, 125, 154, 167, 220, 136, 235, 77, 96, 51, 184, 13, 220, 1, 182, 210, 103, 238, 163, 199, 29, 56, 254, 134, 166, 247, 84, 131, 218, 10, 199, 63, 55, 244, 101, 125, 209, 16, 206, 219, 248, 37, 196, 221, 65, 239, 221, 13, 94, 195, 117, 173, 153, 101, 237, 102, 17, 119, 15, 156, 239, 75, 175, 79, 2, 7, 52, 7, 211, 59, 68, 114, 47, 148, 195, 154, 121, 219, 115, 121, 102, 69, 2, 61, 82, 115, 52, 116, 62, 94, 162, 247, 243, 224, 90, 73, 252, 19, 105, 92, 214, 22, 87, 227, 122, 45, 248, 52, 133, 143, 123, 36, 173, 111, 159, 227, 238, 175, 208, 232, 66, 234, 246, 23, 185, 184, 223, 166, 199, 13, 66, 188, 11, 155, 121, 255, 203, 235, 186, 142, 62, 247, 181, 166, 92, 111, 134, 46, 108, 196, 136, 17, 126, 60, 60, 4, 58, 140, 24, 49, 98, 196, 136, 17, 35, 70, 140, 88, 120, 28, 57, 4, 58, 136, 60, 71, 215, 186, 223, 114, 88, 223, 175, 84, 220, 95, 174, 121, 230, 90, 164, 127, 61, 216, 4, 54, 131, 45, 224, 78, 112, 15, 216, 14, 30, 0, 143, 130, 39, 193, 179, 96, 87, 51, 223, 91, 218, 141, 227, 63, 193, 127, 192, 196, 84, 150, 181, 192, 28, 216, 7, 188, 125, 42, 223, 207, 121, 39, 142, 135, 130, 229, 224, 88, 112, 6, 45, 203, 102, 46, 255, 85, 184, 191, 122, 170, 122, 123, 143, 24, 49, 98, 196, 155, 9, 178, 111, 185, 22, 125, 239, 251, 106, 197, 62, 125, 85, 84, 109, 139, 17, 35, 70, 196, 225, 4, 110, 206, 74, 222, 115, 206, 131, 211, 208, 207, 156, 5, 206, 19, 230, 122, 23, 58, 206, 253, 78, 162, 199, 121, 154, 199, 81, 224, 146, 169, 226, 125, 234, 6, 156, 95, 45, 164, 121, 195, 84, 241, 94, 135, 135, 188, 151, 185, 9, 97, 183, 14, 193, 252, 243, 181, 69, 57, 43, 231, 96, 35, 240, 147, 69, 102, 54, 32, 222, 3, 138, 184, 47, 224, 254, 254, 139, 179, 108, 13, 184, 6, 60, 186, 184, 63, 252, 247, 8, 111, 238, 145, 101, 123, 131, 53, 224, 146, 233, 44, 219, 6, 178, 86, 150, 29, 3, 46, 33, 71, 114, 143, 30, 119, 210, 35, 207, 59, 218, 89, 246, 189, 177, 156, 211, 113, 254, 131, 246, 96, 156, 157, 184, 55, 62, 83, 92, 31, 135, 243, 75, 193, 118, 48, 54, 139, 117, 1, 184, 116, 182, 72, 39, 22, 219, 105, 154, 175, 226, 184, 188, 147, 159, 31, 223, 233, 143, 179, 174, 147, 235, 244, 211, 206, 160, 222, 35, 70, 140, 24, 49, 162, 28, 254, 93, 113, 31, 28, 123, 252, 113, 97, 197, 162, 234, 243, 159, 175, 189, 185, 185, 28, 220, 142, 121, 224, 93, 83, 131, 235, 81, 242, 157, 207, 189, 184, 191, 141, 155, 39, 222, 143, 243, 71, 166, 242, 249, 232, 14, 73, 122, 236, 251, 187, 39, 232, 250, 154, 156, 63, 61, 149, 127, 83, 71, 210, 219, 73, 211, 122, 94, 146, 223, 18, 154, 230, 63, 16, 246, 50, 247, 60, 219, 55, 125, 125, 202, 111, 253, 76, 190, 153, 34, 223, 76, 28, 37, 209, 119, 18, 109, 160, 9, 22, 77, 23, 115, 227, 189, 167, 243, 176, 253, 113, 60, 24, 44, 155, 238, 207, 239, 136, 233, 98, 30, 62, 143, 243, 19, 192, 7, 167, 139, 252, 88, 188, 143, 210, 123, 159, 156, 206, 191, 251, 58, 3, 199, 207, 131, 47, 79, 15, 234, 191, 126, 186, 184, 94, 70, 211, 190, 140, 62, 191, 113, 218, 236, 199, 121, 170, 187, 204, 62, 196, 126, 15, 73, 194, 136, 93, 174, 67, 218, 55, 130, 155, 193, 45, 224, 54, 240, 35, 240, 99, 112, 47, 248, 5, 120, 8, 252, 22, 252, 14, 236, 4, 187, 192, 110, 240, 10, 120, 3, 212, 90, 69, 154, 109, 156, 239, 9, 246, 5, 7, 128, 67, 192, 161, 96, 57, 56, 182, 53, 168, 195, 189, 208, 97, 21, 238, 175, 166, 97, 107, 113, 60, 21, 156, 33, 137, 203, 226, 159, 131, 176, 243, 91, 197, 245, 69, 56, 255, 58, 184, 10, 252, 12, 215, 55, 224, 120, 19, 13, 191, 21, 199, 219, 21, 105, 17, 72, 252, 187, 90, 131, 54, 35, 156, 42, 169, 111, 221, 60, 17, 127, 59, 120, 16, 60, 6, 30, 7, 127, 104, 229, 123, 255, 127, 194, 241, 133, 86, 254, 252, 238, 186, 217, 103, 47, 33, 238, 171, 96, 12, 235, 133, 58, 104, 129, 185, 118, 17, 190, 15, 206, 247, 3, 7, 129, 119, 129, 247, 180, 139, 178, 153, 56, 178, 173, 14, 35, 250, 189, 191, 93, 254, 122, 79, 172, 135, 124, 216, 73, 26, 125, 142, 182, 40, 175, 15, 101, 151, 95, 198, 71, 52, 126, 42, 139, 88, 101, 33, 223, 242, 86, 149, 63, 105, 111, 164, 15, 252, 56, 103, 79, 50, 78, 125, 134, 171, 87, 103, 226, 252, 156, 118, 241, 189, 108, 42, 59, 174, 107, 202, 239, 159, 79, 117, 89, 207, 233, 120, 116, 68, 251, 47, 68, 116, 239, 105, 99, 176, 204, 179, 78, 150, 137, 169, 12, 108, 108, 191, 12, 245, 102, 163, 99, 191, 61, 12, 239, 57, 92, 202, 127, 13, 202, 119, 67, 59, 93, 159, 239, 106, 127, 246, 189, 237, 149, 138, 240, 245, 220, 220, 111, 147, 164, 47, 231, 191, 195, 39, 115, 46, 217, 188, 128, 133, 223, 77, 143, 228, 239, 154, 54, 35, 173, 45, 212, 215, 119, 224, 248, 67, 176, 213, 193, 247, 47, 90, 252, 125, 205, 49, 9, 254, 142, 98, 27, 116, 124, 96, 8, 198, 52, 91, 30, 133, 174, 79, 26, 230, 74, 207, 182, 251, 199, 21, 219, 58, 181, 204, 114, 238, 94, 37, 42, 63, 254, 181, 221, 31, 254, 247, 18, 124, 250, 47, 90, 191, 95, 231, 242, 34, 239, 48, 100, 107, 77, 6, 105, 35, 147, 51, 89, 54, 3, 246, 2, 251, 129, 131, 102, 242, 176, 165, 51, 118, 229, 231, 255, 174, 137, 180, 215, 141, 224, 240, 153, 188, 237, 63, 199, 181, 35, 118, 126, 21, 157, 131, 175, 68, 156, 227, 103, 242, 62, 246, 196, 25, 121, 251, 87, 217, 55, 53, 68, 247, 15, 207, 244, 223, 227, 251, 34, 210, 15, 173, 228, 202, 190, 145, 246, 99, 100, 189, 248, 49, 206, 110, 151, 115, 207, 156, 78, 211, 59, 27, 199, 43, 106, 131, 105, 159, 139, 251, 231, 91, 216, 124, 152, 168, 202, 63, 169, 89, 219, 252, 255, 46, 31, 207, 235, 154, 113, 113, 71, 73, 58, 12, 43, 191, 174, 56, 255, 71, 20, 251, 40, 101, 18, 90, 6, 221, 248, 179, 16, 184, 72, 24, 7, 92, 236, 147, 106, 173, 188, 144, 252, 191, 144, 33, 117, 247, 109, 181, 177, 46, 157, 44, 91, 112, 144, 253, 101, 254, 220, 134, 170, 117, 30, 86, 222, 236, 82, 181, 253, 163, 213, 77, 250, 123, 22, 11, 66, 215, 33, 134, 137, 41, 220, 20, 175, 195, 133, 155, 226, 249, 234, 89, 181, 173, 22, 90, 57, 108, 124, 54, 76, 200, 244, 93, 72, 250, 235, 202, 164, 146, 42, 117, 241, 213, 185, 42, 253, 135, 189, 78, 84, 105, 147, 178, 235, 142, 173, 84, 173, 247, 66, 245, 127, 140, 180, 170, 176, 63, 175, 183, 107, 254, 41, 36, 85, 25, 23, 74, 89, 102, 155, 253, 212, 198, 35, 48, 22, 145, 69, 118, 241, 166, 26, 57, 205, 9, 148, 99, 113, 126, 62, 222, 40, 238, 187, 208, 172, 21, 207, 118, 109, 52, 77, 161, 54, 226, 227, 26, 117, 163, 54, 153, 226, 210, 35, 184, 174, 211, 189, 109, 221, 234, 247, 111, 166, 75, 139, 194, 68, 117, 237, 234, 195, 238, 179, 26, 255, 178, 112, 94, 100, 105, 16, 97, 254, 109, 83, 255, 182, 37, 254, 99, 50, 78, 227, 48, 105, 211, 248, 196, 191, 98, 126, 50, 105, 55, 6, 239, 13, 148, 73, 240, 111, 47, 158, 165, 127, 89, 253, 118, 105, 175, 228, 200, 231, 101, 235, 223, 129, 178, 148, 236, 95, 49, 174, 120, 78, 132, 248, 151, 217, 158, 249, 151, 33, 243, 79, 91, 225, 95, 94, 72, 219, 213, 137, 170, 60, 218, 103, 44, 253, 219, 235, 87, 199, 10, 63, 215, 230, 220, 198, 0, 215, 246, 203, 124, 170, 188, 46, 201, 191, 182, 237, 87, 132, 213, 109, 214, 166, 152, 143, 101, 254, 13, 29, 75, 153, 77, 196, 186, 228, 218, 63, 107, 243, 24, 227, 198, 16, 80, 159, 40, 32, 210, 88, 32, 253, 179, 171, 127, 39, 45, 250, 231, 73, 139, 246, 43, 147, 73, 69, 159, 16, 187, 127, 238, 100, 69, 187, 13, 153, 199, 177, 126, 187, 155, 183, 69, 255, 172, 107, 203, 170, 177, 146, 157, 139, 247, 100, 241, 196, 123, 202, 251, 150, 243, 47, 81, 248, 182, 44, 235, 191, 217, 216, 60, 46, 180, 109, 66, 221, 178, 125, 203, 252, 175, 146, 20, 239, 69, 100, 34, 206, 167, 109, 230, 212, 93, 253, 12, 254, 142, 217, 158, 93, 253, 73, 218, 51, 249, 125, 104, 17, 190, 77, 241, 247, 197, 235, 186, 161, 61, 243, 207, 233, 234, 20, 111, 23, 254, 25, 23, 255, 234, 196, 103, 189, 164, 157, 155, 15, 129, 127, 85, 113, 153, 176, 254, 218, 198, 191, 252, 53, 59, 183, 241, 175, 216, 247, 202, 164, 167, 107, 4, 255, 118, 58, 57, 62, 34, 250, 151, 215, 169, 44, 255, 106, 177, 108, 191, 4, 102, 119, 54, 30, 171, 32, 98, 234, 143, 187, 54, 85, 248, 141, 209, 110, 232, 219, 14, 111, 147, 208, 249, 150, 9, 83, 191, 230, 58, 159, 182, 157, 115, 203, 236, 18, 3, 171, 52, 37, 107, 105, 219, 62, 94, 214, 134, 85, 251, 35, 44, 140, 29, 217, 94, 137, 108, 191, 69, 37, 174, 253, 53, 191, 127, 226, 42, 177, 125, 225, 11, 91, 183, 219, 34, 10, 121, 158, 111, 167, 227, 141, 254, 125, 42, 114, 228, 215, 22, 132, 110, 251, 111, 22, 113, 98, 172, 107, 196, 58, 169, 178, 113, 10, 219, 155, 242, 12, 177, 119, 119, 63, 111, 46, 135, 137, 204, 222, 204, 23, 68, 68, 123, 215, 179, 162, 95, 201, 28, 236, 173, 170, 171, 41, 246, 167, 121, 154, 20, 101, 63, 106, 187, 143, 229, 80, 175, 248, 250, 218, 161, 54, 20, 243, 37, 38, 153, 176, 240, 113, 138, 58, 166, 235, 39, 51, 143, 58, 197, 218, 32, 107, 135, 100, 60, 38, 245, 164, 174, 210, 125, 206, 158, 110, 249, 29, 226, 167, 128, 181, 7, 29, 252, 222, 183, 108, 29, 229, 83, 119, 101, 82, 117, 31, 223, 197, 114, 190, 160, 170, 43, 178, 113, 148, 212, 157, 238, 92, 157, 172, 57, 102, 251, 251, 170, 30, 36, 111, 151, 125, 13, 174, 159, 231, 247, 58, 100, 101, 24, 232, 39, 117, 117, 118, 44, 143, 211, 154, 200, 97, 113, 216, 179, 236, 62, 15, 159, 150, 49, 47, 27, 230, 6, 109, 41, 203, 151, 208, 164, 249, 119, 245, 176, 180, 31, 123, 86, 124, 175, 99, 170, 227, 50, 233, 8, 231, 161, 200, 210, 177, 73, 63, 11, 124, 62, 52, 255, 212, 229, 243, 73, 183, 12, 120, 73, 157, 135, 111, 120, 170, 242, 138, 226, 179, 110, 238, 62, 39, 220, 179, 89, 131, 196, 202, 95, 6, 159, 191, 77, 185, 83, 229, 239, 42, 49, 236, 79, 196, 59, 255, 178, 198, 104, 155, 125, 148, 8, 123, 2, 204, 247, 186, 253, 23, 17, 126, 173, 209, 219, 131, 161, 99, 127, 247, 124, 38, 135, 221, 151, 165, 65, 230, 8, 166, 253, 24, 2, 219, 27, 234, 217, 63, 112, 31, 53, 180, 15, 40, 171, 255, 142, 145, 127, 108, 253, 9, 93, 251, 150, 213, 6, 36, 237, 216, 101, 141, 204, 175, 147, 153, 176, 251, 221, 247, 30, 154, 53, 131, 110, 143, 67, 102, 79, 235, 53, 102, 76, 155, 120, 236, 253, 185, 142, 119, 3, 246, 243, 240, 25, 47, 170, 245, 4, 191, 87, 164, 90, 99, 200, 252, 43, 194, 230, 189, 74, 253, 29, 246, 2, 164, 126, 78, 88, 191, 101, 101, 143, 146, 191, 170, 94, 176, 112, 137, 29, 187, 107, 127, 217, 58, 122, 214, 111, 127, 65, 181, 47, 72, 218, 225, 192, 30, 213, 68, 255, 179, 124, 221, 9, 237, 255, 67, 159, 231, 223, 189, 176, 49, 207, 123, 252, 77, 80, 135, 68, 219, 153, 252, 33, 222, 111, 213, 244, 233, 251, 218, 211, 103, 172, 33, 117, 176, 153, 21, 123, 81, 50, 92, 199, 65, 107, 191, 165, 28, 203, 36, 227, 140, 204, 23, 164, 173, 245, 237, 157, 140, 217, 219, 155, 204, 155, 164, 121, 42, 250, 6, 219, 122, 99, 26, 31, 69, 25, 152, 63, 40, 108, 161, 171, 147, 186, 254, 158, 223, 183, 108, 78, 232, 243, 118, 25, 167, 251, 234, 56, 167, 111, 232, 252, 201, 52, 222, 166, 76, 155, 8, 255, 157, 87, 71, 184, 182, 102, 177, 128, 228, 30, 179, 23, 9, 227, 207, 25, 170, 62, 54, 134, 125, 109, 237, 100, 218, 243, 213, 233, 99, 171, 111, 102, 56, 234, 158, 9, 241, 127, 138, 180, 109, 243, 179, 205, 195, 75, 151, 73, 80, 47, 174, 99, 140, 53, 62, 122, 244, 202, 109, 177, 134, 149, 210, 200, 156, 255, 6, 216, 215, 119, 188, 132, 250, 219, 244, 173, 178, 73, 66, 116, 143, 161, 191, 46, 237, 20, 226, 170, 83, 173, 29, 183, 140, 202, 122, 155, 152, 84, 249, 132, 218, 88, 39, 161, 245, 162, 44, 155, 250, 234, 80, 117, 120, 108, 91, 248, 218, 72, 39, 101, 215, 199, 212, 245, 35, 212, 62, 195, 84, 127, 93, 242, 72, 81, 55, 92, 197, 70, 95, 254, 253, 53, 191, 254, 172, 75, 214, 225, 252, 223, 233, 164, 220, 127, 146, 189, 27, 82, 217, 48, 212, 247, 73, 215, 217, 58, 76, 235, 253, 113, 205, 154, 89, 182, 134, 29, 43, 190, 183, 118, 169, 115, 209, 254, 174, 53, 225, 94, 133, 203, 62, 31, 249, 219, 24, 254, 251, 50, 149, 244, 234, 127, 232, 126, 156, 207, 250, 213, 102, 77, 75, 209, 181, 91, 151, 253, 200, 210, 235, 179, 132, 230, 68, 65, 175, 28, 137, 251, 15, 221, 62, 142, 235, 251, 215, 14, 215, 94, 180, 123, 120, 42, 187, 68, 182, 185, 110, 207, 140, 223, 203, 234, 123, 63, 81, 243, 31, 215, 66, 218, 139, 206, 223, 172, 159, 183, 42, 119, 64, 125, 207, 50, 77, 253, 76, 221, 62, 44, 234, 169, 184, 255, 40, 123, 255, 97, 146, 144, 111, 20, 51, 15, 255, 14, 244, 75, 129, 182, 25, 72, 67, 177, 175, 66, 194, 90, 244, 93, 141, 248, 125, 92, 108, 223, 168, 222, 13, 138, 247, 217, 119, 186, 236, 152, 90, 116, 243, 57, 155, 178, 202, 202, 36, 75, 147, 125, 83, 25, 162, 151, 105, 110, 236, 18, 174, 19, 111, 223, 243, 118, 179, 237, 15, 12, 109, 202, 52, 30, 145, 50, 177, 111, 36, 123, 250, 7, 206, 71, 92, 230, 192, 161, 107, 29, 223, 57, 183, 139, 238, 174, 101, 140, 173, 191, 238, 126, 166, 136, 91, 166, 142, 190, 182, 150, 73, 21, 249, 134, 150, 183, 12, 127, 135, 60, 111, 83, 222, 216, 229, 8, 177, 165, 201, 174, 41, 194, 77, 246, 177, 181, 147, 173, 248, 214, 39, 83, 120, 72, 125, 9, 77, 219, 70, 127, 215, 231, 109, 236, 150, 170, 46, 198, 200, 207, 39, 13, 89, 153, 171, 148, 216, 54, 13, 205, 191, 44, 157, 83, 249, 62, 150, 174, 182, 18, 154, 94, 10, 187, 184, 164, 239, 34, 49, 218, 138, 73, 15, 157, 111, 83, 213, 31, 85, 25, 171, 168, 191, 46, 254, 137, 89, 143, 67, 242, 8, 181, 121, 138, 188, 92, 116, 170, 34, 255, 170, 202, 111, 202, 147, 172, 123, 39, 133, 111, 99, 201, 145, 255, 157, 42, 94, 88, 60, 241, 119, 222, 250, 246, 228, 52, 215, 169, 96, 82, 231, 246, 164, 7, 202, 62, 27, 182, 22, 151, 217, 47, 102, 27, 246, 201, 203, 54, 95, 223, 52, 135, 169, 93, 165, 44, 143, 139, 205, 92, 37, 212, 103, 190, 105, 199, 202, 35, 52, 255, 20, 62, 240, 45, 107, 104, 58, 125, 191, 133, 213, 201, 25, 186, 119, 172, 134, 253, 111, 25, 117, 195, 123, 36, 81, 172, 223, 219, 4, 244, 181, 38, 233, 126, 151, 238, 243, 91, 206, 145, 237, 107, 250, 221, 101, 242, 14, 155, 127, 71, 26, 218, 70, 59, 194, 249, 48, 183, 59, 173, 127, 74, 168, 255, 166, 182, 160, 243, 29, 251, 219, 36, 34, 190, 127, 151, 194, 231, 107, 35, 101, 246, 19, 98, 157, 180, 145, 40, 191, 157, 158, 208, 191, 174, 191, 129, 78, 222, 159, 235, 190, 203, 32, 176, 191, 5, 225, 223, 243, 244, 252, 229, 89, 47, 120, 155, 199, 234, 75, 125, 250, 212, 88, 190, 234, 166, 149, 96, 124, 34, 245, 140, 248, 136, 125, 159, 161, 178, 35, 251, 142, 92, 167, 63, 211, 81, 166, 171, 175, 254, 62, 207, 235, 218, 90, 213, 109, 200, 5, 246, 119, 82, 198, 241, 111, 66, 221, 255, 133, 214, 105, 223, 223, 175, 228, 227, 13, 216, 62, 178, 239, 249, 112, 85, 92, 34, 108, 221, 202, 254, 159, 131, 10, 38, 226, 239, 253, 243, 125, 26, 19, 93, 93, 83, 249, 164, 147, 13, 246, 241, 98, 222, 186, 111, 223, 250, 252, 99, 8, 55, 73, 138, 122, 235, 51, 78, 176, 239, 16, 25, 204, 79, 166, 121, 145, 75, 253, 102, 190, 98, 99, 142, 237, 239, 237, 166, 236, 35, 108, 108, 165, 10, 239, 179, 87, 77, 110, 51, 163, 255, 3, 251, 135, 84, 101, 103, 34, 134, 203, 202, 28, 115, 141, 60, 80, 191, 4, 159, 139, 250, 197, 240, 191, 43, 124, 249, 217, 124, 201, 119, 173, 147, 242, 251, 153, 24, 107, 49, 163, 254, 142, 227, 169, 237, 152, 218, 170, 21, 191, 227, 166, 205, 191, 132, 117, 120, 172, 242, 135, 210, 203, 211, 226, 155, 45, 83, 187, 118, 181, 159, 110, 253, 151, 106, 108, 146, 245, 51, 3, 250, 59, 206, 133, 202, 222, 35, 97, 162, 43, 27, 63, 102, 140, 75, 124, 148, 82, 248, 62, 213, 68, 234, 250, 45, 27, 99, 250, 126, 151, 95, 252, 102, 81, 177, 238, 236, 221, 183, 248, 6, 212, 165, 252, 50, 27, 40, 199, 45, 199, 239, 153, 251, 202, 58, 43, 172, 253, 20, 243, 176, 42, 196, 102, 94, 38, 141, 151, 176, 190, 232, 214, 17, 166, 57, 91, 168, 109, 99, 239, 103, 248, 246, 171, 46, 99, 134, 235, 119, 246, 166, 111, 134, 85, 115, 196, 208, 250, 196, 135, 247, 206, 75, 172, 71, 188, 136, 245, 137, 157, 243, 235, 37, 22, 214, 109, 191, 157, 194, 126, 49, 234, 143, 171, 253, 164, 182, 75, 188, 55, 169, 107, 127, 252, 185, 216, 207, 105, 237, 19, 75, 199, 214, 224, 220, 200, 166, 173, 199, 90, 199, 248, 72, 140, 60, 67, 117, 73, 145, 191, 139, 62, 190, 246, 141, 53, 70, 134, 250, 59, 180, 62, 196, 182, 117, 140, 122, 27, 43, 173, 84, 250, 149, 149, 190, 141, 132, 166, 229, 170, 207, 48, 250, 62, 134, 190, 166, 248, 101, 139, 76, 39, 241, 154, 191, 239, 99, 51, 155, 103, 125, 210, 142, 85, 55, 92, 125, 100, 171, 179, 109, 56, 47, 169, 108, 20, 34, 41, 252, 21, 42, 101, 212, 37, 215, 188, 84, 113, 83, 72, 168, 205, 83, 216, 36, 52, 109, 23, 123, 133, 166, 25, 250, 92, 12, 137, 81, 71, 67, 237, 40, 211, 39, 203, 250, 159, 215, 213, 109, 83, 155, 144, 165, 169, 211, 77, 101, 115, 213, 81, 150, 167, 78, 127, 155, 244, 100, 207, 155, 202, 103, 91, 126, 157, 77, 124, 109, 27, 171, 110, 216, 228, 147, 50, 127, 23, 137, 145, 78, 168, 254, 41, 202, 31, 195, 182, 101, 248, 34, 117, 190, 161, 254, 13, 213, 39, 180, 28, 85, 181, 139, 208, 252, 109, 234, 185, 107, 62, 166, 184, 41, 244, 54, 229, 173, 179, 151, 143, 196, 240, 103, 76, 255, 135, 202, 255, 0];\nvar trieData$1 = {\n  type: type$1,\n  data: data$1\n};\nvar decompositions$1 = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine$1 = new dfa(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(IndicShaper, _DefaultShaper);\n  function IndicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions$1[codepoint];\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n  return IndicShaper;\n}(DefaultShaper);\nIndicShaper.zeroMarkWidths = 'NONE';\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n  for (var _iterator = _createForOfIteratorHelperLoose(stateMachine$1.match(glyphs.map(indicCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n      start = _step$value[0],\n      end = _step$value[1],\n      tags = _step$value[2];\n    if (start > last) {\n      ++syllable;\n      for (var _i = last; _i < start; _i++) {\n        glyphs[_i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n    ++syllable; // Create shaper info\n\n    for (var _i2 = start; _i2 <= end; _i2++) {\n      glyphs[_i2].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i2]), indicPosition(glyphs[_i2]), tags[0], syllable);\n    }\n    last = end + 1;\n  }\n  if (last < glyphs.length) {\n    ++syllable;\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var _glyph$features;\n    var glyph = _step2.value;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n  return POSITIONS.Base_C;\n}\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo;\n    _glyphs$start$shaperI.category;\n    var syllableType = _glyphs$start$shaperI.syllableType;\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i3 = start;\n      while (_i3 < end && glyphs[_i3].shaperInfo.category === CATEGORIES.Repha) {\n        _i3++;\n      }\n      glyphs.splice(_i3++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i4 = end;\n          var seenBelow = false;\n          do {\n            var _info = glyphs[--_i4].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i4])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i4;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n              base = _i4;\n            } else if (start < _i4 && _info.category === CATEGORIES.ZWJ && glyphs[_i4 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i4 > limit);\n          break;\n        }\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i5 = base + 1; _i5 < end; _i5++) {\n            if (isConsonant(glyphs[_i5])) {\n              glyphs[_i5].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n    for (var _i6 = start; _i6 < base; _i6++) {\n      var _info2 = glyphs[_i6].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n    for (var _i7 = base + 1; _i7 < end; _i7++) {\n      if (glyphs[_i7].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i7 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    } // Handle beginning Ra\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (var _i8 = base + 1; _i8 < end; _i8++) {\n        if (glyphs[_i8].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n          for (_j = end - 1; _j > _i8; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i8) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i8];\n            glyphs.splice.apply(glyphs, [_i8, 0].concat(glyphs.splice(_i8 + 1, _j - _i8)));\n            glyphs[_j] = t;\n          }\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n    var lastPos = POSITIONS.Start;\n    for (var _i9 = start; _i9 < end; _i9++) {\n      var _info3 = glyphs[_i9].shaperInfo;\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i9; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n    var last = base;\n    for (var _i10 = base + 1; _i10 < end; _i10++) {\n      if (isConsonant(glyphs[_i10])) {\n        for (var _j3 = last + 1; _j3 < _i10; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i10].shaperInfo.position;\n          }\n        }\n        last = _i10;\n      } else if (glyphs[_i10].shaperInfo.category === CATEGORIES.M) {\n        last = _i10;\n      }\n    }\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      if (glyphs[_i11].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i11;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n    for (var _i12 = start; _i12 < end && glyphs[_i12].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i12++) {\n      glyphs[_i12].features.rphf = true;\n    } // Pre-base\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (var _i13 = start; _i13 < base; _i13++) {\n      glyphs[_i13].features.half = true;\n      if (blwf) {\n        glyphs[_i13].features.blwf = true;\n      }\n    } // Post-base\n\n    for (var _i14 = base + 1; _i14 < end; _i14++) {\n      glyphs[_i14].features.abvf = true;\n      glyphs[_i14].features.pstf = true;\n      glyphs[_i14].features.blwf = true;\n    }\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i15 = start; _i15 + 1 < base; _i15++) {\n        if (glyphs[_i15].shaperInfo.category === CATEGORIES.Ra && glyphs[_i15 + 1].shaperInfo.category === CATEGORIES.H && (_i15 + 1 === base || glyphs[_i15 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i15].features.blwf = true;\n          glyphs[_i15 + 1].features.blwf = true;\n        }\n      }\n    }\n    var prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i16 = base + 1; _i16 + prefLen - 1 < end; _i16++) {\n        var _g2 = [glyphs[_i16].copy(), glyphs[_i16 + 1].copy()];\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i16++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n          if (features.cfar) {\n            for (; _i16 < end; _i16++) {\n              glyphs[_i16].features.cfar = true;\n            }\n          }\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n    for (var _i17 = start + 1; _i17 < end; _i17++) {\n      if (isJoiner(glyphs[_i17])) {\n        var nonJoiner = glyphs[_i17].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i17;\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i18 = base + 1; _i18 < end; _i18++) {\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n            if (_i18 === end || !isHalantOrCoeng(glyphs[_i18])) {\n              break;\n            }\n            _i18++; // Skip halant.\n\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n            if (_i18 < end && isConsonant(glyphs[_i18]) && glyphs[_i18].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i18;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i19 = newPos; _i19 > start; _i19--) {\n          if (glyphs[_i19 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i19 - 1;\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i20 = base + 1; _i20 < newRephPos; _i20++) {\n            if (glyphs[_i20].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n    if (tryPref && base + 1 < end) {\n      for (var _i21 = base + 1; _i21 < end; _i21++) {\n        if (glyphs[_i21].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i21].isLigated && !glyphs[_i21].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i21;\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n            var _oldPos = _i21;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\nvar type = \"Buffer\";\nvar data = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 186, 16, 1, 5, 14, 250, 241, 237, 156, 123, 140, 95, 69, 21, 199, 103, 119, 187, 251, 123, 109, 119, 187, 22, 90, 160, 188, 31, 166, 165, 8, 69, 154, 24, 164, 49, 16, 32, 209, 148, 38, 106, 67, 20, 249, 195, 214, 7, 54, 98, 176, 65, 141, 141, 74, 104, 136, 134, 2, 18, 9, 134, 80, 99, 132, 26, 163, 149, 52, 245, 25, 80, 99, 64, 249, 3, 72, 5, 77, 138, 68, 65, 5, 21, 35, 1, 81, 132, 72, 72, 197, 196, 248, 29, 239, 156, 252, 206, 206, 158, 121, 222, 215, 22, 126, 39, 249, 100, 238, 99, 158, 231, 204, 204, 157, 153, 59, 247, 174, 154, 80, 234, 20, 176, 22, 156, 3, 46, 4, 27, 193, 102, 112, 185, 185, 118, 94, 5, 238, 22, 176, 13, 108, 7, 59, 60, 254, 118, 130, 93, 194, 245, 27, 193, 173, 96, 55, 216, 3, 190, 13, 190, 7, 238, 1, 247, 25, 30, 100, 254, 127, 1, 30, 5, 191, 3, 79, 11, 241, 61, 5, 158, 1, 171, 192, 11, 38, 111, 171, 204, 253, 85, 140, 87, 192, 33, 160, 150, 40, 213, 5, 203, 192, 10, 112, 60, 120, 35, 56, 19, 172, 7, 27, 192, 69, 224, 18, 240, 110, 240, 62, 240, 1, 240, 81, 176, 29, 236, 0, 59, 193, 46, 112, 11, 216, 13, 238, 4, 123, 193, 126, 112, 55, 184, 23, 60, 0, 30, 6, 191, 6, 191, 7, 127, 1, 207, 130, 23, 193, 33, 160, 38, 149, 234, 128, 89, 176, 18, 156, 0, 78, 5, 103, 76, 22, 121, 95, 15, 247, 60, 112, 161, 57, 223, 8, 119, 51, 184, 28, 108, 1, 219, 192, 199, 193, 167, 205, 253, 107, 225, 126, 1, 220, 12, 110, 3, 95, 155, 28, 150, 253, 155, 147, 243, 117, 81, 150, 253, 136, 239, 251, 21, 199, 201, 249, 177, 21, 247, 125, 56, 127, 16, 252, 10, 252, 6, 60, 53, 89, 148, 247, 25, 240, 2, 120, 5, 252, 55, 144, 159, 169, 41, 165, 102, 192, 10, 176, 106, 170, 8, 127, 10, 220, 53, 224, 108, 112, 174, 185, 118, 1, 220, 119, 128, 119, 129, 203, 166, 10, 221, 106, 182, 226, 248, 67, 224, 99, 224, 147, 224, 115, 224, 243, 38, 204, 77, 198, 253, 50, 220, 175, 130, 27, 88, 186, 223, 192, 249, 190, 41, 127, 222, 126, 16, 184, 31, 195, 79, 16, 199, 253, 224, 0, 56, 8, 158, 48, 229, 210, 247, 158, 132, 251, 87, 240, 15, 240, 178, 185, 246, 42, 220, 241, 14, 234, 32, 88, 218, 9, 199, 127, 36, 252, 28, 215, 41, 226, 60, 17, 238, 106, 112, 22, 88, 15, 214, 153, 180, 54, 224, 248, 12, 19, 215, 219, 140, 95, 205, 197, 236, 152, 179, 9, 215, 47, 5, 151, 89, 247, 183, 58, 252, 19, 31, 49, 105, 159, 205, 244, 230, 243, 207, 253, 229, 162, 227, 248, 48, 210, 188, 10, 92, 13, 118, 116, 226, 227, 223, 105, 233, 247, 76, 193, 207, 46, 248, 185, 5, 236, 238, 20, 245, 109, 15, 139, 127, 169, 71, 31, 123, 113, 111, 63, 184, 27, 220, 235, 176, 163, 212, 254, 31, 232, 12, 203, 245, 8, 142, 31, 3, 127, 0, 79, 155, 180, 244, 241, 223, 204, 241, 99, 1, 123, 84, 161, 223, 17, 35, 94, 143, 140, 218, 207, 136, 17, 35, 70, 140, 24, 49, 98, 196, 136, 215, 2, 235, 58, 195, 53, 129, 27, 34, 252, 255, 147, 205, 93, 255, 101, 205, 99, 191, 24, 17, 254, 63, 8, 51, 209, 45, 214, 97, 6, 112, 151, 131, 21, 224, 56, 112, 154, 185, 254, 38, 184, 235, 187, 133, 255, 13, 112, 207, 7, 111, 7, 239, 52, 247, 223, 11, 119, 11, 216, 102, 206, 183, 195, 221, 1, 118, 118, 221, 233, 106, 127, 187, 60, 247, 71, 140, 24, 49, 98, 68, 189, 156, 211, 50, 109, 151, 127, 196, 136, 17, 245, 80, 119, 251, 254, 18, 198, 143, 183, 119, 139, 247, 66, 119, 192, 253, 150, 48, 158, 252, 78, 183, 120, 183, 175, 143, 239, 177, 238, 223, 183, 8, 198, 159, 127, 159, 46, 152, 94, 170, 212, 37, 224, 145, 233, 48, 59, 225, 239, 231, 150, 95, 53, 51, 60, 94, 141, 227, 45, 96, 15, 120, 28, 28, 50, 247, 86, 207, 98, 140, 62, 59, 244, 183, 3, 199, 123, 160, 131, 63, 129, 19, 123, 8, 3, 246, 244, 138, 177, 252, 29, 83, 133, 251, 176, 57, 231, 12, 250, 240, 55, 54, 100, 99, 127, 161, 159, 155, 112, 109, 31, 187, 254, 60, 142, 215, 14, 148, 186, 18, 236, 3, 207, 131, 181, 211, 237, 63, 127, 218, 38, 212, 94, 30, 132, 238, 14, 152, 122, 122, 16, 238, 227, 198, 94, 122, 158, 248, 108, 55, 253, 121, 186, 223, 184, 103, 70, 250, 231, 188, 152, 145, 158, 212, 39, 72, 225, 95, 70, 220, 175, 118, 231, 251, 163, 252, 238, 247, 164, 55, 142, 250, 217, 3, 115, 189, 97, 217, 180, 191, 163, 112, 126, 108, 175, 56, 63, 185, 55, 244, 127, 122, 111, 126, 62, 98, 251, 171, 88, 91, 186, 202, 247, 230, 158, 124, 239, 173, 184, 190, 1, 92, 4, 54, 130, 205, 224, 61, 224, 73, 115, 255, 253, 56, 190, 2, 92, 5, 174, 54, 247, 63, 3, 174, 3, 55, 130, 91, 193, 237, 44, 238, 59, 113, 188, 23, 236, 3, 63, 4, 63, 5, 247, 131, 3, 224, 160, 144, 7, 61, 15, 127, 2, 215, 255, 108, 238, 233, 253, 52, 207, 225, 248, 37, 193, 47, 249, 255, 55, 238, 141, 245, 135, 231, 61, 28, 207, 129, 163, 251, 197, 249, 73, 253, 98, 111, 137, 190, 191, 6, 199, 103, 247, 221, 58, 211, 254, 207, 237, 203, 58, 115, 233, 253, 2, 248, 191, 24, 108, 2, 151, 130, 203, 192, 86, 147, 246, 182, 126, 209, 102, 98, 237, 182, 29, 254, 63, 5, 174, 1, 215, 129, 235, 193, 205, 44, 63, 183, 225, 248, 43, 224, 235, 224, 46, 240, 93, 86, 182, 16, 63, 242, 148, 251, 81, 228, 241, 103, 253, 118, 158, 57, 46, 93, 63, 20, 200, 207, 98, 234, 43, 171, 212, 65, 27, 233, 255, 178, 63, 63, 222, 131, 70, 247, 191, 133, 251, 199, 126, 185, 124, 198, 150, 227, 105, 79, 187, 179, 211, 191, 171, 226, 242, 47, 198, 250, 85, 133, 253, 203, 212, 147, 182, 203, 151, 90, 254, 231, 250, 205, 230, 219, 183, 143, 106, 175, 89, 55, 127, 169, 95, 184, 135, 224, 42, 140, 49, 167, 6, 197, 249, 244, 96, 232, 247, 136, 129, 92, 54, 186, 191, 166, 35, 151, 171, 238, 250, 31, 34, 180, 151, 44, 102, 175, 217, 202, 65, 225, 30, 15, 247, 180, 193, 225, 81, 239, 108, 253, 135, 238, 159, 46, 216, 55, 20, 239, 67, 194, 216, 118, 177, 17, 219, 239, 220, 208, 96, 94, 206, 26, 204, 191, 118, 77, 70, 254, 207, 153, 136, 171, 135, 186, 14, 191, 133, 181, 99, 189, 191, 115, 3, 206, 207, 31, 20, 237, 127, 29, 219, 111, 121, 177, 241, 55, 48, 249, 219, 4, 247, 210, 65, 177, 239, 246, 114, 184, 31, 20, 234, 136, 175, 237, 172, 142, 216, 203, 153, 139, 206, 251, 149, 131, 249, 215, 248, 222, 213, 231, 80, 55, 175, 232, 12, 203, 254, 9, 227, 126, 22, 238, 93, 157, 97, 254, 79, 101, 97, 174, 53, 126, 174, 135, 123, 179, 16, 247, 173, 184, 182, 59, 177, 157, 180, 205, 49, 19, 99, 106, 49, 200, 24, 99, 220, 58, 231, 126, 200, 157, 96, 247, 151, 68, 98, 199, 167, 28, 215, 234, 150, 197, 161, 241, 145, 144, 80, 93, 26, 23, 32, 91, 141, 11, 225, 198, 45, 119, 210, 64, 18, 83, 183, 234, 174, 11, 19, 53, 199, 95, 181, 76, 181, 157, 129, 18, 18, 99, 203, 215, 83, 219, 151, 218, 204, 235, 73, 198, 28, 44, 6, 177, 243, 193, 251, 188, 195, 93, 164, 49, 131, 125, 124, 184, 72, 110, 157, 145, 198, 82, 57, 246, 181, 245, 119, 56, 233, 176, 169, 118, 23, 27, 119, 138, 238, 171, 110, 135, 220, 246, 174, 126, 41, 196, 107, 93, 92, 243, 14, 126, 191, 10, 187, 228, 234, 159, 242, 212, 97, 96, 26, 27, 61, 255, 169, 154, 30, 48, 75, 130, 255, 63, 215, 199, 211, 198, 93, 106, 209, 179, 232, 91, 204, 176, 176, 84, 198, 89, 166, 179, 30, 139, 43, 54, 127, 228, 63, 103, 158, 168, 74, 232, 101, 130, 217, 166, 27, 25, 151, 178, 252, 217, 231, 169, 132, 194, 42, 53, 63, 29, 201, 63, 73, 140, 125, 73, 166, 13, 246, 185, 182, 111, 76, 31, 210, 23, 174, 185, 202, 100, 167, 157, 170, 163, 80, 123, 166, 251, 84, 39, 248, 220, 142, 183, 63, 95, 218, 190, 178, 228, 228, 57, 213, 190, 161, 99, 45, 3, 227, 74, 246, 181, 133, 218, 175, 125, 62, 99, 249, 155, 85, 126, 137, 169, 143, 161, 48, 46, 180, 93, 150, 169, 162, 29, 210, 252, 119, 78, 165, 61, 195, 98, 237, 235, 179, 73, 74, 158, 171, 178, 111, 110, 251, 37, 155, 242, 62, 90, 169, 249, 253, 115, 85, 82, 182, 253, 210, 88, 54, 148, 6, 127, 78, 46, 99, 40, 117, 248, 244, 207, 169, 246, 165, 103, 107, 78, 255, 28, 18, 187, 237, 219, 58, 176, 243, 153, 107, 223, 113, 53, 191, 124, 185, 162, 109, 28, 122, 150, 75, 229, 112, 233, 92, 242, 171, 4, 255, 46, 127, 174, 116, 164, 235, 177, 117, 136, 11, 181, 85, 62, 190, 226, 50, 173, 230, 219, 159, 159, 199, 182, 111, 233, 249, 236, 146, 156, 114, 72, 107, 176, 161, 181, 9, 222, 150, 187, 230, 60, 181, 253, 165, 228, 55, 167, 61, 167, 234, 65, 159, 251, 198, 203, 74, 45, 236, 171, 249, 121, 200, 158, 52, 158, 150, 244, 96, 75, 217, 246, 236, 147, 208, 51, 153, 250, 2, 110, 227, 152, 177, 188, 84, 174, 166, 236, 235, 242, 75, 98, 247, 215, 117, 216, 87, 106, 255, 182, 216, 121, 45, 99, 223, 55, 24, 114, 132, 143, 181, 82, 158, 199, 85, 183, 191, 28, 200, 30, 100, 79, 27, 174, 211, 80, 255, 187, 92, 201, 125, 28, 159, 255, 199, 216, 180, 206, 246, 74, 98, 175, 149, 72, 235, 38, 41, 246, 204, 201, 91, 213, 182, 140, 141, 83, 169, 249, 121, 137, 205, 175, 212, 102, 121, 93, 161, 186, 68, 54, 91, 202, 252, 76, 59, 240, 213, 135, 84, 157, 82, 62, 114, 214, 250, 218, 104, 123, 62, 219, 244, 216, 53, 123, 237, 73, 26, 23, 147, 140, 43, 127, 220, 58, 124, 71, 45, 156, 91, 116, 204, 189, 178, 251, 17, 108, 125, 42, 203, 205, 173, 179, 57, 58, 140, 137, 155, 252, 196, 234, 91, 159, 207, 177, 176, 190, 114, 145, 216, 250, 86, 204, 77, 41, 191, 203, 191, 22, 251, 157, 127, 46, 227, 204, 181, 199, 172, 174, 49, 109, 213, 246, 211, 113, 78, 90, 46, 205, 123, 37, 137, 181, 113, 157, 216, 194, 215, 140, 93, 107, 200, 54, 52, 134, 224, 231, 29, 53, 92, 3, 246, 149, 247, 136, 4, 84, 162, 255, 58, 208, 18, 154, 43, 77, 122, 238, 241, 240, 174, 122, 44, 181, 9, 73, 234, 174, 27, 41, 72, 207, 82, 205, 180, 146, 235, 139, 94, 167, 212, 117, 102, 198, 92, 59, 18, 172, 80, 69, 31, 53, 151, 152, 182, 189, 47, 141, 142, 67, 121, 117, 189, 215, 152, 83, 243, 243, 209, 87, 195, 49, 149, 29, 71, 87, 128, 199, 101, 151, 61, 71, 183, 115, 106, 56, 22, 161, 120, 164, 116, 187, 70, 175, 75, 132, 124, 248, 160, 176, 100, 191, 54, 246, 35, 72, 117, 188, 237, 119, 163, 161, 118, 94, 133, 158, 248, 94, 183, 42, 165, 14, 29, 229, 62, 95, 236, 107, 188, 127, 168, 59, 125, 9, 158, 126, 138, 142, 170, 78, 63, 85, 170, 208, 191, 106, 56, 253, 80, 222, 180, 240, 231, 134, 52, 118, 117, 205, 193, 8, 26, 127, 244, 213, 112, 236, 161, 159, 193, 43, 85, 49, 254, 154, 100, 208, 26, 142, 62, 182, 219, 136, 253, 28, 38, 91, 165, 150, 191, 46, 241, 245, 129, 77, 244, 139, 250, 185, 90, 117, 29, 72, 209, 41, 175, 27, 246, 120, 131, 176, 199, 106, 92, 142, 50, 204, 178, 99, 155, 163, 77, 60, 147, 66, 120, 187, 175, 79, 221, 223, 80, 117, 187, 41, 91, 247, 114, 211, 205, 13, 111, 195, 215, 169, 202, 230, 143, 75, 236, 115, 187, 110, 234, 172, 3, 212, 14, 104, 45, 138, 247, 83, 117, 214, 75, 26, 163, 235, 246, 181, 210, 112, 140, 146, 231, 73, 51, 44, 111, 174, 246, 202, 231, 152, 212, 174, 165, 62, 94, 90, 255, 33, 168, 189, 242, 54, 59, 153, 80, 38, 151, 148, 13, 31, 26, 183, 214, 61, 166, 229, 58, 210, 118, 106, 122, 207, 154, 126, 246, 74, 115, 66, 123, 93, 65, 178, 53, 61, 167, 235, 232, 143, 66, 235, 72, 49, 172, 2, 199, 26, 215, 69, 234, 220, 161, 45, 59, 113, 120, 27, 150, 250, 24, 106, 203, 51, 204, 95, 221, 245, 198, 94, 171, 39, 151, 250, 159, 152, 119, 110, 90, 108, 91, 187, 202, 110, 247, 65, 124, 189, 96, 165, 135, 227, 12, 186, 239, 161, 189, 93, 174, 180, 83, 250, 103, 46, 49, 253, 78, 172, 148, 157, 91, 243, 254, 69, 251, 159, 117, 64, 126, 164, 235, 93, 79, 56, 105, 47, 155, 116, 141, 242, 171, 227, 163, 247, 161, 180, 31, 65, 211, 198, 183, 88, 210, 248, 49, 36, 199, 131, 19, 216, 249, 132, 131, 88, 251, 216, 235, 97, 169, 246, 77, 89, 127, 137, 185, 158, 26, 183, 253, 172, 76, 9, 167, 229, 196, 136, 50, 166, 72, 142, 77, 41, 156, 61, 62, 105, 66, 58, 97, 47, 94, 145, 214, 172, 165, 107, 41, 241, 197, 132, 11, 173, 157, 75, 174, 148, 78, 74, 190, 202, 150, 163, 202, 245, 210, 148, 252, 248, 198, 20, 33, 155, 249, 236, 235, 10, 87, 5, 82, 57, 235, 72, 199, 55, 214, 138, 145, 212, 248, 234, 202, 111, 89, 63, 117, 234, 179, 141, 116, 115, 108, 25, 35, 109, 151, 161, 233, 242, 134, 164, 77, 91, 164, 164, 95, 103, 221, 77, 201, 199, 68, 205, 121, 246, 233, 221, 30, 35, 150, 213, 95, 21, 250, 111, 66, 66, 105, 53, 161, 255, 166, 236, 156, 163, 239, 170, 109, 147, 243, 238, 193, 53, 47, 112, 197, 25, 90, 47, 115, 133, 207, 45, 67, 206, 220, 66, 242, 175, 50, 226, 74, 153, 143, 133, 164, 201, 126, 167, 137, 250, 222, 180, 62, 36, 225, 246, 201, 205, 91, 110, 185, 234, 234, 67, 67, 229, 173, 202, 14, 174, 120, 154, 174, 7, 177, 210, 84, 251, 41, 91, 214, 182, 242, 80, 214, 38, 139, 161, 111, 168, 178, 191, 181, 227, 77, 245, 75, 235, 184, 246, 190, 48, 233, 189, 71, 204, 183, 85, 101, 224, 107, 220, 180, 198, 158, 171, 251, 216, 112, 85, 151, 33, 245, 121, 42, 237, 215, 107, 18, 189, 231, 81, 250, 118, 197, 133, 174, 23, 49, 107, 122, 84, 254, 156, 247, 11, 92, 92, 239, 91, 83, 113, 165, 227, 26, 59, 73, 109, 130, 35, 237, 65, 230, 239, 12, 82, 203, 31, 131, 253, 222, 210, 126, 151, 201, 223, 3, 233, 125, 36, 41, 223, 107, 82, 217, 219, 124, 87, 107, 67, 239, 224, 92, 123, 122, 233, 61, 173, 222, 11, 160, 235, 241, 73, 106, 248, 175, 137, 220, 113, 111, 110, 125, 245, 217, 155, 246, 69, 212, 173, 175, 216, 52, 164, 253, 15, 252, 29, 56, 93, 179, 247, 67, 199, 8, 79, 103, 101, 68, 94, 168, 174, 74, 225, 99, 244, 111, 219, 177, 106, 29, 242, 245, 12, 254, 60, 209, 247, 232, 253, 94, 149, 237, 164, 199, 92, 178, 131, 109, 55, 87, 56, 234, 231, 200, 109, 82, 114, 244, 175, 235, 26, 175, 123, 125, 37, 63, 55, 105, 143, 126, 140, 240, 248, 165, 111, 226, 249, 190, 189, 49, 19, 119, 93, 223, 73, 214, 33, 246, 120, 230, 228, 146, 196, 174, 49, 248, 36, 102, 77, 66, 186, 23, 242, 235, 74, 199, 231, 143, 230, 142, 117, 140, 175, 165, 124, 140, 43, 191, 206, 164, 117, 163, 148, 52, 236, 107, 74, 201, 186, 110, 74, 236, 250, 103, 143, 177, 125, 115, 237, 42, 210, 171, 107, 238, 148, 35, 139, 101, 253, 160, 204, 28, 86, 178, 95, 153, 185, 112, 83, 101, 118, 73, 93, 235, 18, 77, 216, 184, 238, 58, 93, 119, 252, 49, 250, 208, 207, 78, 251, 27, 108, 223, 183, 32, 228, 143, 246, 106, 133, 198, 107, 246, 121, 93, 144, 232, 57, 202, 64, 45, 220, 107, 167, 37, 180, 119, 52, 102, 44, 81, 245, 154, 125, 221, 237, 179, 206, 119, 11, 135, 75, 30, 154, 78, 51, 165, 156, 124, 206, 66, 251, 20, 155, 104, 47, 246, 28, 198, 181, 31, 219, 245, 189, 119, 104, 94, 111, 203, 41, 37, 105, 98, 30, 112, 170, 106, 255, 95, 174, 210, 127, 1, 237, 61, 207, 90, 247, 186, 127, 147, 198, 237, 210, 26, 91, 91, 72, 245, 74, 250, 246, 155, 238, 209, 119, 223, 42, 33, 13, 105, 189, 33, 118, 239, 119, 74, 58, 49, 216, 54, 105, 58, 125, 223, 63, 37, 125, 237, 88, 135, 93, 110, 80, 106, 161, 78, 105, 239, 58, 217, 42, 119, 125, 78, 154, 99, 86, 173, 3, 74, 43, 86, 170, 76, 51, 215, 102, 246, 123, 22, 251, 191, 8, 218, 70, 244, 191, 76, 87, 127, 75, 239, 0, 98, 242, 40, 249, 43, 171, 139, 148, 240, 190, 246, 81, 117, 93, 72, 65, 235, 208, 215, 255, 18, 3, 229, 30, 31, 151, 173, 163, 185, 255, 95, 83, 158, 243, 170, 109, 105, 167, 229, 242, 67, 227, 112, 94, 207, 237, 111, 119, 120, 63, 93, 230, 127, 168, 74, 249, 251, 124, 87, 187, 35, 241, 189, 171, 82, 1, 127, 41, 82, 71, 189, 77, 233, 247, 237, 247, 134, 84, 215, 200, 78, 92, 164, 126, 38, 165, 14, 241, 254, 62, 229, 219, 203, 178, 101, 165, 49, 6, 255, 86, 139, 254, 9, 64, 229, 165, 49, 148, 157, 215, 144, 148, 109, 223, 117, 149, 157, 68, 250, 15, 130, 93, 230, 152, 57, 108, 46, 118, 158, 203, 254, 23, 222, 213, 110, 83, 234, 58, 47, 127, 207, 202, 111, 170, 148, 181, 127, 142, 78, 171, 148, 20, 93, 243, 127, 120, 133, 158, 137, 118, 123, 170, 34, 253, 178, 144, 232, 119, 165, 250, 189, 233, 105, 42, 252, 79, 42, 187, 108, 101, 243, 207, 237, 56, 158, 17, 222, 215, 230, 165, 177, 162, 221, 206, 83, 243, 159, 91, 206, 170, 251, 49, 187, 13, 211, 120, 136, 230, 43, 84, 54, 62, 94, 104, 66, 150, 168, 133, 255, 40, 144, 144, 254, 33, 86, 53, 147, 38, 29, 123, 60, 162, 245, 164, 231, 114, 115, 22, 174, 111, 62, 233, 122, 204, 56, 203, 87, 126, 169, 95, 182, 243, 188, 220, 193, 209, 137, 80, 57, 151, 169, 133, 107, 81, 75, 148, 251, 121, 228, 170, 243, 77, 244, 71, 190, 255, 30, 240, 181, 119, 187, 77, 243, 118, 109, 247, 41, 109, 172, 55, 112, 73, 29, 23, 198, 198, 93, 230, 95, 140, 190, 251, 212, 215, 243, 61, 141, 41, 227, 248, 216, 122, 20, 242, 91, 6, 87, 127, 195, 165, 199, 92, 126, 76, 101, 229, 235, 57, 244, 191, 235, 152, 61, 69, 57, 117, 36, 38, 188, 114, 28, 215, 217, 22, 125, 255, 121, 87, 74, 30, 63, 86, 165, 159, 16, 19, 106, 225, 191, 54, 98, 218, 122, 155, 239, 80, 171, 24, 171, 214, 53, 254, 173, 243, 221, 79, 91, 239, 177, 104, 76, 233, 179, 219, 152, 227, 122, 19, 82, 231, 60, 38, 86, 236, 189, 42, 169, 123, 48, 154, 218, 159, 208, 196, 30, 149, 152, 248, 155, 42, 243, 98, 220, 239, 33, 137, 148, 70, 91, 237, 169, 170, 114, 199, 232, 51, 69, 247, 116, 92, 247, 218, 133, 84, 142, 170, 227, 40, 27, 231, 98, 108, 23, 101, 227, 168, 178, 125, 214, 213, 214, 171, 212, 91, 217, 188, 248, 164, 238, 116, 203, 228, 205, 151, 191, 166, 164, 201, 250, 149, 147, 126, 85, 249, 207, 13, 95, 85, 250, 49, 233, 148, 213, 115, 200, 111, 29, 249, 78, 73, 191, 142, 184, 109, 73, 177, 157, 36, 185, 245, 192, 37, 255, 3];\nvar trieData = {\n  type: type,\n  data: data\n};\nvar categories = useData.categories,\n  decompositions = useData.decompositions;\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar stateMachine = new dfa(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(UniversalShaper, _DefaultShaper);\n  function UniversalShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      if (decompositions[codepoint]) {\n        var decomposed = decompositions[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n  return UniversalShaper;\n}(DefaultShaper);\nUniversalShaper.zeroMarkWidths = 'BEFORE_GPOS';\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  for (var _iterator = _createForOfIteratorHelperLoose(stateMachine.match(glyphs.map(useCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n      start = _step$value[0],\n      end = _step$value[1],\n      tags = _step$value[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (var _i = start; _i < start + limit; _i++) {\n      glyphs[_i].features.rphf = true;\n    }\n  }\n}\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var glyph = _step2.value;\n    glyph.substituted = false;\n  }\n}\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = _createForOfIteratorHelperLoose(glyphs), _step3; !(_step3 = _iterator3()).done;) {\n    var glyph = _step3.value;\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = _createForOfIteratorHelperLoose(glyphs), _step4; !(_step4 = _iterator4()).done;) {\n    var glyph = _step4.value;\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var i = void 0,\n      j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n};\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n  for (var _iterator = _createForOfIteratorHelperLoose(script), _step; !(_step = _iterator()).done;) {\n    var s = _step.value;\n    var shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n  return DefaultShaper;\n}\nvar GSUBProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GSUBProcessor, _OTProcessor);\n  function GSUBProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n  var _proto = GSUBProcessor.prototype;\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    var _this = this;\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n          var glyph = this.glyphIterator.cur;\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n          return true;\n        }\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n          if (_index !== -1) {\n            var _this$glyphs;\n            var sequence = table.sequences.get(_index);\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n            (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n            return true;\n          }\n          return false;\n        }\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n          return false;\n        }\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n          if (_index3 === -1) {\n            return false;\n          }\n          for (var _iterator = _createForOfIteratorHelperLoose(table.ligatureSets.get(_index3)), _step; !(_step = _iterator()).done;) {\n            var ligature = _step.value;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n            if (!matched) {\n              continue;\n            }\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n            for (var _iterator2 = _createForOfIteratorHelperLoose(matched), _step2; !(_step2 = _iterator2()).done;) {\n              var _index4 = _step2.value;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(matched), _step3; !(_step3 = _iterator3()).done;) {\n              var matchIndex = _step3.value;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i = idx; _i < this.glyphs.length; _i++) {\n                if (this.glyphs[_i].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n            for (var _i2 = matched.length - 1; _i2 >= 0; _i2--) {\n              this.glyphs.splice(matched[_i2], 1);\n            }\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n          return false;\n        }\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n      default:\n        throw new Error(\"GSUB lookupType \" + lookupType + \" is not supported\");\n    }\n  };\n  return GSUBProcessor;\n}(OTProcessor);\nvar GPOSProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GPOSProcessor, _OTProcessor);\n  function GPOSProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n  var _proto = GPOSProcessor.prototype;\n  _proto.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n  };\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n          return true;\n        }\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n          if (!nextGlyph) {\n            return false;\n          }\n          var _index = this.coverageIndex(table.coverage);\n          if (_index === -1) {\n            return false;\n          }\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n              for (var _iterator = _createForOfIteratorHelperLoose(set), _step; !(_step = _iterator()).done;) {\n                var _pair = _step.value;\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n              return false;\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n          if (!_nextGlyph) {\n            return false;\n          }\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n          return true;\n        }\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n          var baseGlyphIndex = this.glyphIterator.index;\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n          if (baseIndex === -1) {\n            return false;\n          }\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n          if (ligIndex === -1) {\n            return false;\n          }\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n          if (!good) {\n            return false;\n          }\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n          if (mark2Index === -1) {\n            return false;\n          }\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n      default:\n        throw new Error(\"Unsupported GPOS table: \" + lookupType);\n    }\n  };\n  _proto.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n  _proto.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n    this.fixMarkAttachment();\n  };\n  _proto.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n  _proto.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n  return GPOSProcessor;\n}(OTProcessor);\nvar OTLayoutEngine = /*#__PURE__*/function () {\n  function OTLayoutEngine(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n  var _proto = OTLayoutEngine.prototype;\n  _proto.setup = function setup(glyphRun) {\n    var _this = this;\n\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n  _proto.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n  _proto.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n  _proto.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n  _proto.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n    return features;\n  };\n  return OTLayoutEngine;\n}();\nvar LayoutEngine = /*#__PURE__*/function () {\n  function LayoutEngine(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n  var _proto = LayoutEngine.prototype;\n  _proto.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n        for (var _iterator = _createForOfIteratorHelperLoose(string), _step; !(_step = _iterator()).done;) {\n          var glyph = _step.value;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n        script = forCodePoints(codePoints);\n      }\n      var glyphs = string;\n    }\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n    return glyphRun;\n  };\n  _proto.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n  _proto.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n  _proto.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n  _proto.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n        case 0x03:\n          return ch === 0x034F;\n        case 0x06:\n          return ch === 0x061C;\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n        default:\n          return false;\n      }\n    }\n  };\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n    return features;\n  };\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (var _iterator2 = _createForOfIteratorHelperLoose(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      result.add(String.fromCodePoint(codePoint));\n    }\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.engine.stringsForGlyph(gid)), _step3; !(_step3 = _iterator3()).done;) {\n        var string = _step3.value;\n        result.add(string);\n      }\n    }\n    return Array.from(result);\n  };\n  return LayoutEngine;\n}();\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n  var _proto = Path.prototype;\n  _proto.toFunction = function toFunction() {\n    var _this = this;\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */;\n  _proto.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return \"\" + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  }\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */;\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  _proto.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n    for (var _iterator = _createForOfIteratorHelperLoose(this.commands), _step; !(_step = _iterator()).done;) {\n      var c = _step.value;\n      var args = [];\n      for (var i = 0; i < c.args.length; i += 2) {\n        var _fn = fn(c.args[i], c.args[i + 1]),\n          x = _fn[0],\n          y = _fn[1];\n        args.push(x, y);\n      }\n      path[c.command].apply(path, args);\n    }\n    return path;\n  }\n  /**\n   * Transforms the path by the given matrix.\n   */;\n  _proto.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  }\n  /**\n   * Translates the path by the given offset.\n   */;\n  _proto.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n   * Rotates the path by the given angle (in radians).\n   */;\n  _proto.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n   * Scales the path.\n   */;\n  _proto.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) {\n      scaleY = scaleX;\n    }\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n  _createClass(Path, [{\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n        for (var _iterator2 = _createForOfIteratorHelperLoose(this.commands), _step2; !(_step2 = _iterator2()).done;) {\n          var command = _step2.value;\n          for (var i = 0; i < command.args.length; i += 2) {\n            cbox.addPoint(command.args[i], command.args[i + 1]);\n          }\n        }\n        this._cbox = Object.freeze(cbox);\n      }\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n      var bbox = new BBox();\n      var cx = 0,\n        cy = 0;\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.commands), _step3; !(_step3 = _iterator3()).done;) {\n        var c = _step3.value;\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n              x = _c$args[0],\n              y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                qp1x = _c$args2[0],\n                qp1y = _c$args2[1],\n                p3x = _c$args2[2],\n                p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                cp1x = _c$args3[0],\n                cp1y = _c$args3[1],\n                cp2x = _c$args3[2],\n                cp2y = _c$args3[3],\n                p3x = _c$args3[4],\n                p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n                var t = -c / b;\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n                continue;\n              }\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n              if (b2ac < 0) {\n                continue;\n              }\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\nvar _loop = function _loop() {\n  var command = _arr[_i];\n  Path.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\nfor (var _i = 0, _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']; _i < _arr.length; _i++) {\n  _loop();\n}\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nvar _class$1;\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\nvar Glyph = (_class$1 = /*#__PURE__*/function () {\n  function Glyph(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n  var _proto = Glyph.prototype;\n  _proto._getPath = function _getPath() {\n    return new Path();\n  };\n  _proto._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n  _proto._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n  _proto._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n  _proto._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n    var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n      advanceWidth = _this$_getTableMetric.advance,\n      leftBearing = _this$_getTableMetric.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n    if (this._font.vmtx) {\n      var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n        advanceHeight = _this$_getTableMetric2.advance,\n        topBearing = _this$_getTableMetric2.bearing;\n    } else {\n      var os2;\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */;\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  _proto.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */;\n  _proto._getName = function _getName() {\n    var post = this._font.post;\n    if (!post) {\n      return null;\n    }\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n        return post.names[id - StandardNames.length];\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n   * The glyph's name\n   * @type {string}\n   */;\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  _proto.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n  _createClass(Glyph, [{\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor(_class$1.prototype, \"cbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"cbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"bbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"path\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"path\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceWidth\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceWidth\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceHeight\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceHeight\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"name\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"name\"), _class$1.prototype), _class$1);\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\nvar Point$1 = /*#__PURE__*/function () {\n  function Point(onCurve, endContour, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n    if (y === void 0) {\n      y = 0;\n    }\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n  var _proto = Point.prototype;\n  _proto.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n  return Point;\n}(); // Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\nvar TTFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(TTFGlyph, _Glyph);\n  function TTFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n  var _proto2 = TTFGlyph.prototype;\n\n  // Parses just the glyph header and returns the bounding box\n  _proto2._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n  ;\n  _proto2._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  ;\n  _proto2._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n    return glyph;\n  };\n  _proto2._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT$1) {\n        var count = stream.readUInt8();\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point$1(!!(flag & ON_CURVE$1), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n    var px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR$1, flag & SAME_X$1);\n    }\n    var py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR$1, flag & SAME_Y$1);\n    }\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n    return;\n  };\n  _proto2._decodeComposite = function _decodeComposite(glyph, stream, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n      glyph.components.push(component);\n    }\n    if (this._font._variationProcessor) {\n      var points = [];\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point$1(true, true, component.dx, component.dy));\n      }\n      points.push.apply(points, this._getPhantomPoints(glyph));\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n    return haveInstructions;\n  };\n  _proto2._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n    var _this$_metrics = this._metrics,\n      advanceWidth = _this$_metrics.advanceWidth,\n      advanceHeight = _this$_metrics.advanceHeight,\n      leftBearing = _this$_metrics.leftBearing,\n      topBearing = _this$_metrics.topBearing;\n    return [new Point$1(false, true, glyph.xMin - leftBearing, 0), new Point$1(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point$1(false, true, 0, glyph.yMax + topBearing), new Point$1(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n  ;\n  _proto2._getContours = function _getContours() {\n    var glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n    var points = [];\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = _createForOfIteratorHelperLoose(glyph.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point$1(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n    var contours = [];\n    var cur = [];\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n    return contours;\n  };\n  _proto2._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n    var cbox = this._getCBox(true);\n    _Glyph.prototype._getMetrics.call(this, cbox);\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n  ;\n  _proto2._getPath = function _getPath() {\n    var contours = this._getContours();\n    var path = new Path();\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point$1(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n        var curvePt = firstPt;\n      }\n      path.moveTo(firstPt.x, firstPt.y);\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n      path.closePath();\n    }\n    return path;\n  };\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(CFFGlyph, _Glyph);\n  function CFFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n  var _proto = CFFGlyph.prototype;\n  _proto._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n  _proto.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n  _proto._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n      y = 0;\n    var usedGsubrs;\n    var usedSubrs;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n      path.moveTo(x, y);\n      open = true;\n    }\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n              if (stack.length > 0) {\n                checkWidth();\n              }\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n                vsindex = stack.pop();\n                break;\n              }\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n                  stack[base + i] = sum;\n                }\n                while (numOperands--) {\n                  stack.pop();\n                }\n                break;\n              }\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n            case 30: // vhcurveto\n\n            case 31:\n              {\n                // hvcurveto\n                var _phase = op === 31;\n                while (stack.length >= 4) {\n                  if (_phase) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                  } else {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                  }\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                  _phase = !_phase;\n                }\n                break;\n              }\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n                case 29:\n                  // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n                  stack.push(stack[idx]);\n                  break;\n                case 30:\n                  // roll\n                  var n = stack.pop();\n                  var _j = stack.pop();\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n                  break;\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n                case 35:\n                  // flex\n                  var pts = [];\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n                default:\n                  throw new Error(\"Unknown op: 12 \" + op);\n              }\n              break;\n            default:\n              throw new Error(\"Unknown op: \" + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n    parse();\n    if (open) {\n      path.closePath();\n    }\n    return path;\n  };\n  return CFFGlyph;\n}(Glyph);\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = /*#__PURE__*/function (_TTFGlyph) {\n  _inheritsLoose(SBIXGlyph, _TTFGlyph);\n  function SBIXGlyph() {\n    return _TTFGlyph.apply(this, arguments) || this;\n  }\n  var _proto = SBIXGlyph.prototype;\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  _proto.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n    if (start === end) {\n      return null;\n    }\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n  _proto.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n  return SBIXGlyph;\n}(TTFGlyph);\nvar COLRLayer = function COLRLayer(glyph, color) {\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\nvar COLRGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(COLRGlyph, _Glyph);\n  function COLRGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n  var _proto = COLRGlyph.prototype;\n  _proto._getBBox = function _getBBox() {\n    var bbox = new BBox();\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n    return bbox;\n  }\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */;\n  _proto.render = function render(ctx, size) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.layers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        glyph = _step$value.glyph,\n        color = _step$value.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n    return;\n  };\n  _createClass(COLRGlyph, [{\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n      var layers = [];\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n        var g = this._font._getBaseGlyph(rec.gid);\n        layers.push(new COLRLayer(g, color));\n      }\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = /*#__PURE__*/function () {\n  function GlyphVariationProcessor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n  var _proto = GlyphVariationProcessor.prototype;\n  _proto.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n    return normalized;\n  };\n  _proto.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n    var gvar = this.font.gvar;\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n    var offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n        var endCoords = [];\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n  _proto.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n    return points;\n  };\n  _proto.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n    return deltas;\n  };\n  _proto.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n      if (normalized[i] === 0) {\n        return 0;\n      }\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  ;\n  _proto.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n    var point = 0;\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n      if (point > endPoint) {\n        continue;\n      }\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n        point++;\n      } // shift contour if we only have a single delta\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n      point = endPoint + 1;\n    }\n  };\n  _proto.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n    var iterable = ['x', 'y'];\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n  _proto.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n  _proto.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex, innerIndex;\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n      table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  ;\n  _proto.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n    return netAdjustment;\n  };\n  _proto.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n        scalar *= axisScalar;\n      }\n      blendVector[master] = scalar;\n    }\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n  return GlyphVariationProcessor;\n}();\nvar resolved = Promise.resolve();\nvar Subset = /*#__PURE__*/function () {\n  function Subset(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n  var _proto = Subset.prototype;\n  _proto.includeGlyph = function includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n    return this.mapping[glyph];\n  };\n  _proto.encodeStream = function encodeStream() {\n    var _this = this;\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n      return s.end();\n    });\n    return s;\n  };\n  return Subset;\n}();\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\nvar Point = /*#__PURE__*/function () {\n  function Point() {}\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n  return Point;\n}();\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = /*#__PURE__*/function () {\n  function TTFGlyphEncoder() {}\n  var _proto = TTFGlyphEncoder.prototype;\n  _proto.encodeSimple = function encodeSimple(path, instructions) {\n    if (instructions === void 0) {\n      instructions = [];\n    }\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n      lastY = 0,\n      lastFlag = 0;\n    var pointCount = 0;\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n          flags.push(flag);\n          lastFlag = flag;\n        }\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n    return stream.buffer;\n  };\n  _proto._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n      points.push(diff);\n    }\n    return flag;\n  };\n  return TTFGlyphEncoder;\n}();\nvar TTFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(TTFSubset, _Subset);\n  function TTFSubset(font) {\n    var _this;\n    _this = _Subset.call(this, font) || this;\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n  var _proto = TTFSubset.prototype;\n  _proto._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n    var stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n      for (var _iterator = _createForOfIteratorHelperLoose(glyf.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n  _proto.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  };\n  return TTFSubset;\n}(Subset);\nvar CFFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(CFFSubset, _Subset);\n  function CFFSubset(font) {\n    var _this;\n    _this = _Subset.call(this, font) || this;\n    _this.cff = _this.font['CFF '];\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n    return _this;\n  }\n  var _proto = CFFSubset.prototype;\n  _proto.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n    for (var _iterator = _createForOfIteratorHelperLoose(this.glyphs), _step; !(_step = _iterator()).done;) {\n      var gid = _step.value;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n  _proto.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n    return res;\n  };\n  _proto.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var gid = _step2.value;\n      var fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n    return;\n  };\n  _proto.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.glyphs), _step3; !(_step3 = _iterator3()).done;) {\n      var gid = _step3.value;\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n  _proto.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n    if (!this.strings) {\n      this.strings = [];\n    }\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n  _proto.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n    for (var _i = 0, _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n  return CFFSubset;\n}(Subset);\nvar _class;\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\nvar TTFFont = (_class = /*#__PURE__*/function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n  function TTFFont(stream, variationCoords) {\n    if (variationCoords === void 0) {\n      variationCoords = null;\n    }\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n  var _proto = TTFFont.prototype;\n  _proto.setDefaultLanguage = function setDefaultLanguage(lang) {\n    if (lang === void 0) {\n      lang = null;\n    }\n    this.defaultLanguage = lang;\n  };\n  _proto._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(\"Error decoding table \" + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n    return this._tables[table.tag];\n  };\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n    return null;\n  };\n  _proto._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n  _proto._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n    var stream = this._getTableStream(table.tag);\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */;\n  _proto.getName = function getName(key, lang) {\n    if (lang === void 0) {\n      lang = this.defaultLanguage || fontkit.defaultLanguage;\n    }\n    var record = this.name && this.name.records[key];\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n    return null;\n  }\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */;\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */;\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */;\n  _proto.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n      last = code;\n      state = nextState;\n    }\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  _proto.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */;\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */;\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n  _proto._getBaseGlyph = function _getBaseGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */;\n  _proto.getGlyph = function getGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */;\n  _proto.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n    return new TTFSubset(this);\n  }\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */;\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  _proto.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  };\n\n  // Standardized format plugin API\n  _proto.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n  _createClass(TTFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n      for (var _iterator = _createForOfIteratorHelperLoose(this.fvar.axis), _step; !(_step = _iterator()).done;) {\n        var axis = _step.value;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.fvar.instance), _step2; !(_step2 = _iterator2()).done;) {\n        var instance = _step2.value;\n        var settings = {};\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n        res[instance.name.en] = settings;\n      }\n      return res;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"bbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_cmapProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_cmapProcessor\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"characterSet\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"characterSet\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_layoutEngine\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_layoutEngine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"variationAxes\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"variationAxes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"namedVariations\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"namedVariations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_variationProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_variationProcessor\"), _class.prototype), _class);\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\nWOFFDirectory.process = function () {\n  var tables = {};\n  for (var _iterator = _createForOfIteratorHelperLoose(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n  this.tables = tables;\n};\nvar WOFFFont = /*#__PURE__*/function (_TTFFont) {\n  _inheritsLoose(WOFFFont, _TTFFont);\n  function WOFFFont() {\n    return _TTFFont.apply(this, arguments) || this;\n  }\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n  var _proto = WOFFFont.prototype;\n  _proto._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n    return null;\n  };\n  return WOFFFont;\n}(TTFFont);\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\nvar TrueTypeCollection = /*#__PURE__*/function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n  function TrueTypeCollection(stream) {\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n    this.header = TTCHeader.decode(stream);\n  }\n  var _proto = TrueTypeCollection.prototype;\n  _proto.getFont = function getFont(name) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.header.offsets), _step; !(_step = _iterator()).done;) {\n      var offset = _step.value;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n    return null;\n  };\n  _createClass(TrueTypeCollection, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.offsets), _step2; !(_step2 = _iterator2()).done;) {\n        var offset = _step2.value;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\nvar DFontName = new r.String(r.uint8);\nnew r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\nvar DFont = /*#__PURE__*/function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n    for (var _iterator = _createForOfIteratorHelperLoose(header.map.typeList.types), _step; !(_step = _iterator()).done;) {\n      var type = _step.value;\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n    return false;\n  };\n  function DFont(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.map.typeList.types), _step2; !(_step2 = _iterator2()).done;) {\n      var type = _step2.value;\n      for (var _iterator3 = _createForOfIteratorHelperLoose(type.refList), _step3; !(_step3 = _iterator3()).done;) {\n        var ref = _step3.value;\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n  var _proto = DFont.prototype;\n  _proto.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step4; !(_step4 = _iterator4()).done;) {\n      var ref = _step4.value;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n    return null;\n  };\n  _createClass(DFont, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n      for (var _iterator5 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step5; !(_step5 = _iterator5()).done;) {\n        var ref = _step5.value;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n      return fonts;\n    }\n  }]);\n  return DFont;\n}();\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\nexport { fontkit as default };","map":{"version":3,"names":["r","_createForOfIteratorHelperLoose","_createClass","_applyDecoratedDescriptor","_inheritsLoose","PropertyDescriptor","resolveLength","isEqual","unicode","UnicodeTrie","_regeneratorRuntime","cloneDeep","inflate","fontkit","logErrors","formats","registerFormat","format","push","openSync","filename","postscriptName","Error","open","callback","create","buffer","i","length","probe","font","DecodeStream","getFont","defaultLanguage","setDefaultLanguage","lang","cache","target","key","descriptor","get","value","call","Object","defineProperty","fn","Map","memoized","_len","arguments","args","Array","_key","has","result","apply","set","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","language","codeMap","LazyArray","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","MAC_LANGUAGE_ENCODINGS","ENCODINGS","LANGUAGES","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_iterator","_step","done","record","obj","preEncode","isArray","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","CFFIndex","_proto","prototype","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","s","writeUInt8","_i","_sizes","_iterator2","_step2","_item","FLOAT_EOF","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","defineProperties","_startOffset","_field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","_iterator3","_step3","_iterator4","_step4","_iterator5","_step5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","_proto2","valueOf","CFFBlendOp","numBlends","pop","CFFPrivateDict","standardStrings","StandardEncoding","ExpertEncoding","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","_","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFCustomEncoding","nCodes","codes","nRanges","ranges","CFFEncoding","RangeArray","_r$Array","_proto3","res","range","CFFCustomCharset","CharStrings","CFFCharset","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","_proto4","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","data","pad","numComponents","components","dataLen","SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis$1","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","undefined","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable$1","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac$1","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","constructor","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","StateTable1","ClassLookupTable","newStateOffset","StateHeader1","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","shortFrac","Offset","gvar","globalCoordCount","globalCoords","ClassTable","subFeatureFlags","stateTable","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","TableEntry","checkSum","Directory","numTables","tables$1","VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","binarySearch","cmp","min","_class$4","iconv","require","err","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","_step2$value","lookup","codepoint","variationSelector","buf","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_res4","_iterator6","_step6","_group","getOwnPropertyDescriptor","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","fromOpenType","forString","idx","code","charCodeAt","next","_script","getScript","forCodePoints","_script2","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","GlyphRun","direction$1","bbox","p","GlyphPosition","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","slice","AATMapping","ot","aat","mapOTToAAT","mapFeatureStrings","f","isNaN","typeCode","settingCode","mapAATToOT","_feature","_r","_f","keys","_class$3","AATLookupTable","seg","glyphsForValue","classValue","_segment","START_OF_TEXT_STATE","END_OF_TEXT_CLASS","OUT_OF_BOUNDS_CLASS","DELETED_GLYPH_CLASS","DONT_ADVANCE","AATStateMachine","reverse","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","traverse","opts","state","visited","Set","add","_this$stateTable","enter","exit","_class$2","MARK_FIRST","MARK_LAST","VERB","SET_MARK","SET_COMPONENT","PERFORM_ACTION","LAST_MASK","STORE_MASK","OFFSET_MASK","REVERSE_DIRECTION","CURRENT_INSERT_BEFORE","MARKED_INSERT_BEFORE","CURRENT_INSERT_COUNT","MARKED_INSERT_COUNT","AATMorxProcessor","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_this$ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_this$glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_step7","generateInputsForSubtable","stack","found","_cache","_stack$pop","swap","rangeA","rangeB","reverseA","reverseB","verb","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","getAvailableFeatures","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","zeroMarkWidths","type$2","data$2","trieData$2","trie$2","Uint8Array","FEATURES","ShapingClasses","Non_Joining","Left_Joining","Right_Joining","Dual_Joining","Join_Causing","ALAPH","Transparent","ISOL","FINA","FIN2","FIN3","MEDI","MED2","INIT","NONE","STATE_TABLE$1","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_step8","_step8$value","cur","_iterator9","_step9","applyLookup","applyLookupList","_iterator10","_step10","lookupRecord","_iterator11","_step11","coverageIndex","_iterator12","_step12","match","sequence","matched","sequenceMatches","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_step13","classSequenceMatches","_this3","classID","applyContext","_iterator14","_step14","rule","_iterator15","_step15","_rule","applyChainingContext","_iterator16","_step16","rules","_iterator17","_step17","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","HangulShaper","getType","STATE_TABLE","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","HANGUL_BASE","HANGUL_END","HANGUL_COUNT","L_BASE","V_BASE","T_BASE","L_COUNT","V_COUNT","T_COUNT","L_END","V_END","T_END","DOTTED_CIRCLE","isL","isV","isT","isTone","isLVT","isLV","isCombiningL","isCombiningV","isCombiningT","X","L","V","T","LV","LVT","M","NO_ACTION","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","getLength","advanceWidth","dottedCircle","INITIAL_STATE","FAIL_STATE","StateMachine","dfa","accepting","tags","_ref","self","Symbol","iterator","_callee","startRun","lastAccepting","lastState","wrap","_callee$","_context","stop","_step$value","stateTable$1","accepting$1","tags$1","indicMachine","categories$1","decompositions$2","useData","categories","decompositions","CATEGORIES","C","N","H","ZWNJ","ZWJ","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","type$1","data$1","trieData$1","decompositions$1","trie$1","stateMachine$1","IndicShaper","setupSyllables$1","initialReordering","finalReordering","unicodeScript","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","_i2","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable$1","_glyphs$start$shaperI","_i3","limit","hasReph","rphf","_g","_i4","seenBelow","_info","_i5","_i6","_info2","_i7","j","disallowDoubleHalants","_i8","_j","lastPos","_i9","_info3","_j2","_i10","_j3","_i11","_i12","blwf","_i13","_i14","abvf","pstf","_i15","prefLen","pref","_i16","_g2","_j4","cfar","_i17","nonJoiner","_j5","tryPref","BASE_C","_i18","newPos","_i19","oldPos","tmp","newRephPos","_i20","reph","_i21","_newPos","_oldPos2","_oldPos","_tmp","test","trieData","trie","UniversalShaper","setupSyllables","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable","isHalant","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","choose","shaper","_OTProcessor","_index","curGlyph","replacement","_index2","USER_INDEX","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","glyphInfos","setup","glyphInfo","zeroMarkAdvances","cleanup","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","glyphsForString","hideDefaultIgnorables","positioned","space","isDefaultIgnorable","ch","plane","from","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","forEach","command","toSVG","cmds","round","join","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","_c$args3","b2ac","t1","sqrt","t2","_arr","StandardNames","_class$1","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_this$_getTableMetric","leftBearing","_this$_getTableMetric2","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","GlyfHeader","numberOfContours","ON_CURVE$1","X_SHORT_VECTOR$1","Y_SHORT_VECTOR$1","REPEAT$1","SAME_X$1","SAME_Y$1","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_SCALE","MORE_COMPONENTS","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_INSTRUCTIONS","Point$1","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_this$_metrics","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","e","blendVector","getBlendVector","numOperands","sum","_phase","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","COLRLayer","color","COLRGlyph","layers","layer","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","TUPLES_SHARE_POINT_NUMBERS","TUPLE_COUNT_MASK","EMBEDDED_TUPLE_COORD","INTERMEDIATE_TUPLE","PRIVATE_POINT_NUMBERS","TUPLE_INDEX_MASK","POINTS_ARE_WORDS","POINT_RUN_COUNT_MASK","DELTAS_ARE_ZERO","DELTAS_ARE_WORDS","DELTA_RUN_COUNT_MASK","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","axisScalar","resolved","Promise","resolve","Subset","mapping","includeGlyph","encodeStream","EncodeStream","then","ON_CURVE","X_SHORT_VECTOR","Y_SHORT_VECTOR","REPEAT","SAME_X","SAME_Y","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_class","TTFFont","toString","variationCoords","_directoryPos","_tables","_glyphs","_decodeDirectory","_getTable","_decodeTable","console","error","getName","nextState","createSubset","getVariation","settings","namedVariations","trim","default","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","alloc","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/fontkit/lib/fontkit.browser.es.js"],"sourcesContent":["import r from 'restructure';\nimport _createForOfIteratorHelperLoose from '@babel/runtime/helpers/createForOfIteratorHelperLoose';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _applyDecoratedDescriptor from '@babel/runtime/helpers/applyDecoratedDescriptor';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\n\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\n\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n};\n\nfontkit.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n};\n\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfontkit.defaultLanguage = 'en';\n\nfontkit.setDefaultLanguage = function (lang) {\n  if (lang === void 0) {\n    lang = 'en';\n  }\n\n  fontkit.defaultLanguage = lang;\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\n\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n});\n\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\n\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\n\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID, languageID) {\n  if (languageID === void 0) {\n    languageID = 0;\n  }\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\n\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(this.records), _step; !(_step = _iterator()).done;) {\n    var record = _step.value;\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\n\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n\nvar glyf = new r.Array(new r.Buffer());\n\nvar CFFIndex = /*#__PURE__*/function () {\n  function CFFIndex(type) {\n    this.type = type;\n  }\n\n  var _proto = CFFIndex.prototype;\n\n  _proto.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  _proto.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  _proto.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {\n      var item = _step.value;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _i = 0, _sizes = sizes; _i < _sizes.length; _i++) {\n      var size = _sizes[_i];\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(arr), _step2; !(_step2 = _iterator2()).done;) {\n      var _item = _step2.value;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = /*#__PURE__*/function () {\n  function CFFOperand() {}\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = /*#__PURE__*/function () {\n  function CFFDict(ops) {\n    if (ops === void 0) {\n      ops = [];\n    }\n\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(ops), _step; !(_step = _iterator()).done;) {\n      var field = _step.value;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  var _proto = CFFDict.prototype;\n\n  _proto.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  _proto.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error(\"Unknown operator \" + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  _proto.size = function size(dict, parent, includePointers) {\n    if (includePointers === void 0) {\n      includePointers = true;\n    }\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(operands), _step2; !(_step2 = _iterator2()).done;) {\n        var op = _step2.value;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  _proto.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.ops), _step3; !(_step3 = _iterator3()).done;) {\n      var field = _step3.value;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(operands), _step4; !(_step4 = _iterator4()).done;) {\n        var op = _step4.value;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(key), _step5; !(_step5 = _iterator5()).done;) {\n        var _op = _step5.value;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = /*#__PURE__*/function (_r$Pointer) {\n  _inheritsLoose(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return _r$Pointer.call(this, null, type, options) || this;\n  }\n\n  var _proto = CFFPointer.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = /*#__PURE__*/function () {\n  function Ptr(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  var _proto2 = Ptr.prototype;\n\n  _proto2.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = /*#__PURE__*/function () {\n  function CFFBlendOp() {}\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _[\"axisIndex\"] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = /*#__PURE__*/function () {\n  function PredefinedOp(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  var _proto = PredefinedOp.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  _proto.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = /*#__PURE__*/function (_r$Number) {\n  _inheritsLoose(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    return _r$Number.call(this, 'UInt8') || this;\n  }\n\n  var _proto2 = CFFEncodingVersion.prototype;\n\n  _proto2.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  } // TODO: supplement?\n\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(RangeArray, _r$Array);\n\n  function RangeArray() {\n    return _r$Array.apply(this, arguments) || this;\n  }\n\n  var _proto3 = RangeArray.prototype;\n\n  _proto3.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = /*#__PURE__*/function () {\n  function CFFPrivateOp() {}\n\n  var _proto4 = CFFPrivateOp.prototype;\n\n  _proto4.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  _proto4.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  _proto4.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = /*#__PURE__*/function () {\n  function CFFFont(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  var _proto = CFFFont.prototype;\n\n  _proto.decode = function decode() {\n    this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  _proto.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  _proto.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  _proto.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  _proto.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error(\"Unknown FDSelect version: \" + this.topDict.FDSelect.version);\n    }\n  };\n\n  _proto.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  _createClass(CFFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {};\n\nvar BitAligned = function BitAligned() {};\n\nnew r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\n\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\n\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis$1 = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis$1),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis$1) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = /*#__PURE__*/function () {\n  function ValueRecord(key) {\n    if (key === void 0) {\n      key = 'valueFormat';\n    }\n\n    this.key = key;\n  }\n\n  var _proto = ValueRecord.prototype;\n\n  _proto.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  _proto.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n}); // export GPOSLookup for JSTF table\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\nvar VariableSizeNumber = /*#__PURE__*/function () {\n  function VariableSizeNumber(size) {\n    this._size = size;\n  }\n\n  var _proto = VariableSizeNumber.prototype;\n\n  _proto.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  _proto.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\n\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\n\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable$1 = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\n\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\n\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\n\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n});\n\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\n\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\n\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac$1,\n  toCoord: shortFrac$1\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  var _proto = UnboundedArrayAccessor.prototype;\n\n  _proto.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  _proto.inspect = function inspect() {\n    return \"[UnboundedArray \" + this.type.constructor.name + \"]\";\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    return _r$Array.call(this, type, 0) || this;\n  }\n\n  var _proto2 = UnboundedArray.prototype;\n\n  _proto2.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\nvar LookupTable = function LookupTable(ValueType) {\n  if (ValueType === void 0) {\n    ValueType = r.uint16;\n  }\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      this.type = type;\n    }\n\n    var _proto3 = Shadow.prototype;\n\n    _proto3.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    _proto3.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    _proto3.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\nfunction StateTable(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\nfunction StateTable1(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n\nvar Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Offset = /*#__PURE__*/function () {\n  function Offset() {}\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\n\nvar ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\n\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\ntables.HVAR = HVAR; // Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$1.length;\n  this.tables = tables$1;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$4;\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$4 = /*#__PURE__*/function () {\n  function CmapProcessor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = _createForOfIteratorHelperLoose(cmapTable.tables), _step; !(_step = _iterator()).done;) {\n        var cmap = _step.value;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  var _proto = CmapProcessor.prototype;\n\n  _proto.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(pairs), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          platformID = _step2$value[0],\n          encodingID = _step2$value[1];\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(cmapTable.tables), _step3; !(_step3 = _iterator3()).done;) {\n        var cmap = _step3.value;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  _proto.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step4; !(_step4 = _iterator4()).done;) {\n            var group = _step4.value;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i = 0; _i < cmap.segCount; _i++) {\n            var end = cmap.endCode.get(_i);\n            var start = cmap.startCode.get(_i);\n            var rangeOffset = cmap.idRangeOffset.get(_i);\n            var delta = cmap.idDelta.get(_i);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step5; !(_step5 = _iterator5()).done;) {\n            var group = _step5.value;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = _createForOfIteratorHelperLoose(cmap.groups.toArray()), _step6; !(_step6 = _iterator6()).done;) {\n            var _group = _step6.value;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), (_applyDecoratedDescriptor(_class$4.prototype, \"getCharacterSet\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"getCharacterSet\"), _class$4.prototype), _applyDecoratedDescriptor(_class$4.prototype, \"codePointsForGlyph\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"codePointsForGlyph\"), _class$4.prototype)), _class$4);\n\nvar KernProcessor = /*#__PURE__*/function () {\n  function KernProcessor(font) {\n    this.kern = font.kern;\n  }\n\n  var _proto = KernProcessor.prototype;\n\n  _proto.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  _proto.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.kern.tables), _step; !(_step = _iterator()).done;) {\n      var table = _step.value;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning table version \" + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning sub-table format \" + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = /*#__PURE__*/function () {\n  function UnicodeLayoutEngine(font) {\n    this.font = font;\n  }\n\n  var _proto = UnicodeLayoutEngine.prototype;\n\n  _proto.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  _proto.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  _proto.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = /*#__PURE__*/function () {\n  function BBox(minX, minY, maxX, maxY) {\n    if (minX === void 0) {\n      minX = Infinity;\n    }\n\n    if (minY === void 0) {\n      minY = Infinity;\n    }\n\n    if (maxX === void 0) {\n      maxX = -Infinity;\n    }\n\n    if (maxY === void 0) {\n      maxY = -Infinity;\n    }\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  var _proto = BBox.prototype;\n\n  _proto.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  _proto.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n\n  return BBox;\n}();\n\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tag), _step; !(_step = _iterator()).done;) {\n      var t = _step.value;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n\n    var _script2 = unicode.getScript(codePoint);\n\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = /*#__PURE__*/function () {\n  function GlyphRun(glyphs, features, script, language, direction$1) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = _createForOfIteratorHelperLoose(features), _step; !(_step = _iterator()).done;) {\n        var tag = _step.value;\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  _createClass(GlyphRun, [{\n    key: \"advanceWidth\",\n    get: function get() {\n      var width = 0;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.positions), _step2; !(_step2 = _iterator2()).done;) {\n        var position = _step2.value;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.positions), _step3; !(_step3 = _iterator3()).done;) {\n        var position = _step3.value;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition(xAdvance, yAdvance, xOffset, yOffset) {\n  if (xAdvance === void 0) {\n    xAdvance = 0;\n  }\n\n  if (yAdvance === void 0) {\n    yAdvance = 0;\n  }\n\n  if (xOffset === void 0) {\n    xOffset = 0;\n  }\n\n  if (yOffset === void 0) {\n    yOffset = 0;\n  }\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping[\"cv\" + (\"00\" + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r = void 0;\n\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if (typeof features === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\nvar AATLookupTable = (_class$3 = /*#__PURE__*/function () {\n  function AATLookupTable(table) {\n    this.table = table;\n  }\n\n  var _proto = AATLookupTable.prototype;\n\n  _proto.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n  };\n\n  _proto.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = _createForOfIteratorHelperLoose(this.table.segments), _step; !(_step = _iterator()).done;) {\n            var segment = _step.value;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = _createForOfIteratorHelperLoose(this.table.segments), _step2; !(_step2 = _iterator2()).done;) {\n            var _segment = _step2.value;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), (_applyDecoratedDescriptor(_class$3.prototype, \"glyphsForValue\", [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, \"glyphsForValue\"), _class$3.prototype)), _class$3);\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = /*#__PURE__*/function () {\n  function AATStateMachine(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  var _proto = AATStateMachine.prototype;\n\n  _proto.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  ;\n\n  _proto.traverse = function traverse(opts, state, visited) {\n    if (state === void 0) {\n      state = 0;\n    }\n\n    if (visited === void 0) {\n      visited = new Set();\n    }\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _this$stateTable = this.stateTable,\n        nClasses = _this$stateTable.nClasses,\n        stateArray = _this$stateTable.stateArray,\n        entryTable = _this$stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.lookupTable.glyphsForValue(classCode)), _step; !(_step = _iterator()).done;) {\n        var glyph = _step.value;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = /*#__PURE__*/function () {\n  function AATMorxProcessor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n\n  var _proto = AATMorxProcessor.prototype;\n\n  _proto.process = function process(glyphs, features) {\n    if (features === void 0) {\n      features = {};\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.morx.chains), _step; !(_step = _iterator()).done;) {\n      var chain = _step.value;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(chain.features), _step2; !(_step2 = _iterator2()).done;) {\n        var feature = _step2.value;\n        var f = void 0;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(chain.subtables), _step3; !(_step3 = _iterator3()).done;) {\n        var subtable = _step3.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  _proto.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  _proto.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  _proto.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error(\"Invalid morx subtable type: \" + this.subtable.type);\n    }\n  };\n\n  _proto.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  _proto.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  _proto.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _this$ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  _proto.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  _proto._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _this$glyphs;\n\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  _proto.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  _proto.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.morx.chains), _step4; !(_step4 = _iterator4()).done;) {\n      var chain = _step4.value;\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(chain.features), _step5; !(_step5 = _iterator5()).done;) {\n        var feature = _step5.value;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  _proto.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  _proto.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose(this.morx.chains), _step6; !(_step6 = _iterator6()).done;) {\n      var chain = _step6.value;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = _createForOfIteratorHelperLoose(chain.subtables), _step7; !(_step7 = _iterator7()).done;) {\n        var subtable = _step7.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  _proto.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), (_applyDecoratedDescriptor(_class$2.prototype, \"getStateMachine\", [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, \"getStateMachine\"), _class$2.prototype)), _class$2);\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction swap(glyphs, rangeA, rangeB, reverseA, reverseB) {\n  if (reverseA === void 0) {\n    reverseA = false;\n  }\n\n  if (reverseB === void 0) {\n    reverseB = false;\n  }\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(\"Unknown verb: \" + verb);\n  }\n}\n\nvar AATLayoutEngine = /*#__PURE__*/function () {\n  function AATLayoutEngine(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  var _proto = AATLayoutEngine.prototype;\n\n  _proto.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = _createForOfIteratorHelperLoose(glyphStrings), _step; !(_step = _iterator()).done;) {\n      var glyphs = _step.value;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  _proto._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = /*#__PURE__*/function () {\n  function ShapingPlan(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  var _proto = ShapingPlan.prototype;\n\n  _proto._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(features), _step; !(_step = _iterator()).done;) {\n      var feature = _step.value;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n  /**\n   * Add features to the last stage\n   */\n  ;\n\n  _proto.add = function add(arg, global) {\n    if (global === void 0) {\n      global = true;\n    }\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n  /**\n   * Add a new stage\n   */\n  ;\n\n  _proto.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  _proto.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  ;\n\n  _proto.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var glyph = _step2.value;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  ;\n\n  _proto.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.stages), _step3; !(_step3 = _iterator3()).done;) {\n      var stage = _step3.value;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\n// Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = /*#__PURE__*/function () {\n  function DefaultShaper() {}\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}();\n\nDefaultShaper.zeroMarkWidths = 'AFTER_GPOS';\n\nvar type$2 = \"Buffer\";\nvar data$2 = [\n\t0,\n\t1,\n\t240,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t56,\n\t0,\n\t1,\n\t253,\n\t1,\n\t2,\n\t254,\n\t237,\n\t154,\n\t45,\n\t76,\n\t196,\n\t48,\n\t20,\n\t199,\n\t187,\n\t237,\n\t190,\n\t56,\n\t64,\n\t129,\n\t192,\n\t224,\n\t144,\n\t72,\n\t4,\n\t2,\n\t121,\n\t151,\n\t16,\n\t18,\n\t12,\n\t9,\n\t134,\n\t132,\n\t115,\n\t40,\n\t4,\n\t138,\n\t160,\n\t80,\n\t224,\n\t80,\n\t36,\n\t8,\n\t78,\n\t34,\n\t145,\n\t72,\n\t12,\n\t138,\n\t32,\n\t73,\n\t72,\n\t8,\n\t18,\n\t137,\n\t68,\n\t18,\n\t12,\n\t201,\n\t253,\n\t47,\n\t215,\n\t146,\n\t151,\n\t166,\n\t221,\n\t117,\n\t215,\n\t110,\n\t131,\n\t219,\n\t123,\n\t201,\n\t47,\n\t237,\n\t173,\n\t235,\n\t235,\n\t123,\n\t237,\n\t235,\n\t219,\n\t186,\n\t92,\n\t55,\n\t22,\n\t98,\n\t27,\n\t236,\n\t130,\n\t125,\n\t208,\n\t149,\n\t191,\n\t255,\n\t75,\n\t121,\n\t12,\n\t78,\n\t193,\n\t25,\n\t184,\n\t0,\n\t151,\n\t160,\n\t15,\n\t110,\n\t192,\n\t45,\n\t184,\n\t3,\n\t247,\n\t224,\n\t1,\n\t60,\n\t145,\n\t126,\n\t207,\n\t224,\n\t77,\n\t254,\n\t30,\n\t242,\n\t14,\n\t62,\n\t100,\n\t253,\n\t83,\n\t150,\n\t95,\n\t164,\n\t157,\n\t153,\n\t78,\n\t126,\n\t192,\n\t181,\n\t164,\n\t158,\n\t8,\n\t49,\n\t15,\n\t22,\n\t146,\n\t242,\n\t237,\n\t42,\n\t138,\n\t37,\n\t248,\n\t186,\n\t44,\n\t253,\n\t93,\n\t169,\n\t144,\n\t223,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t84,\n\t143,\n\t225,\n\t247,\n\t159,\n\t85,\n\t254,\n\t254,\n\t193,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t185,\n\t114,\n\t53,\n\t51,\n\t98,\n\t49,\n\t39,\n\t94,\n\t193,\n\t92,\n\t91,\n\t136,\n\t14,\n\t56,\n\t7,\n\t143,\n\t224,\n\t187,\n\t61,\n\t106,\n\t91,\n\t159,\n\t21,\n\t98,\n\t83,\n\t8,\n\t209,\n\t107,\n\t9,\n\t209,\n\t111,\n\t141,\n\t234,\n\t69,\n\t240,\n\t210,\n\t202,\n\t111,\n\t62,\n\t215,\n\t112,\n\t134,\n\t217,\n\t48,\n\t156,\n\t99,\n\t58,\n\t184,\n\t182,\n\t149,\n\t225,\n\t124,\n\t179,\n\t131,\n\t123,\n\t247,\n\t60,\n\t207,\n\t67,\n\t61,\n\t244,\n\t63,\n\t176,\n\t232,\n\t56,\n\t196,\n\t245,\n\t163,\n\t138,\n\t156,\n\t183,\n\t212,\n\t255,\n\t11,\n\t78,\n\t166,\n\t212,\n\t223,\n\t78,\n\t28,\n\t253,\n\t194,\n\t194,\n\t82,\n\t101,\n\t137,\n\t44,\n\t208,\n\t118,\n\t83,\n\t61,\n\t148,\n\t212,\n\t164,\n\t222,\n\t68,\n\t163,\n\t102,\n\t40,\n\t117,\n\t76,\n\t125,\n\t178,\n\t66,\n\t251,\n\t253,\n\t37,\n\t161,\n\t54,\n\t81,\n\t31,\n\t245,\n\t185,\n\t114,\n\t241,\n\t47,\n\t4,\n\t147,\n\t204,\n\t109,\n\t17,\n\t36,\n\t90,\n\t221,\n\t197,\n\t15,\n\t83,\n\t92,\n\t169,\n\t118,\n\t65,\n\t74,\n\t155,\n\t132,\n\t216,\n\t7,\n\t116,\n\t60,\n\t23,\n\t161,\n\t62,\n\t211,\n\t107,\n\t62,\n\t210,\n\t4,\n\t117,\n\t131,\n\t254,\n\t134,\n\t36,\n\t109,\n\t253,\n\t93,\n\t99,\n\t34,\n\t33,\n\t58,\n\t245,\n\t126,\n\t13,\n\t79,\n\t251,\n\t149,\n\t100,\n\t141,\n\t207,\n\t80,\n\t113,\n\t61,\n\t110,\n\t110,\n\t76,\n\t237,\n\t227,\n\t198,\n\t117,\n\t149,\n\t178,\n\t247,\n\t157,\n\t111,\n\t236,\n\t217,\n\t250,\n\t143,\n\t203,\n\t245,\n\t89,\n\t98,\n\t143,\n\t222,\n\t107,\n\t122,\n\t182,\n\t217,\n\t236,\n\t138,\n\t12,\n\t122,\n\t84,\n\t222,\n\t213,\n\t115,\n\t69,\n\t104,\n\t153,\n\t36,\n\t134,\n\t169,\n\t109,\n\t166,\n\t24,\n\t211,\n\t245,\n\t154,\n\t230,\n\t79,\n\t151,\n\t178,\n\t223,\n\t140,\n\t213,\n\t26,\n\t40,\n\t209,\n\t109,\n\t12,\n\t101,\n\t95,\n\t217,\n\t251,\n\t196,\n\t244,\n\t238,\n\t213,\n\t148,\n\t20,\n\t185,\n\t143,\n\t125,\n\t247,\n\t115,\n\t154,\n\t127,\n\t121,\n\t234,\n\t14,\n\t169,\n\t203,\n\t53,\n\t71,\n\t248,\n\t72,\n\t168,\n\t53,\n\t139,\n\t39,\n\t180,\n\t211,\n\t150,\n\t75,\n\t34,\n\t173,\n\t84,\n\t245,\n\t72,\n\t142,\n\t229,\n\t242,\n\t78,\n\t24,\n\t167,\n\t232,\n\t55,\n\t141,\n\t167,\n\t198,\n\t114,\n\t181,\n\t53,\n\t68,\n\t206,\n\t165,\n\t246,\n\t216,\n\t124,\n\t209,\n\t115,\n\t169,\n\t158,\n\t83,\n\t125,\n\t237,\n\t176,\n\t205,\n\t99,\n\t136,\n\t184,\n\t179,\n\t173,\n\t65,\n\t209,\n\t40,\n\t191,\n\t138,\n\t150,\n\t180,\n\t184,\n\t115,\n\t37,\n\t235,\n\t58,\n\t132,\n\t142,\n\t81,\n\t95,\n\t9,\n\t153,\n\t191,\n\t76,\n\t207,\n\t10,\n\t155,\n\t52,\n\t3,\n\t142,\n\t107,\n\t147,\n\t1\n];\nvar trieData$2 = {\n\ttype: type$2,\n\tdata: data$2\n};\n\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE$1 = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie$2.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = /*#__PURE__*/function () {\n  function GlyphIterator(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  var _proto = GlyphIterator.prototype;\n\n  _proto.reset = function reset(options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  _proto.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  _proto.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _proto.next = function next() {\n    return this.move(+1);\n  };\n\n  _proto.prev = function prev() {\n    return this.move(-1);\n  };\n\n  _proto.peek = function peek(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  _proto.peekIndex = function peekIndex(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  _proto.increment = function increment(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = /*#__PURE__*/function () {\n  function OTProcessor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  var _proto = OTProcessor.prototype;\n\n  _proto.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(script), _step; !(_step = _iterator()).done;) {\n      var s = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.table.scriptList), _step2; !(_step2 = _iterator2()).done;) {\n        var entry = _step2.value;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.selectScript = function selectScript(script, language, direction$1) {\n    var changed = false;\n    var entry;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$1 || direction$1 !== this.direction) {\n      this.direction = direction$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.script.langSysRecords), _step3; !(_step3 = _iterator3()).done;) {\n        var lang = _step3.value;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(this.language.featureIndexes), _step4; !(_step4 = _iterator4()).done;) {\n          var featureIndex = _step4.value;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  _proto.lookupsForFeatures = function lookupsForFeatures(userFeatures, exclude) {\n    if (userFeatures === void 0) {\n      userFeatures = [];\n    }\n\n    var lookups = [];\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose(userFeatures), _step5; !(_step5 = _iterator5()).done;) {\n      var tag = _step5.value;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = _createForOfIteratorHelperLoose(feature.lookupListIndexes), _step6; !(_step6 = _iterator6()).done;) {\n        var lookupIndex = _step6.value;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  _proto.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = _createForOfIteratorHelperLoose(substitutions), _step7; !(_step7 = _iterator7()).done;) {\n      var substitution = _step7.value;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  _proto.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  _proto.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = _createForOfIteratorHelperLoose(lookups), _step8; !(_step8 = _iterator8()).done;) {\n      var _step8$value = _step8.value,\n          feature = _step8$value.feature,\n          lookup = _step8$value.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = _createForOfIteratorHelperLoose(lookup.subTables), _step9; !(_step9 = _iterator9()).done;) {\n          var table = _step9.value;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  _proto.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  _proto.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = _createForOfIteratorHelperLoose(lookupRecords), _step10; !(_step10 = _iterator10()).done;) {\n      var lookupRecord = _step10.value;\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = _createForOfIteratorHelperLoose(lookup.subTables), _step11; !(_step11 = _iterator11()).done;) {\n        var table = _step11.value;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  _proto.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = _createForOfIteratorHelperLoose(coverage.rangeRecords), _step12; !(_step12 = _iterator12()).done;) {\n          var range = _step12.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  _proto.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  _proto.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  _proto.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  _proto.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  _proto.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = _createForOfIteratorHelperLoose(classDef.classRangeRecord), _step13; !(_step13 = _iterator13()).done;) {\n          var range = _step13.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  _proto.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  _proto.applyContext = function applyContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.ruleSets[index];\n\n        for (var _iterator14 = _createForOfIteratorHelperLoose(set), _step14; !(_step14 = _iterator14()).done;) {\n          var rule = _step14.value;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n\n        for (var _iterator15 = _createForOfIteratorHelperLoose(set), _step15; !(_step15 = _iterator15()).done;) {\n          var _rule = _step15.value;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  _proto.applyChainingContext = function applyChainingContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.chainRuleSets[index];\n\n        for (var _iterator16 = _createForOfIteratorHelperLoose(set), _step16; !(_step16 = _iterator16()).done;) {\n          var rule = _step16.value;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = _createForOfIteratorHelperLoose(rules), _step17; !(_step17 = _iterator17()).done;) {\n          var _rule2 = _step17.value;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = /*#__PURE__*/function () {\n  function GlyphInfo(font, id, codePoints, features) {\n    if (codePoints === void 0) {\n      codePoints = [];\n    }\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  var _proto = GlyphInfo.prototype;\n\n  _proto.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n\n  _createClass(GlyphInfo, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n\n  return GlyphInfo;\n}();\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\nvar HangulShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper);\n\nHangulShaper.zeroMarkWidths = 'NONE';\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv, ljmo, vjmo, tjmo;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar INITIAL_STATE = 1;\nvar FAIL_STATE = 0;\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\n\nvar StateMachine = /*#__PURE__*/function () {\n  function StateMachine(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n\n\n  var _proto = StateMachine.prototype;\n\n  _proto.match = function match(str) {\n    var _ref;\n\n    var self = this;\n    return _ref = {}, _ref[Symbol.iterator] = /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var state, startRun, lastAccepting, lastState, p, c;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = INITIAL_STATE;\n              startRun = null;\n              lastAccepting = null;\n              lastState = null;\n              p = 0;\n\n            case 5:\n              if (!(p < str.length)) {\n                _context.next = 21;\n                break;\n              }\n\n              c = str[p];\n              lastState = state;\n              state = self.stateTable[state][c];\n\n              if (!(state === FAIL_STATE)) {\n                _context.next = 15;\n                break;\n              }\n\n              if (!(startRun != null && lastAccepting != null && lastAccepting >= startRun)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return [startRun, lastAccepting, self.tags[lastState]];\n\n            case 13:\n              // reset the state as if we started over from the initial state\n              state = self.stateTable[INITIAL_STATE][c];\n              startRun = null;\n\n            case 15:\n              // start a run if not in the failure state\n              if (state !== FAIL_STATE && startRun == null) {\n                startRun = p;\n              } // if accepting, mark the potential match end\n\n\n              if (self.accepting[state]) {\n                lastAccepting = p;\n              } // reset the state to the initial state if we get into the failure state\n\n\n              if (state === FAIL_STATE) {\n                state = INITIAL_STATE;\n              }\n\n            case 18:\n              p++;\n              _context.next = 5;\n              break;\n\n            case 21:\n              if (!(startRun != null && lastAccepting != null && lastAccepting >= startRun)) {\n                _context.next = 24;\n                break;\n              }\n\n              _context.next = 24;\n              return [startRun, lastAccepting, self.tags[state]];\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), _ref;\n  }\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */\n  ;\n\n  _proto.apply = function apply(str, actions) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.match(str)), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          start = _step$value[0],\n          end = _step$value[1],\n          tags = _step$value[2];\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(tags), _step2; !(_step2 = _iterator2()).done;) {\n        var tag = _step2.value;\n\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  };\n\n  return StateMachine;\n}();\n\nvar dfa = StateMachine;\n\nvar stateTable$1 = [\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t11,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t17\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t29,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t43,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t45,\n\t\t46,\n\t\t47,\n\t\t48,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t0,\n\t\t51,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t52,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t54,\n\t\t55,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t60,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t4,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t63,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t63,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t11,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t0,\n\t\t2,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t65,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t69,\n\t\t0,\n\t\t70,\n\t\t70,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t73,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t77,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t79,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t20,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t81,\n\t\t82,\n\t\t83,\n\t\t84,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t86,\n\t\t0,\n\t\t0,\n\t\t87,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t88,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t89,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t77,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t89,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t94,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t98,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t102,\n\t\t103,\n\t\t104,\n\t\t105,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t107,\n\t\t0,\n\t\t0,\n\t\t108,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t109,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t110,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t98,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t110,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t117,\n\t\t118,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t122,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t124,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t124,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t125,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t126,\n\t\t126,\n\t\t8,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t47,\n\t\t48,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47,\n\t\t47,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t127,\n\t\t127,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t128,\n\t\t127,\n\t\t127,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t129,\n\t\t130,\n\t\t131,\n\t\t132,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t134,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t135,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t138,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t60,\n\t\t140,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t142,\n\t\t143,\n\t\t144,\n\t\t145,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t147,\n\t\t0,\n\t\t0,\n\t\t148,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t149,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t150,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t138,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t150,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t156,\n\t\t157,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t159,\n\t\t160,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t163,\n\t\t0,\n\t\t75,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t164,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t124,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t164,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t124,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t70,\n\t\t70,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t166,\n\t\t0,\n\t\t0,\n\t\t167,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t168,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t171,\n\t\t172,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t178,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t178,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t179,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t180,\n\t\t180,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t82,\n\t\t83,\n\t\t84,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t83,\n\t\t83,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t181,\n\t\t181,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t182,\n\t\t181,\n\t\t181,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t183,\n\t\t184,\n\t\t185,\n\t\t186,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t86,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t188,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t190,\n\t\t191,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t193,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t178,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t193,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t178,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t197,\n\t\t198,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t202,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t204,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t204,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t205,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t206,\n\t\t206,\n\t\t32,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t103,\n\t\t104,\n\t\t105,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t104,\n\t\t104,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t207,\n\t\t207,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t208,\n\t\t207,\n\t\t207,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t209,\n\t\t210,\n\t\t211,\n\t\t212,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t107,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t214,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t216,\n\t\t217,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t219,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t204,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t219,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t204,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t221,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t224,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t117,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t226,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t224,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t226,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t228,\n\t\t229,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t122,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t8,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t231,\n\t\t231,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t232,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t130,\n\t\t131,\n\t\t132,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t131,\n\t\t131,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t233,\n\t\t233,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t234,\n\t\t233,\n\t\t233,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t235,\n\t\t236,\n\t\t237,\n\t\t238,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t242,\n\t\t243,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t247,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t249,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t249,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t250,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t251,\n\t\t251,\n\t\t57,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t143,\n\t\t144,\n\t\t145,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t144,\n\t\t144,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t252,\n\t\t252,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t253,\n\t\t252,\n\t\t252,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t254,\n\t\t255,\n\t\t256,\n\t\t257,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t147,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t259,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t261,\n\t\t262,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t264,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t249,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t264,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t249,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t221,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t156,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t266,\n\t\t266,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t267,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t43,\n\t\t268,\n\t\t268,\n\t\t269,\n\t\t161,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t267,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t270,\n\t\t0,\n\t\t0,\n\t\t271,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t272,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t273,\n\t\t274,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t273,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t275,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t166,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t276,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t277,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t280,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t171,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t282,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t280,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t282,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t284,\n\t\t285,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t287,\n\t\t287,\n\t\t85,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t288,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t184,\n\t\t185,\n\t\t186,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t185,\n\t\t185,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t289,\n\t\t289,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t290,\n\t\t289,\n\t\t289,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t291,\n\t\t292,\n\t\t293,\n\t\t294,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t277,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t190,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t296,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t297,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t300,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t197,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t302,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t300,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t302,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t304,\n\t\t305,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t202,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t32,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t307,\n\t\t307,\n\t\t106,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t308,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t210,\n\t\t211,\n\t\t212,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t211,\n\t\t211,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t309,\n\t\t309,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t310,\n\t\t309,\n\t\t309,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t311,\n\t\t312,\n\t\t313,\n\t\t314,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t297,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t216,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t316,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t319,\n\t\t320,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t323,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t324,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t326,\n\t\t327,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t64,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t228,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t329,\n\t\t329,\n\t\t133,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t330,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t236,\n\t\t237,\n\t\t238,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t237,\n\t\t237,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t331,\n\t\t331,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t332,\n\t\t331,\n\t\t331,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t333,\n\t\t40,\n\t\t121,\n\t\t334,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t335,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t338,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t242,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t340,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t338,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t340,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t342,\n\t\t343,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t247,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t57,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t345,\n\t\t345,\n\t\t146,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t346,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t255,\n\t\t256,\n\t\t257,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t256,\n\t\t256,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t347,\n\t\t347,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t348,\n\t\t347,\n\t\t347,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t349,\n\t\t350,\n\t\t351,\n\t\t352,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t335,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t261,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t354,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t126,\n\t\t126,\n\t\t8,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t355,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t125,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t355,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t356,\n\t\t356,\n\t\t269,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t357,\n\t\t358,\n\t\t359,\n\t\t360,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t270,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t363,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t365,\n\t\t366,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t371,\n\t\t372,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t375,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t376,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t378,\n\t\t379,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t90,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t284,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t85,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t82,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t381,\n\t\t381,\n\t\t187,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t382,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t292,\n\t\t293,\n\t\t294,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t293,\n\t\t293,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t383,\n\t\t383,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t384,\n\t\t383,\n\t\t383,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t385,\n\t\t76,\n\t\t175,\n\t\t386,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t389,\n\t\t390,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t393,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t394,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t396,\n\t\t397,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t111,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t304,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t106,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t103,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t399,\n\t\t399,\n\t\t213,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t400,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t312,\n\t\t313,\n\t\t314,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t313,\n\t\t313,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t401,\n\t\t401,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t402,\n\t\t401,\n\t\t401,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t403,\n\t\t97,\n\t\t201,\n\t\t404,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t405,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t408,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t319,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t410,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t408,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t410,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t323,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t405,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t326,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t133,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t130,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t411,\n\t\t411,\n\t\t239,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t412,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t121,\n\t\t334,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t413,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t416,\n\t\t417,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t420,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t421,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t423,\n\t\t424,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t151,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t342,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t146,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t143,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t426,\n\t\t426,\n\t\t258,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t427,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t350,\n\t\t351,\n\t\t352,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t351,\n\t\t351,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t428,\n\t\t428,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t429,\n\t\t428,\n\t\t428,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t430,\n\t\t137,\n\t\t246,\n\t\t431,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t433,\n\t\t434,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t180,\n\t\t180,\n\t\t269,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t358,\n\t\t359,\n\t\t360,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t359,\n\t\t359,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t436,\n\t\t436,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t437,\n\t\t436,\n\t\t436,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t438,\n\t\t439,\n\t\t440,\n\t\t441,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t443,\n\t\t274,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t443,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t444,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t365,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t446,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t449,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t371,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t451,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t449,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t451,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t375,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t446,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t378,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t187,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t184,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t452,\n\t\t452,\n\t\t295,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t453,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t175,\n\t\t386,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t454,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t455,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t458,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t389,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t460,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t458,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t460,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t393,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t455,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t396,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t213,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t210,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t461,\n\t\t461,\n\t\t315,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t462,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t201,\n\t\t404,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t463,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t466,\n\t\t467,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t470,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t471,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t473,\n\t\t474,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t239,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t236,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t476,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t477,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t480,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t416,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t482,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t480,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t482,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t420,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t477,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t423,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t258,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t255,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t483,\n\t\t483,\n\t\t353,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t484,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t246,\n\t\t431,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t485,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t444,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t433,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t486,\n\t\t486,\n\t\t361,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t487,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t439,\n\t\t440,\n\t\t441,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t440,\n\t\t440,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t488,\n\t\t488,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t489,\n\t\t488,\n\t\t488,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t490,\n\t\t491,\n\t\t492,\n\t\t493,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t496,\n\t\t497,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t501,\n\t\t502,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t505,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t506,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t508,\n\t\t509,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t295,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t292,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t511,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t514,\n\t\t515,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t518,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t519,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t521,\n\t\t522,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t315,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t312,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t524,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t525,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t528,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t466,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t530,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t528,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t530,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t470,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t525,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t473,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t533,\n\t\t534,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t537,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t538,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t540,\n\t\t541,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t353,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t350,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t543,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t361,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t358,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t544,\n\t\t544,\n\t\t442,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t545,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t491,\n\t\t492,\n\t\t493,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t492,\n\t\t492,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t546,\n\t\t546,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t547,\n\t\t546,\n\t\t546,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t548,\n\t\t549,\n\t\t368,\n\t\t550,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t274,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t496,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t551,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t554,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t501,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t556,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t554,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t556,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t505,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t551,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t508,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t557,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t560,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t514,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t562,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t560,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t562,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t518,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t557,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t521,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t564,\n\t\t565,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t567,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t568,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t570,\n\t\t571,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t573,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t576,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t533,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t578,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t576,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t578,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t537,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t573,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t540,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t442,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t439,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t579,\n\t\t579,\n\t\t494,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t580,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t549,\n\t\t368,\n\t\t550,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t581,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t583,\n\t\t584,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t586,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t587,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t589,\n\t\t590,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t593,\n\t\t594,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t596,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t597,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t599,\n\t\t600,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t602,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t564,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t567,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t602,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t570,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t604,\n\t\t605,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t607,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t608,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t610,\n\t\t611,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t494,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t491,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t613,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t614,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t583,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t586,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t614,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t589,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t615,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t593,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t596,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t615,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t599,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t616,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t604,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t607,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t616,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t610,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t549,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t]\n];\nvar accepting$1 = [\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue\n];\nvar tags$1 = [\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t]\n];\nvar indicMachine = {\n\tstateTable: stateTable$1,\n\taccepting: accepting$1,\n\ttags: tags$1\n};\n\nvar categories$1 = [\n\t\"O\",\n\t\"IND\",\n\t\"S\",\n\t\"GB\",\n\t\"B\",\n\t\"FM\",\n\t\"CGJ\",\n\t\"VMAbv\",\n\t\"VMPst\",\n\t\"VAbv\",\n\t\"VPst\",\n\t\"CMBlw\",\n\t\"VPre\",\n\t\"VBlw\",\n\t\"H\",\n\t\"VMBlw\",\n\t\"CMAbv\",\n\t\"MBlw\",\n\t\"CS\",\n\t\"R\",\n\t\"SUB\",\n\t\"MPst\",\n\t\"MPre\",\n\t\"FAbv\",\n\t\"FPst\",\n\t\"FBlw\",\n\t\"null\",\n\t\"SMAbv\",\n\t\"SMBlw\",\n\t\"VMPre\",\n\t\"ZWNJ\",\n\t\"ZWJ\",\n\t\"WJ\",\n\t\"M\",\n\t\"VS\",\n\t\"N\",\n\t\"HN\",\n\t\"MAbv\"\n];\nvar decompositions$2 = {\n\t\"2507\": [\n\t\t2503,\n\t\t2494\n\t],\n\t\"2508\": [\n\t\t2503,\n\t\t2519\n\t],\n\t\"2888\": [\n\t\t2887,\n\t\t2902\n\t],\n\t\"2891\": [\n\t\t2887,\n\t\t2878\n\t],\n\t\"2892\": [\n\t\t2887,\n\t\t2903\n\t],\n\t\"3018\": [\n\t\t3014,\n\t\t3006\n\t],\n\t\"3019\": [\n\t\t3015,\n\t\t3006\n\t],\n\t\"3020\": [\n\t\t3014,\n\t\t3031\n\t],\n\t\"3144\": [\n\t\t3142,\n\t\t3158\n\t],\n\t\"3264\": [\n\t\t3263,\n\t\t3285\n\t],\n\t\"3271\": [\n\t\t3270,\n\t\t3285\n\t],\n\t\"3272\": [\n\t\t3270,\n\t\t3286\n\t],\n\t\"3274\": [\n\t\t3270,\n\t\t3266\n\t],\n\t\"3275\": [\n\t\t3270,\n\t\t3266,\n\t\t3285\n\t],\n\t\"3402\": [\n\t\t3398,\n\t\t3390\n\t],\n\t\"3403\": [\n\t\t3399,\n\t\t3390\n\t],\n\t\"3404\": [\n\t\t3398,\n\t\t3415\n\t],\n\t\"3546\": [\n\t\t3545,\n\t\t3530\n\t],\n\t\"3548\": [\n\t\t3545,\n\t\t3535\n\t],\n\t\"3549\": [\n\t\t3545,\n\t\t3535,\n\t\t3530\n\t],\n\t\"3550\": [\n\t\t3545,\n\t\t3551\n\t],\n\t\"3635\": [\n\t\t3661,\n\t\t3634\n\t],\n\t\"3763\": [\n\t\t3789,\n\t\t3762\n\t],\n\t\"3955\": [\n\t\t3953,\n\t\t3954\n\t],\n\t\"3957\": [\n\t\t3953,\n\t\t3956\n\t],\n\t\"3958\": [\n\t\t4018,\n\t\t3968\n\t],\n\t\"3959\": [\n\t\t4018,\n\t\t3953,\n\t\t3968\n\t],\n\t\"3960\": [\n\t\t4019,\n\t\t3968\n\t],\n\t\"3961\": [\n\t\t4019,\n\t\t3953,\n\t\t3968\n\t],\n\t\"3969\": [\n\t\t3953,\n\t\t3968\n\t],\n\t\"6971\": [\n\t\t6970,\n\t\t6965\n\t],\n\t\"6973\": [\n\t\t6972,\n\t\t6965\n\t],\n\t\"6976\": [\n\t\t6974,\n\t\t6965\n\t],\n\t\"6977\": [\n\t\t6975,\n\t\t6965\n\t],\n\t\"6979\": [\n\t\t6978,\n\t\t6965\n\t],\n\t\"69934\": [\n\t\t69937,\n\t\t69927\n\t],\n\t\"69935\": [\n\t\t69938,\n\t\t69927\n\t],\n\t\"70475\": [\n\t\t70471,\n\t\t70462\n\t],\n\t\"70476\": [\n\t\t70471,\n\t\t70487\n\t],\n\t\"70843\": [\n\t\t70841,\n\t\t70842\n\t],\n\t\"70844\": [\n\t\t70841,\n\t\t70832\n\t],\n\t\"70846\": [\n\t\t70841,\n\t\t70845\n\t],\n\t\"71098\": [\n\t\t71096,\n\t\t71087\n\t],\n\t\"71099\": [\n\t\t71097,\n\t\t71087\n\t]\n};\nvar stateTable = [\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t2,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t4,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t17,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t2,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t39,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t4,\n\t\t4,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t48,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t21,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t51,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t39,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t52,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t48,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t51,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t54,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t52,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t51,\n\t\t0\n\t]\n];\nvar accepting = [\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue\n];\nvar tags = [\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"independent_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"independent_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"virama_terminated_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t],\n\t[\n\t\t\"number_joiner_terminated_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t]\n];\nvar useData = {\n\tcategories: categories$1,\n\tdecompositions: decompositions$2,\n\tstateTable: stateTable,\n\taccepting: accepting,\n\ttags: tags\n};\n\n// Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar type$1 = \"Buffer\";\nvar data$1 = [\n\t0,\n\t17,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t216,\n\t96,\n\t1,\n\t102,\n\t15,\n\t153,\n\t240,\n\t237,\n\t157,\n\t123,\n\t140,\n\t92,\n\t85,\n\t29,\n\t199,\n\t239,\n\t238,\n\t206,\n\t206,\n\t204,\n\t238,\n\t204,\n\t238,\n\t116,\n\t11,\n\t68,\n\t8,\n\t98,\n\t81,\n\t32,\n\t196,\n\t80,\n\t109,\n\t64,\n\t34,\n\t182,\n\t20,\n\t22,\n\t144,\n\t96,\n\t10,\n\t137,\n\t88,\n\t77,\n\t164,\n\t85,\n\t81,\n\t68,\n\t9,\n\t136,\n\t65,\n\t80,\n\t131,\n\t144,\n\t54,\n\t8,\n\t8,\n\t106,\n\t45,\n\t32,\n\t15,\n\t65,\n\t76,\n\t44,\n\t252,\n\t33,\n\t229,\n\t47,\n\t138,\n\t254,\n\t193,\n\t67,\n\t99,\n\t193,\n\t180,\n\t18,\n\t17,\n\t44,\n\t16,\n\t80,\n\t33,\n\t96,\n\t20,\n\t176,\n\t168,\n\t53,\n\t4,\n\t172,\n\t81,\n\t2,\n\t162,\n\t32,\n\t126,\n\t207,\n\t220,\n\t115,\n\t230,\n\t158,\n\t57,\n\t115,\n\t222,\n\t143,\n\t123,\n\t103,\n\t101,\n\t126,\n\t201,\n\t39,\n\t247,\n\t113,\n\t206,\n\t61,\n\t231,\n\t119,\n\t126,\n\t191,\n\t243,\n\t190,\n\t119,\n\t103,\n\t151,\n\t212,\n\t178,\n\t236,\n\t96,\n\t176,\n\t12,\n\t28,\n\t1,\n\t78,\n\t6,\n\t167,\n\t128,\n\t79,\n\t128,\n\t207,\n\t130,\n\t119,\n\t131,\n\t247,\n\t70,\n\t56,\n\t158,\n\t14,\n\t206,\n\t6,\n\t95,\n\t2,\n\t235,\n\t28,\n\t158,\n\t91,\n\t15,\n\t46,\n\t3,\n\t27,\n\t192,\n\t53,\n\t224,\n\t187,\n\t224,\n\t102,\n\t176,\n\t25,\n\t108,\n\t1,\n\t119,\n\t130,\n\t123,\n\t52,\n\t207,\n\t95,\n\t0,\n\t46,\n\t6,\n\t63,\n\t7,\n\t191,\n\t2,\n\t247,\n\t131,\n\t71,\n\t192,\n\t19,\n\t224,\n\t105,\n\t176,\n\t4,\n\t252,\n\t5,\n\t252,\n\t13,\n\t188,\n\t12,\n\t230,\n\t193,\n\t127,\n\t65,\n\t125,\n\t50,\n\t15,\n\t155,\n\t197,\n\t113,\n\t79,\n\t240,\n\t86,\n\t112,\n\t32,\n\t88,\n\t10,\n\t14,\n\t3,\n\t43,\n\t192,\n\t113,\n\t224,\n\t68,\n\t240,\n\t33,\n\t176,\n\t6,\n\t156,\n\t6,\n\t206,\n\t2,\n\t95,\n\t0,\n\t95,\n\t1,\n\t95,\n\t5,\n\t223,\n\t0,\n\t87,\n\t130,\n\t235,\n\t193,\n\t38,\n\t176,\n\t25,\n\t108,\n\t1,\n\t119,\n\t130,\n\t173,\n\t224,\n\t62,\n\t240,\n\t32,\n\t120,\n\t12,\n\t60,\n\t5,\n\t254,\n\t8,\n\t118,\n\t129,\n\t221,\n\t224,\n\t21,\n\t240,\n\t6,\n\t152,\n\t172,\n\t103,\n\t217,\n\t12,\n\t216,\n\t11,\n\t236,\n\t7,\n\t14,\n\t4,\n\t75,\n\t193,\n\t225,\n\t96,\n\t37,\n\t56,\n\t22,\n\t172,\n\t170,\n\t231,\n\t186,\n\t175,\n\t198,\n\t113,\n\t13,\n\t56,\n\t141,\n\t94,\n\t159,\n\t133,\n\t227,\n\t121,\n\t224,\n\t66,\n\t112,\n\t17,\n\t184,\n\t28,\n\t92,\n\t1,\n\t190,\n\t67,\n\t195,\n\t191,\n\t143,\n\t227,\n\t45,\n\t224,\n\t54,\n\t112,\n\t7,\n\t216,\n\t90,\n\t207,\n\t203,\n\t125,\n\t31,\n\t61,\n\t218,\n\t242,\n\t32,\n\t141,\n\t255,\n\t24,\n\t142,\n\t191,\n\t4,\n\t79,\n\t209,\n\t235,\n\t199,\n\t233,\n\t241,\n\t58,\n\t240,\n\t12,\n\t206,\n\t31,\n\t226,\n\t158,\n\t217,\n\t229,\n\t152,\n\t135,\n\t13,\n\t207,\n\t112,\n\t105,\n\t238,\n\t198,\n\t249,\n\t43,\n\t224,\n\t13,\n\t208,\n\t104,\n\t100,\n\t89,\n\t7,\n\t188,\n\t5,\n\t44,\n\t1,\n\t7,\n\t131,\n\t101,\n\t224,\n\t136,\n\t70,\n\t127,\n\t124,\n\t114,\n\t156,\n\t167,\n\t247,\n\t30,\n\t6,\n\t31,\n\t192,\n\t249,\n\t201,\n\t224,\n\t20,\n\t240,\n\t169,\n\t70,\n\t110,\n\t175,\n\t51,\n\t113,\n\t60,\n\t151,\n\t198,\n\t185,\n\t128,\n\t222,\n\t187,\n\t24,\n\t199,\n\t111,\n\t130,\n\t171,\n\t27,\n\t121,\n\t125,\n\t154,\n\t167,\n\t220,\n\t136,\n\t235,\n\t77,\n\t96,\n\t51,\n\t184,\n\t13,\n\t220,\n\t1,\n\t182,\n\t210,\n\t103,\n\t238,\n\t163,\n\t199,\n\t29,\n\t56,\n\t254,\n\t134,\n\t166,\n\t247,\n\t84,\n\t131,\n\t218,\n\t10,\n\t199,\n\t63,\n\t55,\n\t244,\n\t101,\n\t125,\n\t209,\n\t16,\n\t206,\n\t219,\n\t248,\n\t37,\n\t196,\n\t221,\n\t65,\n\t239,\n\t221,\n\t13,\n\t94,\n\t195,\n\t117,\n\t173,\n\t153,\n\t101,\n\t237,\n\t102,\n\t17,\n\t119,\n\t15,\n\t156,\n\t239,\n\t75,\n\t175,\n\t79,\n\t2,\n\t7,\n\t52,\n\t7,\n\t211,\n\t59,\n\t68,\n\t114,\n\t47,\n\t148,\n\t195,\n\t154,\n\t121,\n\t219,\n\t115,\n\t121,\n\t102,\n\t69,\n\t2,\n\t61,\n\t82,\n\t115,\n\t52,\n\t116,\n\t62,\n\t94,\n\t162,\n\t247,\n\t243,\n\t224,\n\t90,\n\t73,\n\t252,\n\t19,\n\t105,\n\t92,\n\t214,\n\t22,\n\t87,\n\t227,\n\t122,\n\t45,\n\t248,\n\t52,\n\t133,\n\t143,\n\t123,\n\t36,\n\t173,\n\t111,\n\t159,\n\t227,\n\t238,\n\t175,\n\t208,\n\t232,\n\t66,\n\t234,\n\t246,\n\t23,\n\t185,\n\t184,\n\t223,\n\t166,\n\t199,\n\t13,\n\t66,\n\t188,\n\t11,\n\t155,\n\t121,\n\t255,\n\t203,\n\t235,\n\t186,\n\t142,\n\t62,\n\t247,\n\t181,\n\t166,\n\t92,\n\t111,\n\t134,\n\t46,\n\t108,\n\t196,\n\t136,\n\t17,\n\t126,\n\t60,\n\t60,\n\t4,\n\t58,\n\t140,\n\t24,\n\t49,\n\t98,\n\t196,\n\t136,\n\t17,\n\t35,\n\t70,\n\t140,\n\t88,\n\t120,\n\t28,\n\t57,\n\t4,\n\t58,\n\t136,\n\t60,\n\t71,\n\t215,\n\t186,\n\t223,\n\t114,\n\t88,\n\t223,\n\t175,\n\t84,\n\t220,\n\t95,\n\t174,\n\t121,\n\t230,\n\t90,\n\t164,\n\t127,\n\t61,\n\t216,\n\t4,\n\t54,\n\t131,\n\t45,\n\t224,\n\t78,\n\t112,\n\t15,\n\t216,\n\t14,\n\t30,\n\t0,\n\t143,\n\t130,\n\t39,\n\t193,\n\t179,\n\t96,\n\t87,\n\t51,\n\t223,\n\t91,\n\t218,\n\t141,\n\t227,\n\t63,\n\t193,\n\t127,\n\t192,\n\t196,\n\t84,\n\t150,\n\t181,\n\t192,\n\t28,\n\t216,\n\t7,\n\t188,\n\t125,\n\t42,\n\t223,\n\t207,\n\t121,\n\t39,\n\t142,\n\t135,\n\t130,\n\t229,\n\t224,\n\t88,\n\t112,\n\t6,\n\t45,\n\t203,\n\t102,\n\t46,\n\t255,\n\t85,\n\t184,\n\t191,\n\t122,\n\t170,\n\t122,\n\t123,\n\t143,\n\t24,\n\t49,\n\t98,\n\t196,\n\t155,\n\t9,\n\t178,\n\t111,\n\t185,\n\t22,\n\t125,\n\t239,\n\t251,\n\t106,\n\t197,\n\t62,\n\t125,\n\t85,\n\t84,\n\t109,\n\t139,\n\t17,\n\t35,\n\t70,\n\t196,\n\t225,\n\t4,\n\t110,\n\t206,\n\t74,\n\t222,\n\t115,\n\t206,\n\t131,\n\t211,\n\t208,\n\t207,\n\t156,\n\t5,\n\t206,\n\t19,\n\t230,\n\t122,\n\t23,\n\t58,\n\t206,\n\t253,\n\t78,\n\t162,\n\t199,\n\t121,\n\t154,\n\t199,\n\t81,\n\t224,\n\t146,\n\t169,\n\t226,\n\t125,\n\t234,\n\t6,\n\t156,\n\t95,\n\t45,\n\t164,\n\t121,\n\t195,\n\t84,\n\t241,\n\t94,\n\t135,\n\t135,\n\t188,\n\t151,\n\t185,\n\t9,\n\t97,\n\t183,\n\t14,\n\t193,\n\t252,\n\t243,\n\t181,\n\t69,\n\t57,\n\t43,\n\t231,\n\t96,\n\t35,\n\t240,\n\t147,\n\t69,\n\t102,\n\t54,\n\t32,\n\t222,\n\t3,\n\t138,\n\t184,\n\t47,\n\t224,\n\t254,\n\t254,\n\t139,\n\t179,\n\t108,\n\t13,\n\t184,\n\t6,\n\t60,\n\t186,\n\t184,\n\t63,\n\t252,\n\t247,\n\t8,\n\t111,\n\t238,\n\t145,\n\t101,\n\t123,\n\t131,\n\t53,\n\t224,\n\t146,\n\t233,\n\t44,\n\t219,\n\t6,\n\t178,\n\t86,\n\t150,\n\t29,\n\t3,\n\t46,\n\t33,\n\t71,\n\t114,\n\t143,\n\t30,\n\t119,\n\t210,\n\t35,\n\t207,\n\t59,\n\t218,\n\t89,\n\t246,\n\t189,\n\t177,\n\t156,\n\t211,\n\t113,\n\t254,\n\t131,\n\t246,\n\t96,\n\t156,\n\t157,\n\t184,\n\t55,\n\t62,\n\t83,\n\t92,\n\t31,\n\t135,\n\t243,\n\t75,\n\t193,\n\t118,\n\t48,\n\t54,\n\t139,\n\t117,\n\t1,\n\t184,\n\t116,\n\t182,\n\t72,\n\t39,\n\t22,\n\t219,\n\t105,\n\t154,\n\t175,\n\t226,\n\t184,\n\t188,\n\t147,\n\t159,\n\t31,\n\t223,\n\t233,\n\t143,\n\t179,\n\t174,\n\t147,\n\t235,\n\t244,\n\t211,\n\t206,\n\t160,\n\t222,\n\t35,\n\t70,\n\t140,\n\t24,\n\t49,\n\t162,\n\t28,\n\t254,\n\t93,\n\t113,\n\t31,\n\t28,\n\t123,\n\t252,\n\t113,\n\t97,\n\t197,\n\t162,\n\t234,\n\t243,\n\t159,\n\t175,\n\t189,\n\t185,\n\t185,\n\t28,\n\t220,\n\t142,\n\t121,\n\t224,\n\t93,\n\t83,\n\t131,\n\t235,\n\t81,\n\t242,\n\t157,\n\t207,\n\t189,\n\t184,\n\t191,\n\t141,\n\t155,\n\t39,\n\t222,\n\t143,\n\t243,\n\t71,\n\t166,\n\t242,\n\t249,\n\t232,\n\t14,\n\t73,\n\t122,\n\t236,\n\t251,\n\t187,\n\t39,\n\t232,\n\t250,\n\t154,\n\t156,\n\t63,\n\t61,\n\t149,\n\t127,\n\t83,\n\t71,\n\t210,\n\t219,\n\t73,\n\t211,\n\t122,\n\t94,\n\t146,\n\t223,\n\t18,\n\t154,\n\t230,\n\t63,\n\t16,\n\t246,\n\t50,\n\t247,\n\t60,\n\t219,\n\t55,\n\t125,\n\t125,\n\t202,\n\t111,\n\t253,\n\t76,\n\t190,\n\t153,\n\t34,\n\t223,\n\t76,\n\t28,\n\t37,\n\t209,\n\t119,\n\t18,\n\t109,\n\t160,\n\t9,\n\t22,\n\t77,\n\t23,\n\t115,\n\t227,\n\t189,\n\t167,\n\t243,\n\t176,\n\t253,\n\t113,\n\t60,\n\t24,\n\t44,\n\t155,\n\t238,\n\t207,\n\t239,\n\t136,\n\t233,\n\t98,\n\t30,\n\t62,\n\t143,\n\t243,\n\t19,\n\t192,\n\t7,\n\t167,\n\t139,\n\t252,\n\t88,\n\t188,\n\t143,\n\t210,\n\t123,\n\t159,\n\t156,\n\t206,\n\t191,\n\t251,\n\t58,\n\t3,\n\t199,\n\t207,\n\t131,\n\t47,\n\t79,\n\t15,\n\t234,\n\t191,\n\t126,\n\t186,\n\t184,\n\t94,\n\t70,\n\t211,\n\t190,\n\t140,\n\t62,\n\t191,\n\t113,\n\t218,\n\t236,\n\t199,\n\t121,\n\t170,\n\t187,\n\t204,\n\t62,\n\t196,\n\t126,\n\t15,\n\t73,\n\t194,\n\t136,\n\t93,\n\t174,\n\t67,\n\t218,\n\t55,\n\t130,\n\t155,\n\t193,\n\t45,\n\t224,\n\t54,\n\t240,\n\t35,\n\t240,\n\t99,\n\t112,\n\t47,\n\t248,\n\t5,\n\t120,\n\t8,\n\t252,\n\t22,\n\t252,\n\t14,\n\t236,\n\t4,\n\t187,\n\t192,\n\t110,\n\t240,\n\t10,\n\t120,\n\t3,\n\t212,\n\t90,\n\t69,\n\t154,\n\t109,\n\t156,\n\t239,\n\t9,\n\t246,\n\t5,\n\t7,\n\t128,\n\t67,\n\t192,\n\t161,\n\t96,\n\t57,\n\t56,\n\t182,\n\t53,\n\t168,\n\t195,\n\t189,\n\t208,\n\t97,\n\t21,\n\t238,\n\t175,\n\t166,\n\t97,\n\t107,\n\t113,\n\t60,\n\t21,\n\t156,\n\t33,\n\t137,\n\t203,\n\t226,\n\t159,\n\t131,\n\t176,\n\t243,\n\t91,\n\t197,\n\t245,\n\t69,\n\t56,\n\t255,\n\t58,\n\t184,\n\t10,\n\t252,\n\t12,\n\t215,\n\t55,\n\t224,\n\t120,\n\t19,\n\t13,\n\t191,\n\t21,\n\t199,\n\t219,\n\t21,\n\t105,\n\t17,\n\t72,\n\t252,\n\t187,\n\t90,\n\t131,\n\t54,\n\t35,\n\t156,\n\t42,\n\t169,\n\t111,\n\t221,\n\t60,\n\t17,\n\t127,\n\t59,\n\t120,\n\t16,\n\t60,\n\t6,\n\t30,\n\t7,\n\t127,\n\t104,\n\t229,\n\t123,\n\t255,\n\t127,\n\t194,\n\t241,\n\t133,\n\t86,\n\t254,\n\t252,\n\t238,\n\t186,\n\t217,\n\t103,\n\t47,\n\t33,\n\t238,\n\t171,\n\t96,\n\t12,\n\t235,\n\t133,\n\t58,\n\t104,\n\t129,\n\t185,\n\t118,\n\t17,\n\t190,\n\t15,\n\t206,\n\t247,\n\t3,\n\t7,\n\t129,\n\t119,\n\t129,\n\t247,\n\t180,\n\t139,\n\t178,\n\t153,\n\t56,\n\t178,\n\t173,\n\t14,\n\t35,\n\t250,\n\t189,\n\t191,\n\t93,\n\t254,\n\t122,\n\t79,\n\t172,\n\t135,\n\t124,\n\t216,\n\t73,\n\t26,\n\t125,\n\t142,\n\t182,\n\t40,\n\t175,\n\t15,\n\t101,\n\t151,\n\t95,\n\t198,\n\t71,\n\t52,\n\t126,\n\t42,\n\t139,\n\t88,\n\t101,\n\t33,\n\t223,\n\t242,\n\t86,\n\t149,\n\t63,\n\t105,\n\t111,\n\t164,\n\t15,\n\t252,\n\t56,\n\t103,\n\t79,\n\t50,\n\t78,\n\t125,\n\t134,\n\t171,\n\t87,\n\t103,\n\t226,\n\t252,\n\t156,\n\t118,\n\t241,\n\t189,\n\t108,\n\t42,\n\t59,\n\t174,\n\t107,\n\t202,\n\t239,\n\t159,\n\t79,\n\t117,\n\t89,\n\t207,\n\t233,\n\t120,\n\t116,\n\t68,\n\t251,\n\t47,\n\t68,\n\t116,\n\t239,\n\t105,\n\t99,\n\t176,\n\t204,\n\t179,\n\t78,\n\t150,\n\t137,\n\t169,\n\t12,\n\t108,\n\t108,\n\t191,\n\t12,\n\t245,\n\t102,\n\t163,\n\t99,\n\t191,\n\t61,\n\t12,\n\t239,\n\t57,\n\t92,\n\t202,\n\t127,\n\t13,\n\t202,\n\t119,\n\t67,\n\t59,\n\t93,\n\t159,\n\t239,\n\t106,\n\t127,\n\t246,\n\t189,\n\t237,\n\t149,\n\t138,\n\t240,\n\t245,\n\t220,\n\t220,\n\t111,\n\t147,\n\t164,\n\t47,\n\t231,\n\t191,\n\t195,\n\t39,\n\t115,\n\t46,\n\t217,\n\t188,\n\t128,\n\t133,\n\t223,\n\t77,\n\t143,\n\t228,\n\t239,\n\t154,\n\t54,\n\t35,\n\t173,\n\t45,\n\t212,\n\t215,\n\t119,\n\t224,\n\t248,\n\t67,\n\t176,\n\t213,\n\t193,\n\t247,\n\t47,\n\t90,\n\t252,\n\t125,\n\t205,\n\t49,\n\t9,\n\t254,\n\t142,\n\t98,\n\t27,\n\t116,\n\t124,\n\t96,\n\t8,\n\t198,\n\t52,\n\t91,\n\t30,\n\t133,\n\t174,\n\t79,\n\t26,\n\t230,\n\t74,\n\t207,\n\t182,\n\t251,\n\t199,\n\t21,\n\t219,\n\t58,\n\t181,\n\t204,\n\t114,\n\t238,\n\t94,\n\t37,\n\t42,\n\t63,\n\t254,\n\t181,\n\t221,\n\t31,\n\t254,\n\t247,\n\t18,\n\t124,\n\t250,\n\t47,\n\t90,\n\t191,\n\t95,\n\t231,\n\t242,\n\t34,\n\t239,\n\t48,\n\t100,\n\t107,\n\t77,\n\t6,\n\t105,\n\t35,\n\t147,\n\t51,\n\t89,\n\t54,\n\t3,\n\t246,\n\t2,\n\t251,\n\t129,\n\t131,\n\t102,\n\t242,\n\t176,\n\t165,\n\t51,\n\t118,\n\t229,\n\t231,\n\t255,\n\t174,\n\t137,\n\t180,\n\t215,\n\t141,\n\t224,\n\t240,\n\t153,\n\t188,\n\t237,\n\t63,\n\t199,\n\t181,\n\t35,\n\t118,\n\t126,\n\t21,\n\t157,\n\t131,\n\t175,\n\t68,\n\t156,\n\t227,\n\t103,\n\t242,\n\t62,\n\t246,\n\t196,\n\t25,\n\t121,\n\t251,\n\t87,\n\t217,\n\t55,\n\t53,\n\t68,\n\t247,\n\t15,\n\t207,\n\t244,\n\t223,\n\t227,\n\t251,\n\t34,\n\t210,\n\t15,\n\t173,\n\t228,\n\t202,\n\t190,\n\t145,\n\t246,\n\t99,\n\t100,\n\t189,\n\t248,\n\t49,\n\t206,\n\t110,\n\t151,\n\t115,\n\t207,\n\t156,\n\t78,\n\t211,\n\t59,\n\t27,\n\t199,\n\t43,\n\t106,\n\t131,\n\t105,\n\t159,\n\t139,\n\t251,\n\t231,\n\t91,\n\t216,\n\t124,\n\t152,\n\t168,\n\t202,\n\t63,\n\t169,\n\t89,\n\t219,\n\t252,\n\t255,\n\t46,\n\t31,\n\t207,\n\t235,\n\t154,\n\t113,\n\t113,\n\t71,\n\t73,\n\t58,\n\t12,\n\t43,\n\t191,\n\t174,\n\t56,\n\t255,\n\t71,\n\t20,\n\t251,\n\t40,\n\t101,\n\t18,\n\t90,\n\t6,\n\t221,\n\t248,\n\t179,\n\t16,\n\t184,\n\t72,\n\t24,\n\t7,\n\t92,\n\t236,\n\t147,\n\t106,\n\t173,\n\t188,\n\t144,\n\t252,\n\t191,\n\t144,\n\t33,\n\t117,\n\t247,\n\t109,\n\t181,\n\t177,\n\t46,\n\t157,\n\t44,\n\t91,\n\t112,\n\t144,\n\t253,\n\t101,\n\t254,\n\t220,\n\t134,\n\t170,\n\t117,\n\t30,\n\t86,\n\t222,\n\t236,\n\t82,\n\t181,\n\t253,\n\t163,\n\t213,\n\t77,\n\t250,\n\t123,\n\t22,\n\t11,\n\t66,\n\t215,\n\t33,\n\t134,\n\t137,\n\t41,\n\t220,\n\t20,\n\t175,\n\t195,\n\t133,\n\t155,\n\t226,\n\t249,\n\t234,\n\t89,\n\t181,\n\t173,\n\t22,\n\t90,\n\t57,\n\t108,\n\t124,\n\t54,\n\t76,\n\t200,\n\t244,\n\t93,\n\t72,\n\t250,\n\t235,\n\t202,\n\t164,\n\t146,\n\t42,\n\t117,\n\t241,\n\t213,\n\t185,\n\t42,\n\t253,\n\t135,\n\t189,\n\t78,\n\t84,\n\t105,\n\t147,\n\t178,\n\t235,\n\t142,\n\t173,\n\t84,\n\t173,\n\t247,\n\t66,\n\t245,\n\t127,\n\t140,\n\t180,\n\t170,\n\t176,\n\t63,\n\t175,\n\t183,\n\t107,\n\t254,\n\t41,\n\t36,\n\t85,\n\t25,\n\t23,\n\t74,\n\t89,\n\t102,\n\t155,\n\t253,\n\t212,\n\t198,\n\t35,\n\t48,\n\t22,\n\t145,\n\t69,\n\t118,\n\t241,\n\t166,\n\t26,\n\t57,\n\t205,\n\t9,\n\t148,\n\t99,\n\t113,\n\t126,\n\t62,\n\t222,\n\t40,\n\t238,\n\t187,\n\t208,\n\t172,\n\t21,\n\t207,\n\t118,\n\t109,\n\t52,\n\t77,\n\t161,\n\t54,\n\t226,\n\t227,\n\t26,\n\t117,\n\t163,\n\t54,\n\t153,\n\t226,\n\t210,\n\t35,\n\t184,\n\t174,\n\t211,\n\t189,\n\t109,\n\t221,\n\t234,\n\t247,\n\t111,\n\t166,\n\t75,\n\t139,\n\t194,\n\t68,\n\t117,\n\t237,\n\t234,\n\t195,\n\t238,\n\t179,\n\t26,\n\t255,\n\t178,\n\t112,\n\t94,\n\t100,\n\t105,\n\t16,\n\t97,\n\t254,\n\t109,\n\t83,\n\t255,\n\t182,\n\t37,\n\t254,\n\t99,\n\t50,\n\t78,\n\t227,\n\t48,\n\t105,\n\t211,\n\t248,\n\t196,\n\t191,\n\t98,\n\t126,\n\t50,\n\t105,\n\t55,\n\t6,\n\t239,\n\t13,\n\t148,\n\t73,\n\t240,\n\t111,\n\t47,\n\t158,\n\t165,\n\t127,\n\t89,\n\t253,\n\t118,\n\t105,\n\t175,\n\t228,\n\t200,\n\t231,\n\t101,\n\t235,\n\t223,\n\t129,\n\t178,\n\t148,\n\t236,\n\t95,\n\t49,\n\t174,\n\t120,\n\t78,\n\t132,\n\t248,\n\t151,\n\t217,\n\t158,\n\t249,\n\t151,\n\t33,\n\t243,\n\t79,\n\t91,\n\t225,\n\t95,\n\t94,\n\t72,\n\t219,\n\t213,\n\t137,\n\t170,\n\t60,\n\t218,\n\t103,\n\t44,\n\t253,\n\t219,\n\t235,\n\t87,\n\t199,\n\t10,\n\t63,\n\t215,\n\t230,\n\t220,\n\t198,\n\t0,\n\t215,\n\t246,\n\t203,\n\t124,\n\t170,\n\t188,\n\t46,\n\t201,\n\t191,\n\t182,\n\t237,\n\t87,\n\t132,\n\t213,\n\t109,\n\t214,\n\t166,\n\t152,\n\t143,\n\t101,\n\t254,\n\t13,\n\t29,\n\t75,\n\t153,\n\t77,\n\t196,\n\t186,\n\t228,\n\t218,\n\t63,\n\t107,\n\t243,\n\t24,\n\t227,\n\t198,\n\t16,\n\t80,\n\t159,\n\t40,\n\t32,\n\t210,\n\t88,\n\t32,\n\t253,\n\t179,\n\t171,\n\t127,\n\t39,\n\t45,\n\t250,\n\t231,\n\t73,\n\t139,\n\t246,\n\t43,\n\t147,\n\t73,\n\t69,\n\t159,\n\t16,\n\t187,\n\t127,\n\t238,\n\t100,\n\t69,\n\t187,\n\t13,\n\t153,\n\t199,\n\t177,\n\t126,\n\t187,\n\t155,\n\t183,\n\t69,\n\t255,\n\t172,\n\t107,\n\t203,\n\t170,\n\t177,\n\t146,\n\t157,\n\t139,\n\t247,\n\t100,\n\t241,\n\t196,\n\t123,\n\t202,\n\t251,\n\t150,\n\t243,\n\t47,\n\t81,\n\t248,\n\t182,\n\t44,\n\t235,\n\t191,\n\t217,\n\t216,\n\t60,\n\t46,\n\t180,\n\t109,\n\t66,\n\t221,\n\t178,\n\t125,\n\t203,\n\t252,\n\t175,\n\t146,\n\t20,\n\t239,\n\t69,\n\t100,\n\t34,\n\t206,\n\t167,\n\t109,\n\t230,\n\t212,\n\t93,\n\t253,\n\t12,\n\t254,\n\t142,\n\t217,\n\t158,\n\t93,\n\t253,\n\t73,\n\t218,\n\t51,\n\t249,\n\t125,\n\t104,\n\t17,\n\t190,\n\t77,\n\t241,\n\t247,\n\t197,\n\t235,\n\t186,\n\t161,\n\t61,\n\t243,\n\t207,\n\t233,\n\t234,\n\t20,\n\t111,\n\t23,\n\t254,\n\t25,\n\t23,\n\t255,\n\t234,\n\t196,\n\t103,\n\t189,\n\t164,\n\t157,\n\t155,\n\t15,\n\t129,\n\t127,\n\t85,\n\t113,\n\t153,\n\t176,\n\t254,\n\t218,\n\t198,\n\t191,\n\t252,\n\t53,\n\t59,\n\t183,\n\t241,\n\t175,\n\t216,\n\t247,\n\t202,\n\t164,\n\t167,\n\t107,\n\t4,\n\t255,\n\t118,\n\t58,\n\t57,\n\t62,\n\t34,\n\t250,\n\t151,\n\t215,\n\t169,\n\t44,\n\t255,\n\t106,\n\t177,\n\t108,\n\t191,\n\t4,\n\t102,\n\t119,\n\t54,\n\t30,\n\t171,\n\t32,\n\t98,\n\t234,\n\t143,\n\t187,\n\t54,\n\t85,\n\t248,\n\t141,\n\t209,\n\t110,\n\t232,\n\t219,\n\t14,\n\t111,\n\t147,\n\t208,\n\t249,\n\t150,\n\t9,\n\t83,\n\t191,\n\t230,\n\t58,\n\t159,\n\t182,\n\t157,\n\t115,\n\t203,\n\t236,\n\t18,\n\t3,\n\t171,\n\t52,\n\t37,\n\t107,\n\t105,\n\t219,\n\t62,\n\t94,\n\t214,\n\t134,\n\t85,\n\t251,\n\t35,\n\t44,\n\t140,\n\t29,\n\t217,\n\t94,\n\t137,\n\t108,\n\t191,\n\t69,\n\t37,\n\t174,\n\t253,\n\t53,\n\t191,\n\t127,\n\t226,\n\t42,\n\t177,\n\t125,\n\t225,\n\t11,\n\t91,\n\t183,\n\t219,\n\t34,\n\t10,\n\t121,\n\t158,\n\t111,\n\t167,\n\t227,\n\t141,\n\t254,\n\t125,\n\t42,\n\t114,\n\t228,\n\t215,\n\t22,\n\t132,\n\t110,\n\t251,\n\t111,\n\t22,\n\t113,\n\t98,\n\t172,\n\t107,\n\t196,\n\t58,\n\t169,\n\t178,\n\t113,\n\t10,\n\t219,\n\t155,\n\t242,\n\t12,\n\t177,\n\t119,\n\t119,\n\t63,\n\t111,\n\t46,\n\t135,\n\t137,\n\t204,\n\t222,\n\t204,\n\t23,\n\t68,\n\t68,\n\t123,\n\t215,\n\t179,\n\t162,\n\t95,\n\t201,\n\t28,\n\t236,\n\t173,\n\t170,\n\t171,\n\t41,\n\t246,\n\t167,\n\t121,\n\t154,\n\t20,\n\t101,\n\t63,\n\t106,\n\t187,\n\t143,\n\t229,\n\t80,\n\t175,\n\t248,\n\t250,\n\t218,\n\t161,\n\t54,\n\t20,\n\t243,\n\t37,\n\t38,\n\t153,\n\t176,\n\t240,\n\t113,\n\t138,\n\t58,\n\t166,\n\t235,\n\t39,\n\t51,\n\t143,\n\t58,\n\t197,\n\t218,\n\t32,\n\t107,\n\t135,\n\t100,\n\t60,\n\t38,\n\t245,\n\t164,\n\t174,\n\t210,\n\t125,\n\t206,\n\t158,\n\t110,\n\t249,\n\t29,\n\t226,\n\t167,\n\t128,\n\t181,\n\t7,\n\t29,\n\t252,\n\t222,\n\t183,\n\t108,\n\t29,\n\t229,\n\t83,\n\t119,\n\t101,\n\t82,\n\t117,\n\t31,\n\t223,\n\t197,\n\t114,\n\t190,\n\t160,\n\t170,\n\t43,\n\t178,\n\t113,\n\t148,\n\t212,\n\t157,\n\t238,\n\t92,\n\t157,\n\t172,\n\t57,\n\t102,\n\t251,\n\t251,\n\t170,\n\t30,\n\t36,\n\t111,\n\t151,\n\t125,\n\t13,\n\t174,\n\t159,\n\t231,\n\t247,\n\t58,\n\t100,\n\t101,\n\t24,\n\t232,\n\t39,\n\t117,\n\t117,\n\t118,\n\t44,\n\t143,\n\t211,\n\t154,\n\t200,\n\t97,\n\t113,\n\t216,\n\t179,\n\t236,\n\t62,\n\t15,\n\t159,\n\t150,\n\t49,\n\t47,\n\t27,\n\t230,\n\t6,\n\t109,\n\t41,\n\t203,\n\t151,\n\t208,\n\t164,\n\t249,\n\t119,\n\t245,\n\t176,\n\t180,\n\t31,\n\t123,\n\t86,\n\t124,\n\t175,\n\t99,\n\t170,\n\t227,\n\t50,\n\t233,\n\t8,\n\t231,\n\t161,\n\t200,\n\t210,\n\t177,\n\t73,\n\t63,\n\t11,\n\t124,\n\t62,\n\t52,\n\t255,\n\t212,\n\t229,\n\t243,\n\t73,\n\t183,\n\t12,\n\t120,\n\t73,\n\t157,\n\t135,\n\t111,\n\t120,\n\t170,\n\t242,\n\t138,\n\t226,\n\t179,\n\t110,\n\t238,\n\t62,\n\t39,\n\t220,\n\t179,\n\t89,\n\t131,\n\t196,\n\t202,\n\t95,\n\t6,\n\t159,\n\t191,\n\t77,\n\t185,\n\t83,\n\t229,\n\t239,\n\t42,\n\t49,\n\t236,\n\t79,\n\t196,\n\t59,\n\t255,\n\t178,\n\t198,\n\t104,\n\t155,\n\t125,\n\t148,\n\t8,\n\t123,\n\t2,\n\t204,\n\t247,\n\t186,\n\t253,\n\t23,\n\t17,\n\t126,\n\t173,\n\t209,\n\t219,\n\t131,\n\t161,\n\t99,\n\t127,\n\t247,\n\t124,\n\t38,\n\t135,\n\t221,\n\t151,\n\t165,\n\t65,\n\t230,\n\t8,\n\t166,\n\t253,\n\t24,\n\t2,\n\t219,\n\t27,\n\t234,\n\t217,\n\t63,\n\t112,\n\t31,\n\t53,\n\t180,\n\t15,\n\t40,\n\t171,\n\t255,\n\t142,\n\t145,\n\t127,\n\t108,\n\t253,\n\t9,\n\t93,\n\t251,\n\t150,\n\t213,\n\t6,\n\t36,\n\t237,\n\t216,\n\t101,\n\t141,\n\t204,\n\t175,\n\t147,\n\t153,\n\t176,\n\t251,\n\t221,\n\t247,\n\t30,\n\t154,\n\t53,\n\t131,\n\t110,\n\t143,\n\t67,\n\t102,\n\t79,\n\t235,\n\t53,\n\t102,\n\t76,\n\t155,\n\t120,\n\t236,\n\t253,\n\t185,\n\t142,\n\t119,\n\t3,\n\t246,\n\t243,\n\t240,\n\t25,\n\t47,\n\t170,\n\t245,\n\t4,\n\t191,\n\t87,\n\t164,\n\t90,\n\t99,\n\t200,\n\t252,\n\t43,\n\t194,\n\t230,\n\t189,\n\t74,\n\t253,\n\t29,\n\t246,\n\t2,\n\t164,\n\t126,\n\t78,\n\t88,\n\t191,\n\t101,\n\t101,\n\t143,\n\t146,\n\t191,\n\t170,\n\t94,\n\t176,\n\t112,\n\t137,\n\t29,\n\t187,\n\t107,\n\t127,\n\t217,\n\t58,\n\t122,\n\t214,\n\t111,\n\t127,\n\t65,\n\t181,\n\t47,\n\t72,\n\t218,\n\t225,\n\t192,\n\t30,\n\t213,\n\t68,\n\t255,\n\t179,\n\t124,\n\t221,\n\t9,\n\t237,\n\t255,\n\t67,\n\t159,\n\t231,\n\t223,\n\t189,\n\t176,\n\t49,\n\t207,\n\t123,\n\t252,\n\t77,\n\t80,\n\t135,\n\t68,\n\t219,\n\t153,\n\t252,\n\t33,\n\t222,\n\t111,\n\t213,\n\t244,\n\t233,\n\t251,\n\t218,\n\t211,\n\t103,\n\t172,\n\t33,\n\t117,\n\t176,\n\t153,\n\t21,\n\t123,\n\t81,\n\t50,\n\t92,\n\t199,\n\t65,\n\t107,\n\t191,\n\t165,\n\t28,\n\t203,\n\t36,\n\t227,\n\t140,\n\t204,\n\t23,\n\t164,\n\t173,\n\t245,\n\t237,\n\t157,\n\t140,\n\t217,\n\t219,\n\t155,\n\t204,\n\t155,\n\t164,\n\t121,\n\t42,\n\t250,\n\t6,\n\t219,\n\t122,\n\t99,\n\t26,\n\t31,\n\t69,\n\t25,\n\t152,\n\t63,\n\t40,\n\t108,\n\t161,\n\t171,\n\t147,\n\t186,\n\t254,\n\t158,\n\t223,\n\t183,\n\t108,\n\t78,\n\t232,\n\t243,\n\t118,\n\t25,\n\t167,\n\t251,\n\t234,\n\t56,\n\t167,\n\t111,\n\t232,\n\t252,\n\t201,\n\t52,\n\t222,\n\t166,\n\t76,\n\t155,\n\t8,\n\t255,\n\t157,\n\t87,\n\t71,\n\t184,\n\t182,\n\t102,\n\t177,\n\t128,\n\t228,\n\t30,\n\t179,\n\t23,\n\t9,\n\t227,\n\t207,\n\t25,\n\t170,\n\t62,\n\t54,\n\t134,\n\t125,\n\t109,\n\t237,\n\t100,\n\t218,\n\t243,\n\t213,\n\t233,\n\t99,\n\t171,\n\t111,\n\t102,\n\t56,\n\t234,\n\t158,\n\t9,\n\t241,\n\t127,\n\t138,\n\t180,\n\t109,\n\t243,\n\t179,\n\t205,\n\t195,\n\t75,\n\t151,\n\t73,\n\t80,\n\t47,\n\t174,\n\t99,\n\t140,\n\t53,\n\t62,\n\t122,\n\t244,\n\t202,\n\t109,\n\t177,\n\t134,\n\t149,\n\t210,\n\t200,\n\t156,\n\t255,\n\t6,\n\t216,\n\t215,\n\t119,\n\t188,\n\t132,\n\t250,\n\t219,\n\t244,\n\t173,\n\t178,\n\t73,\n\t66,\n\t116,\n\t143,\n\t161,\n\t191,\n\t46,\n\t237,\n\t20,\n\t226,\n\t170,\n\t83,\n\t173,\n\t29,\n\t183,\n\t140,\n\t202,\n\t122,\n\t155,\n\t152,\n\t84,\n\t249,\n\t132,\n\t218,\n\t88,\n\t39,\n\t161,\n\t245,\n\t162,\n\t44,\n\t155,\n\t250,\n\t234,\n\t80,\n\t117,\n\t120,\n\t108,\n\t91,\n\t248,\n\t218,\n\t72,\n\t39,\n\t101,\n\t215,\n\t199,\n\t212,\n\t245,\n\t35,\n\t212,\n\t62,\n\t195,\n\t84,\n\t127,\n\t93,\n\t242,\n\t72,\n\t81,\n\t55,\n\t92,\n\t197,\n\t70,\n\t95,\n\t254,\n\t253,\n\t53,\n\t191,\n\t254,\n\t172,\n\t75,\n\t214,\n\t225,\n\t252,\n\t223,\n\t233,\n\t164,\n\t220,\n\t127,\n\t146,\n\t189,\n\t27,\n\t82,\n\t217,\n\t48,\n\t212,\n\t247,\n\t73,\n\t215,\n\t217,\n\t58,\n\t76,\n\t235,\n\t253,\n\t113,\n\t205,\n\t154,\n\t89,\n\t182,\n\t134,\n\t29,\n\t43,\n\t190,\n\t183,\n\t118,\n\t169,\n\t115,\n\t209,\n\t254,\n\t174,\n\t53,\n\t225,\n\t94,\n\t133,\n\t203,\n\t62,\n\t31,\n\t249,\n\t219,\n\t24,\n\t254,\n\t251,\n\t50,\n\t149,\n\t244,\n\t234,\n\t127,\n\t232,\n\t126,\n\t156,\n\t207,\n\t250,\n\t213,\n\t102,\n\t77,\n\t75,\n\t209,\n\t181,\n\t91,\n\t151,\n\t253,\n\t200,\n\t210,\n\t235,\n\t179,\n\t132,\n\t230,\n\t68,\n\t65,\n\t175,\n\t28,\n\t137,\n\t251,\n\t15,\n\t221,\n\t62,\n\t142,\n\t235,\n\t251,\n\t215,\n\t14,\n\t215,\n\t94,\n\t180,\n\t123,\n\t120,\n\t42,\n\t187,\n\t68,\n\t182,\n\t185,\n\t110,\n\t207,\n\t140,\n\t223,\n\t203,\n\t234,\n\t123,\n\t63,\n\t81,\n\t243,\n\t31,\n\t215,\n\t66,\n\t218,\n\t139,\n\t206,\n\t223,\n\t172,\n\t159,\n\t183,\n\t42,\n\t119,\n\t64,\n\t125,\n\t207,\n\t50,\n\t77,\n\t253,\n\t76,\n\t221,\n\t62,\n\t44,\n\t234,\n\t169,\n\t184,\n\t255,\n\t40,\n\t123,\n\t255,\n\t97,\n\t146,\n\t144,\n\t111,\n\t20,\n\t51,\n\t15,\n\t255,\n\t14,\n\t244,\n\t75,\n\t129,\n\t182,\n\t25,\n\t72,\n\t67,\n\t177,\n\t175,\n\t66,\n\t194,\n\t90,\n\t244,\n\t93,\n\t141,\n\t248,\n\t125,\n\t92,\n\t108,\n\t223,\n\t168,\n\t222,\n\t13,\n\t138,\n\t247,\n\t217,\n\t119,\n\t186,\n\t236,\n\t152,\n\t90,\n\t116,\n\t243,\n\t57,\n\t155,\n\t178,\n\t202,\n\t202,\n\t36,\n\t75,\n\t147,\n\t125,\n\t83,\n\t25,\n\t162,\n\t151,\n\t105,\n\t110,\n\t236,\n\t18,\n\t174,\n\t19,\n\t111,\n\t223,\n\t243,\n\t118,\n\t179,\n\t237,\n\t15,\n\t12,\n\t109,\n\t202,\n\t52,\n\t30,\n\t145,\n\t50,\n\t177,\n\t111,\n\t36,\n\t123,\n\t250,\n\t7,\n\t206,\n\t71,\n\t92,\n\t230,\n\t192,\n\t161,\n\t107,\n\t29,\n\t223,\n\t57,\n\t183,\n\t139,\n\t238,\n\t174,\n\t101,\n\t140,\n\t173,\n\t191,\n\t238,\n\t126,\n\t166,\n\t136,\n\t91,\n\t166,\n\t142,\n\t190,\n\t182,\n\t150,\n\t73,\n\t21,\n\t249,\n\t134,\n\t150,\n\t183,\n\t12,\n\t127,\n\t135,\n\t60,\n\t111,\n\t83,\n\t222,\n\t216,\n\t229,\n\t8,\n\t177,\n\t165,\n\t201,\n\t174,\n\t41,\n\t194,\n\t77,\n\t246,\n\t177,\n\t181,\n\t147,\n\t173,\n\t248,\n\t214,\n\t39,\n\t83,\n\t120,\n\t72,\n\t125,\n\t9,\n\t77,\n\t219,\n\t70,\n\t127,\n\t215,\n\t231,\n\t109,\n\t236,\n\t150,\n\t170,\n\t46,\n\t198,\n\t200,\n\t207,\n\t39,\n\t13,\n\t89,\n\t153,\n\t171,\n\t148,\n\t216,\n\t54,\n\t13,\n\t205,\n\t191,\n\t44,\n\t157,\n\t83,\n\t249,\n\t62,\n\t150,\n\t174,\n\t182,\n\t18,\n\t154,\n\t94,\n\t10,\n\t187,\n\t184,\n\t164,\n\t239,\n\t34,\n\t49,\n\t218,\n\t138,\n\t73,\n\t15,\n\t157,\n\t111,\n\t83,\n\t213,\n\t31,\n\t85,\n\t25,\n\t171,\n\t168,\n\t191,\n\t46,\n\t254,\n\t137,\n\t89,\n\t143,\n\t67,\n\t242,\n\t8,\n\t181,\n\t121,\n\t138,\n\t188,\n\t92,\n\t116,\n\t170,\n\t34,\n\t255,\n\t170,\n\t202,\n\t111,\n\t202,\n\t147,\n\t172,\n\t123,\n\t39,\n\t133,\n\t111,\n\t99,\n\t201,\n\t145,\n\t255,\n\t157,\n\t42,\n\t94,\n\t88,\n\t60,\n\t241,\n\t119,\n\t222,\n\t250,\n\t246,\n\t228,\n\t52,\n\t215,\n\t169,\n\t96,\n\t82,\n\t231,\n\t246,\n\t164,\n\t7,\n\t202,\n\t62,\n\t27,\n\t182,\n\t22,\n\t151,\n\t217,\n\t47,\n\t102,\n\t27,\n\t246,\n\t201,\n\t203,\n\t54,\n\t95,\n\t223,\n\t52,\n\t135,\n\t169,\n\t93,\n\t165,\n\t44,\n\t143,\n\t139,\n\t205,\n\t92,\n\t37,\n\t212,\n\t103,\n\t190,\n\t105,\n\t199,\n\t202,\n\t35,\n\t52,\n\t255,\n\t20,\n\t62,\n\t240,\n\t45,\n\t107,\n\t104,\n\t58,\n\t125,\n\t191,\n\t133,\n\t213,\n\t201,\n\t25,\n\t186,\n\t119,\n\t172,\n\t134,\n\t253,\n\t111,\n\t25,\n\t117,\n\t195,\n\t123,\n\t36,\n\t81,\n\t172,\n\t223,\n\t219,\n\t4,\n\t244,\n\t181,\n\t38,\n\t233,\n\t126,\n\t151,\n\t238,\n\t243,\n\t91,\n\t206,\n\t145,\n\t237,\n\t107,\n\t250,\n\t221,\n\t101,\n\t242,\n\t14,\n\t155,\n\t127,\n\t71,\n\t26,\n\t218,\n\t70,\n\t59,\n\t194,\n\t249,\n\t48,\n\t183,\n\t59,\n\t173,\n\t127,\n\t74,\n\t168,\n\t255,\n\t166,\n\t182,\n\t160,\n\t243,\n\t29,\n\t251,\n\t219,\n\t36,\n\t34,\n\t190,\n\t127,\n\t151,\n\t194,\n\t231,\n\t107,\n\t35,\n\t101,\n\t246,\n\t19,\n\t98,\n\t157,\n\t180,\n\t145,\n\t40,\n\t191,\n\t157,\n\t158,\n\t208,\n\t191,\n\t174,\n\t191,\n\t129,\n\t78,\n\t222,\n\t159,\n\t235,\n\t190,\n\t203,\n\t32,\n\t176,\n\t191,\n\t5,\n\t225,\n\t223,\n\t243,\n\t244,\n\t252,\n\t229,\n\t89,\n\t47,\n\t120,\n\t155,\n\t199,\n\t234,\n\t75,\n\t125,\n\t250,\n\t212,\n\t88,\n\t190,\n\t234,\n\t166,\n\t149,\n\t96,\n\t124,\n\t34,\n\t245,\n\t140,\n\t248,\n\t136,\n\t125,\n\t159,\n\t161,\n\t178,\n\t35,\n\t251,\n\t142,\n\t92,\n\t167,\n\t63,\n\t211,\n\t81,\n\t166,\n\t171,\n\t175,\n\t254,\n\t62,\n\t207,\n\t235,\n\t218,\n\t90,\n\t213,\n\t109,\n\t200,\n\t5,\n\t246,\n\t119,\n\t82,\n\t198,\n\t241,\n\t111,\n\t66,\n\t221,\n\t255,\n\t133,\n\t214,\n\t105,\n\t223,\n\t223,\n\t175,\n\t228,\n\t227,\n\t13,\n\t216,\n\t62,\n\t178,\n\t239,\n\t249,\n\t112,\n\t85,\n\t92,\n\t34,\n\t108,\n\t221,\n\t202,\n\t254,\n\t159,\n\t131,\n\t10,\n\t38,\n\t226,\n\t239,\n\t253,\n\t243,\n\t125,\n\t26,\n\t19,\n\t93,\n\t93,\n\t83,\n\t249,\n\t164,\n\t147,\n\t13,\n\t246,\n\t241,\n\t98,\n\t222,\n\t186,\n\t111,\n\t223,\n\t250,\n\t252,\n\t99,\n\t8,\n\t55,\n\t73,\n\t138,\n\t122,\n\t235,\n\t51,\n\t78,\n\t176,\n\t239,\n\t16,\n\t25,\n\t204,\n\t79,\n\t166,\n\t121,\n\t145,\n\t75,\n\t253,\n\t102,\n\t190,\n\t98,\n\t99,\n\t142,\n\t237,\n\t239,\n\t237,\n\t166,\n\t236,\n\t35,\n\t108,\n\t108,\n\t165,\n\t10,\n\t239,\n\t179,\n\t87,\n\t77,\n\t110,\n\t51,\n\t163,\n\t255,\n\t3,\n\t251,\n\t135,\n\t84,\n\t101,\n\t103,\n\t34,\n\t134,\n\t203,\n\t202,\n\t28,\n\t115,\n\t141,\n\t60,\n\t80,\n\t191,\n\t4,\n\t159,\n\t139,\n\t250,\n\t197,\n\t240,\n\t191,\n\t43,\n\t124,\n\t249,\n\t217,\n\t124,\n\t201,\n\t119,\n\t173,\n\t147,\n\t242,\n\t251,\n\t153,\n\t24,\n\t107,\n\t49,\n\t163,\n\t254,\n\t142,\n\t227,\n\t169,\n\t237,\n\t152,\n\t218,\n\t170,\n\t21,\n\t191,\n\t227,\n\t166,\n\t205,\n\t191,\n\t132,\n\t117,\n\t120,\n\t172,\n\t242,\n\t135,\n\t210,\n\t203,\n\t211,\n\t226,\n\t155,\n\t45,\n\t83,\n\t187,\n\t118,\n\t181,\n\t159,\n\t110,\n\t253,\n\t151,\n\t106,\n\t108,\n\t146,\n\t245,\n\t51,\n\t3,\n\t250,\n\t59,\n\t206,\n\t133,\n\t202,\n\t222,\n\t35,\n\t97,\n\t162,\n\t43,\n\t27,\n\t63,\n\t102,\n\t140,\n\t75,\n\t124,\n\t148,\n\t82,\n\t248,\n\t62,\n\t213,\n\t68,\n\t234,\n\t250,\n\t45,\n\t27,\n\t99,\n\t250,\n\t126,\n\t151,\n\t95,\n\t252,\n\t102,\n\t81,\n\t177,\n\t238,\n\t236,\n\t221,\n\t183,\n\t248,\n\t6,\n\t212,\n\t165,\n\t252,\n\t50,\n\t27,\n\t40,\n\t199,\n\t45,\n\t199,\n\t239,\n\t153,\n\t251,\n\t202,\n\t58,\n\t43,\n\t172,\n\t253,\n\t20,\n\t243,\n\t176,\n\t42,\n\t196,\n\t102,\n\t94,\n\t38,\n\t141,\n\t151,\n\t176,\n\t190,\n\t232,\n\t214,\n\t17,\n\t166,\n\t57,\n\t91,\n\t168,\n\t109,\n\t99,\n\t239,\n\t103,\n\t248,\n\t246,\n\t171,\n\t46,\n\t99,\n\t134,\n\t235,\n\t119,\n\t246,\n\t166,\n\t111,\n\t134,\n\t85,\n\t115,\n\t196,\n\t208,\n\t250,\n\t196,\n\t135,\n\t247,\n\t206,\n\t75,\n\t172,\n\t71,\n\t188,\n\t136,\n\t245,\n\t137,\n\t157,\n\t243,\n\t235,\n\t37,\n\t22,\n\t214,\n\t109,\n\t191,\n\t157,\n\t194,\n\t126,\n\t49,\n\t234,\n\t143,\n\t171,\n\t253,\n\t164,\n\t182,\n\t75,\n\t188,\n\t55,\n\t169,\n\t107,\n\t127,\n\t252,\n\t185,\n\t216,\n\t207,\n\t105,\n\t237,\n\t19,\n\t75,\n\t199,\n\t214,\n\t224,\n\t220,\n\t200,\n\t166,\n\t173,\n\t199,\n\t90,\n\t199,\n\t248,\n\t72,\n\t140,\n\t60,\n\t67,\n\t117,\n\t73,\n\t145,\n\t191,\n\t139,\n\t62,\n\t190,\n\t246,\n\t141,\n\t53,\n\t70,\n\t134,\n\t250,\n\t59,\n\t180,\n\t62,\n\t196,\n\t182,\n\t117,\n\t140,\n\t122,\n\t27,\n\t43,\n\t173,\n\t84,\n\t250,\n\t149,\n\t149,\n\t190,\n\t141,\n\t132,\n\t166,\n\t229,\n\t170,\n\t207,\n\t48,\n\t250,\n\t62,\n\t134,\n\t190,\n\t166,\n\t248,\n\t101,\n\t139,\n\t76,\n\t39,\n\t241,\n\t154,\n\t191,\n\t239,\n\t99,\n\t51,\n\t155,\n\t103,\n\t125,\n\t210,\n\t142,\n\t85,\n\t55,\n\t92,\n\t125,\n\t100,\n\t171,\n\t179,\n\t109,\n\t56,\n\t47,\n\t169,\n\t108,\n\t20,\n\t34,\n\t41,\n\t252,\n\t21,\n\t42,\n\t101,\n\t212,\n\t37,\n\t215,\n\t188,\n\t84,\n\t113,\n\t83,\n\t72,\n\t168,\n\t205,\n\t83,\n\t216,\n\t36,\n\t52,\n\t109,\n\t23,\n\t123,\n\t133,\n\t166,\n\t25,\n\t250,\n\t92,\n\t12,\n\t137,\n\t81,\n\t71,\n\t67,\n\t237,\n\t40,\n\t211,\n\t39,\n\t203,\n\t250,\n\t159,\n\t215,\n\t213,\n\t109,\n\t83,\n\t155,\n\t144,\n\t165,\n\t169,\n\t211,\n\t77,\n\t101,\n\t115,\n\t213,\n\t81,\n\t150,\n\t167,\n\t78,\n\t127,\n\t155,\n\t244,\n\t100,\n\t207,\n\t155,\n\t202,\n\t103,\n\t91,\n\t126,\n\t157,\n\t77,\n\t124,\n\t109,\n\t27,\n\t171,\n\t110,\n\t216,\n\t228,\n\t147,\n\t50,\n\t127,\n\t23,\n\t137,\n\t145,\n\t78,\n\t168,\n\t254,\n\t41,\n\t202,\n\t31,\n\t195,\n\t182,\n\t101,\n\t248,\n\t34,\n\t117,\n\t190,\n\t161,\n\t254,\n\t13,\n\t213,\n\t39,\n\t180,\n\t28,\n\t85,\n\t181,\n\t139,\n\t208,\n\t252,\n\t109,\n\t234,\n\t185,\n\t107,\n\t62,\n\t166,\n\t184,\n\t41,\n\t244,\n\t54,\n\t229,\n\t173,\n\t179,\n\t151,\n\t143,\n\t196,\n\t240,\n\t103,\n\t76,\n\t255,\n\t135,\n\t202,\n\t255,\n\t0\n];\nvar trieData$1 = {\n\ttype: type$1,\n\tdata: data$1\n};\n\nvar decompositions$1 = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine$1 = new dfa(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions$1[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper);\n\nIndicShaper.zeroMarkWidths = 'NONE';\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(stateMachine$1.match(glyphs.map(indicCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i = last; _i < start; _i++) {\n        glyphs[_i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i2 = start; _i2 <= end; _i2++) {\n      glyphs[_i2].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i2]), indicPosition(glyphs[_i2]), tags[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var _glyph$features;\n\n    var glyph = _step2.value;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo;\n        _glyphs$start$shaperI.category;\n        var syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i3 = start;\n\n      while (_i3 < end && glyphs[_i3].shaperInfo.category === CATEGORIES.Repha) {\n        _i3++;\n      }\n\n      glyphs.splice(_i3++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i4 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i4].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i4])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i4;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i4;\n            } else if (start < _i4 && _info.category === CATEGORIES.ZWJ && glyphs[_i4 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i4 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i5 = base + 1; _i5 < end; _i5++) {\n            if (isConsonant(glyphs[_i5])) {\n              glyphs[_i5].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i6 = start; _i6 < base; _i6++) {\n      var _info2 = glyphs[_i6].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i7 = base + 1; _i7 < end; _i7++) {\n      if (glyphs[_i7].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i7 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i8 = base + 1; _i8 < end; _i8++) {\n        if (glyphs[_i8].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i8; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i8) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i8];\n            glyphs.splice.apply(glyphs, [_i8, 0].concat(glyphs.splice(_i8 + 1, _j - _i8)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i9 = start; _i9 < end; _i9++) {\n      var _info3 = glyphs[_i9].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i9; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i10 = base + 1; _i10 < end; _i10++) {\n      if (isConsonant(glyphs[_i10])) {\n        for (var _j3 = last + 1; _j3 < _i10; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i10].shaperInfo.position;\n          }\n        }\n\n        last = _i10;\n      } else if (glyphs[_i10].shaperInfo.category === CATEGORIES.M) {\n        last = _i10;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      if (glyphs[_i11].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i11;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i12 = start; _i12 < end && glyphs[_i12].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i12++) {\n      glyphs[_i12].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i13 = start; _i13 < base; _i13++) {\n      glyphs[_i13].features.half = true;\n\n      if (blwf) {\n        glyphs[_i13].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i14 = base + 1; _i14 < end; _i14++) {\n      glyphs[_i14].features.abvf = true;\n      glyphs[_i14].features.pstf = true;\n      glyphs[_i14].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i15 = start; _i15 + 1 < base; _i15++) {\n        if (glyphs[_i15].shaperInfo.category === CATEGORIES.Ra && glyphs[_i15 + 1].shaperInfo.category === CATEGORIES.H && (_i15 + 1 === base || glyphs[_i15 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i15].features.blwf = true;\n          glyphs[_i15 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i16 = base + 1; _i16 + prefLen - 1 < end; _i16++) {\n        var _g2 = [glyphs[_i16].copy(), glyphs[_i16 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i16++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i16 < end; _i16++) {\n              glyphs[_i16].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i17 = start + 1; _i17 < end; _i17++) {\n      if (isJoiner(glyphs[_i17])) {\n        var nonJoiner = glyphs[_i17].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i17;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i18 = base + 1; _i18 < end; _i18++) {\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 === end || !isHalantOrCoeng(glyphs[_i18])) {\n              break;\n            }\n\n            _i18++; // Skip halant.\n\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 < end && isConsonant(glyphs[_i18]) && glyphs[_i18].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i18;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i19 = newPos; _i19 > start; _i19--) {\n          if (glyphs[_i19 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i19 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i20 = base + 1; _i20 < newRephPos; _i20++) {\n            if (glyphs[_i20].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i21 = base + 1; _i21 < end; _i21++) {\n        if (glyphs[_i21].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i21].isLigated && !glyphs[_i21].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i21;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i21;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {\n  }\n\n  return start;\n}\n\nvar type = \"Buffer\";\nvar data = [\n\t0,\n\t2,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t186,\n\t16,\n\t1,\n\t5,\n\t14,\n\t250,\n\t241,\n\t237,\n\t156,\n\t123,\n\t140,\n\t95,\n\t69,\n\t21,\n\t199,\n\t103,\n\t119,\n\t187,\n\t251,\n\t123,\n\t109,\n\t119,\n\t187,\n\t22,\n\t90,\n\t160,\n\t188,\n\t31,\n\t166,\n\t165,\n\t8,\n\t69,\n\t154,\n\t24,\n\t164,\n\t49,\n\t16,\n\t32,\n\t209,\n\t148,\n\t38,\n\t106,\n\t67,\n\t20,\n\t249,\n\t195,\n\t214,\n\t7,\n\t54,\n\t98,\n\t176,\n\t65,\n\t141,\n\t141,\n\t74,\n\t104,\n\t136,\n\t134,\n\t2,\n\t18,\n\t9,\n\t134,\n\t80,\n\t99,\n\t132,\n\t26,\n\t163,\n\t149,\n\t52,\n\t245,\n\t25,\n\t80,\n\t99,\n\t64,\n\t249,\n\t3,\n\t72,\n\t5,\n\t77,\n\t138,\n\t68,\n\t65,\n\t5,\n\t21,\n\t35,\n\t1,\n\t81,\n\t132,\n\t72,\n\t72,\n\t197,\n\t196,\n\t248,\n\t29,\n\t239,\n\t156,\n\t252,\n\t206,\n\t206,\n\t158,\n\t121,\n\t222,\n\t215,\n\t22,\n\t126,\n\t39,\n\t249,\n\t100,\n\t238,\n\t99,\n\t158,\n\t231,\n\t204,\n\t204,\n\t157,\n\t153,\n\t59,\n\t247,\n\t174,\n\t154,\n\t80,\n\t234,\n\t20,\n\t176,\n\t22,\n\t156,\n\t3,\n\t46,\n\t4,\n\t27,\n\t193,\n\t102,\n\t112,\n\t185,\n\t185,\n\t118,\n\t94,\n\t5,\n\t238,\n\t22,\n\t176,\n\t13,\n\t108,\n\t7,\n\t59,\n\t60,\n\t254,\n\t118,\n\t130,\n\t93,\n\t194,\n\t245,\n\t27,\n\t193,\n\t173,\n\t96,\n\t55,\n\t216,\n\t3,\n\t190,\n\t13,\n\t190,\n\t7,\n\t238,\n\t1,\n\t247,\n\t25,\n\t30,\n\t100,\n\t254,\n\t127,\n\t1,\n\t30,\n\t5,\n\t191,\n\t3,\n\t79,\n\t11,\n\t241,\n\t61,\n\t5,\n\t158,\n\t1,\n\t171,\n\t192,\n\t11,\n\t38,\n\t111,\n\t171,\n\t204,\n\t253,\n\t85,\n\t140,\n\t87,\n\t192,\n\t33,\n\t160,\n\t150,\n\t40,\n\t213,\n\t5,\n\t203,\n\t192,\n\t10,\n\t112,\n\t60,\n\t120,\n\t35,\n\t56,\n\t19,\n\t172,\n\t7,\n\t27,\n\t192,\n\t69,\n\t224,\n\t18,\n\t240,\n\t110,\n\t240,\n\t62,\n\t240,\n\t1,\n\t240,\n\t81,\n\t176,\n\t29,\n\t236,\n\t0,\n\t59,\n\t193,\n\t46,\n\t112,\n\t11,\n\t216,\n\t13,\n\t238,\n\t4,\n\t123,\n\t193,\n\t126,\n\t112,\n\t55,\n\t184,\n\t23,\n\t60,\n\t0,\n\t30,\n\t6,\n\t191,\n\t6,\n\t191,\n\t7,\n\t127,\n\t1,\n\t207,\n\t130,\n\t23,\n\t193,\n\t33,\n\t160,\n\t38,\n\t149,\n\t234,\n\t128,\n\t89,\n\t176,\n\t18,\n\t156,\n\t0,\n\t78,\n\t5,\n\t103,\n\t76,\n\t22,\n\t121,\n\t95,\n\t15,\n\t247,\n\t60,\n\t112,\n\t161,\n\t57,\n\t223,\n\t8,\n\t119,\n\t51,\n\t184,\n\t28,\n\t108,\n\t1,\n\t219,\n\t192,\n\t199,\n\t193,\n\t167,\n\t205,\n\t253,\n\t107,\n\t225,\n\t126,\n\t1,\n\t220,\n\t12,\n\t110,\n\t3,\n\t95,\n\t155,\n\t28,\n\t150,\n\t253,\n\t155,\n\t147,\n\t243,\n\t117,\n\t81,\n\t150,\n\t253,\n\t136,\n\t239,\n\t251,\n\t21,\n\t199,\n\t201,\n\t249,\n\t177,\n\t21,\n\t247,\n\t125,\n\t56,\n\t127,\n\t16,\n\t252,\n\t10,\n\t252,\n\t6,\n\t60,\n\t53,\n\t89,\n\t148,\n\t247,\n\t25,\n\t240,\n\t2,\n\t120,\n\t5,\n\t252,\n\t55,\n\t144,\n\t159,\n\t169,\n\t41,\n\t165,\n\t102,\n\t192,\n\t10,\n\t176,\n\t106,\n\t170,\n\t8,\n\t127,\n\t10,\n\t220,\n\t53,\n\t224,\n\t108,\n\t112,\n\t174,\n\t185,\n\t118,\n\t1,\n\t220,\n\t119,\n\t128,\n\t119,\n\t129,\n\t203,\n\t166,\n\t10,\n\t221,\n\t106,\n\t182,\n\t226,\n\t248,\n\t67,\n\t224,\n\t99,\n\t224,\n\t147,\n\t224,\n\t115,\n\t224,\n\t243,\n\t38,\n\t204,\n\t77,\n\t198,\n\t253,\n\t50,\n\t220,\n\t175,\n\t130,\n\t27,\n\t88,\n\t186,\n\t223,\n\t192,\n\t249,\n\t190,\n\t41,\n\t127,\n\t222,\n\t126,\n\t16,\n\t184,\n\t31,\n\t195,\n\t79,\n\t16,\n\t199,\n\t253,\n\t224,\n\t0,\n\t56,\n\t8,\n\t158,\n\t48,\n\t229,\n\t210,\n\t247,\n\t158,\n\t132,\n\t251,\n\t87,\n\t240,\n\t15,\n\t240,\n\t178,\n\t185,\n\t246,\n\t42,\n\t220,\n\t241,\n\t14,\n\t234,\n\t32,\n\t88,\n\t218,\n\t9,\n\t199,\n\t127,\n\t36,\n\t252,\n\t28,\n\t215,\n\t41,\n\t226,\n\t60,\n\t17,\n\t238,\n\t106,\n\t112,\n\t22,\n\t88,\n\t15,\n\t214,\n\t153,\n\t180,\n\t54,\n\t224,\n\t248,\n\t12,\n\t19,\n\t215,\n\t219,\n\t140,\n\t95,\n\t205,\n\t197,\n\t236,\n\t152,\n\t179,\n\t9,\n\t215,\n\t47,\n\t5,\n\t151,\n\t89,\n\t247,\n\t183,\n\t58,\n\t252,\n\t19,\n\t31,\n\t49,\n\t105,\n\t159,\n\t205,\n\t244,\n\t230,\n\t243,\n\t207,\n\t253,\n\t229,\n\t162,\n\t227,\n\t248,\n\t48,\n\t210,\n\t188,\n\t10,\n\t92,\n\t13,\n\t118,\n\t116,\n\t226,\n\t227,\n\t223,\n\t105,\n\t233,\n\t247,\n\t76,\n\t193,\n\t207,\n\t46,\n\t248,\n\t185,\n\t5,\n\t236,\n\t238,\n\t20,\n\t245,\n\t109,\n\t15,\n\t139,\n\t127,\n\t169,\n\t71,\n\t31,\n\t123,\n\t113,\n\t111,\n\t63,\n\t184,\n\t27,\n\t220,\n\t235,\n\t176,\n\t163,\n\t212,\n\t254,\n\t31,\n\t232,\n\t12,\n\t203,\n\t245,\n\t8,\n\t142,\n\t31,\n\t3,\n\t127,\n\t0,\n\t79,\n\t155,\n\t180,\n\t244,\n\t241,\n\t223,\n\t204,\n\t241,\n\t99,\n\t1,\n\t123,\n\t84,\n\t161,\n\t223,\n\t17,\n\t35,\n\t94,\n\t143,\n\t140,\n\t218,\n\t207,\n\t136,\n\t17,\n\t35,\n\t70,\n\t140,\n\t24,\n\t49,\n\t98,\n\t196,\n\t136,\n\t215,\n\t2,\n\t235,\n\t58,\n\t195,\n\t53,\n\t129,\n\t27,\n\t34,\n\t252,\n\t255,\n\t147,\n\t205,\n\t93,\n\t255,\n\t101,\n\t205,\n\t99,\n\t191,\n\t24,\n\t17,\n\t254,\n\t63,\n\t8,\n\t51,\n\t209,\n\t45,\n\t214,\n\t97,\n\t6,\n\t112,\n\t151,\n\t131,\n\t21,\n\t224,\n\t56,\n\t112,\n\t154,\n\t185,\n\t254,\n\t38,\n\t184,\n\t235,\n\t187,\n\t133,\n\t255,\n\t13,\n\t112,\n\t207,\n\t7,\n\t111,\n\t7,\n\t239,\n\t52,\n\t247,\n\t223,\n\t11,\n\t119,\n\t11,\n\t216,\n\t102,\n\t206,\n\t183,\n\t195,\n\t221,\n\t1,\n\t118,\n\t118,\n\t221,\n\t233,\n\t106,\n\t127,\n\t187,\n\t60,\n\t247,\n\t71,\n\t140,\n\t24,\n\t49,\n\t98,\n\t68,\n\t189,\n\t156,\n\t211,\n\t50,\n\t109,\n\t151,\n\t127,\n\t196,\n\t136,\n\t17,\n\t245,\n\t80,\n\t119,\n\t251,\n\t254,\n\t18,\n\t198,\n\t143,\n\t183,\n\t119,\n\t139,\n\t247,\n\t66,\n\t119,\n\t192,\n\t253,\n\t150,\n\t48,\n\t158,\n\t252,\n\t78,\n\t183,\n\t120,\n\t183,\n\t175,\n\t143,\n\t239,\n\t177,\n\t238,\n\t223,\n\t183,\n\t8,\n\t198,\n\t159,\n\t127,\n\t159,\n\t46,\n\t152,\n\t94,\n\t170,\n\t212,\n\t37,\n\t224,\n\t145,\n\t233,\n\t48,\n\t59,\n\t225,\n\t239,\n\t231,\n\t150,\n\t95,\n\t53,\n\t51,\n\t60,\n\t94,\n\t141,\n\t227,\n\t45,\n\t96,\n\t15,\n\t120,\n\t28,\n\t28,\n\t50,\n\t247,\n\t86,\n\t207,\n\t98,\n\t140,\n\t62,\n\t59,\n\t244,\n\t183,\n\t3,\n\t199,\n\t123,\n\t160,\n\t131,\n\t63,\n\t129,\n\t19,\n\t123,\n\t8,\n\t3,\n\t246,\n\t244,\n\t138,\n\t177,\n\t252,\n\t29,\n\t83,\n\t133,\n\t251,\n\t176,\n\t57,\n\t231,\n\t12,\n\t250,\n\t240,\n\t55,\n\t54,\n\t100,\n\t99,\n\t127,\n\t161,\n\t159,\n\t155,\n\t112,\n\t109,\n\t31,\n\t187,\n\t254,\n\t60,\n\t142,\n\t215,\n\t14,\n\t148,\n\t186,\n\t18,\n\t236,\n\t3,\n\t207,\n\t131,\n\t181,\n\t211,\n\t237,\n\t63,\n\t127,\n\t218,\n\t38,\n\t212,\n\t94,\n\t30,\n\t132,\n\t238,\n\t14,\n\t152,\n\t122,\n\t122,\n\t16,\n\t238,\n\t227,\n\t198,\n\t94,\n\t122,\n\t158,\n\t248,\n\t108,\n\t55,\n\t253,\n\t121,\n\t186,\n\t223,\n\t184,\n\t103,\n\t70,\n\t250,\n\t231,\n\t188,\n\t152,\n\t145,\n\t158,\n\t212,\n\t39,\n\t72,\n\t225,\n\t95,\n\t70,\n\t220,\n\t175,\n\t118,\n\t231,\n\t251,\n\t163,\n\t252,\n\t238,\n\t247,\n\t164,\n\t55,\n\t142,\n\t250,\n\t217,\n\t3,\n\t115,\n\t189,\n\t97,\n\t217,\n\t180,\n\t191,\n\t163,\n\t112,\n\t126,\n\t108,\n\t175,\n\t56,\n\t63,\n\t185,\n\t55,\n\t244,\n\t127,\n\t122,\n\t111,\n\t126,\n\t62,\n\t98,\n\t251,\n\t171,\n\t88,\n\t91,\n\t186,\n\t202,\n\t247,\n\t230,\n\t158,\n\t124,\n\t239,\n\t173,\n\t184,\n\t190,\n\t1,\n\t92,\n\t4,\n\t54,\n\t130,\n\t205,\n\t224,\n\t61,\n\t224,\n\t73,\n\t115,\n\t255,\n\t253,\n\t56,\n\t190,\n\t2,\n\t92,\n\t5,\n\t174,\n\t54,\n\t247,\n\t63,\n\t3,\n\t174,\n\t3,\n\t55,\n\t130,\n\t91,\n\t193,\n\t237,\n\t44,\n\t238,\n\t59,\n\t113,\n\t188,\n\t23,\n\t236,\n\t3,\n\t63,\n\t4,\n\t63,\n\t5,\n\t247,\n\t131,\n\t3,\n\t224,\n\t160,\n\t144,\n\t7,\n\t61,\n\t15,\n\t127,\n\t2,\n\t215,\n\t255,\n\t108,\n\t238,\n\t233,\n\t253,\n\t52,\n\t207,\n\t225,\n\t248,\n\t37,\n\t193,\n\t47,\n\t249,\n\t255,\n\t55,\n\t238,\n\t141,\n\t245,\n\t135,\n\t231,\n\t61,\n\t28,\n\t207,\n\t129,\n\t163,\n\t251,\n\t197,\n\t249,\n\t73,\n\t253,\n\t98,\n\t111,\n\t137,\n\t190,\n\t191,\n\t6,\n\t199,\n\t103,\n\t247,\n\t221,\n\t58,\n\t211,\n\t254,\n\t207,\n\t237,\n\t203,\n\t58,\n\t115,\n\t233,\n\t253,\n\t2,\n\t248,\n\t191,\n\t24,\n\t108,\n\t2,\n\t151,\n\t130,\n\t203,\n\t192,\n\t86,\n\t147,\n\t246,\n\t182,\n\t126,\n\t209,\n\t102,\n\t98,\n\t237,\n\t182,\n\t29,\n\t254,\n\t63,\n\t5,\n\t174,\n\t1,\n\t215,\n\t129,\n\t235,\n\t193,\n\t205,\n\t44,\n\t63,\n\t183,\n\t225,\n\t248,\n\t43,\n\t224,\n\t235,\n\t224,\n\t46,\n\t240,\n\t93,\n\t86,\n\t182,\n\t16,\n\t63,\n\t242,\n\t148,\n\t251,\n\t81,\n\t228,\n\t241,\n\t103,\n\t253,\n\t118,\n\t158,\n\t57,\n\t46,\n\t93,\n\t63,\n\t20,\n\t200,\n\t207,\n\t98,\n\t234,\n\t43,\n\t171,\n\t212,\n\t65,\n\t27,\n\t233,\n\t255,\n\t178,\n\t63,\n\t63,\n\t222,\n\t131,\n\t70,\n\t247,\n\t191,\n\t133,\n\t251,\n\t199,\n\t126,\n\t185,\n\t124,\n\t198,\n\t150,\n\t227,\n\t105,\n\t79,\n\t187,\n\t179,\n\t211,\n\t191,\n\t171,\n\t226,\n\t242,\n\t47,\n\t198,\n\t250,\n\t85,\n\t133,\n\t253,\n\t203,\n\t212,\n\t147,\n\t182,\n\t203,\n\t151,\n\t90,\n\t254,\n\t231,\n\t250,\n\t205,\n\t230,\n\t219,\n\t183,\n\t143,\n\t106,\n\t175,\n\t89,\n\t55,\n\t127,\n\t169,\n\t95,\n\t184,\n\t135,\n\t224,\n\t42,\n\t140,\n\t49,\n\t167,\n\t6,\n\t197,\n\t249,\n\t244,\n\t96,\n\t232,\n\t247,\n\t136,\n\t129,\n\t92,\n\t54,\n\t186,\n\t191,\n\t166,\n\t35,\n\t151,\n\t171,\n\t238,\n\t250,\n\t31,\n\t34,\n\t180,\n\t151,\n\t44,\n\t102,\n\t175,\n\t217,\n\t202,\n\t65,\n\t225,\n\t30,\n\t15,\n\t247,\n\t180,\n\t193,\n\t225,\n\t81,\n\t239,\n\t108,\n\t253,\n\t135,\n\t238,\n\t159,\n\t46,\n\t216,\n\t55,\n\t20,\n\t239,\n\t67,\n\t194,\n\t216,\n\t118,\n\t177,\n\t17,\n\t219,\n\t239,\n\t220,\n\t208,\n\t96,\n\t94,\n\t206,\n\t26,\n\t204,\n\t191,\n\t118,\n\t77,\n\t70,\n\t254,\n\t207,\n\t153,\n\t136,\n\t171,\n\t135,\n\t186,\n\t14,\n\t191,\n\t133,\n\t181,\n\t99,\n\t189,\n\t191,\n\t115,\n\t3,\n\t206,\n\t207,\n\t31,\n\t20,\n\t237,\n\t127,\n\t29,\n\t219,\n\t111,\n\t121,\n\t177,\n\t241,\n\t55,\n\t48,\n\t249,\n\t219,\n\t4,\n\t247,\n\t210,\n\t65,\n\t177,\n\t239,\n\t246,\n\t114,\n\t184,\n\t31,\n\t20,\n\t234,\n\t136,\n\t175,\n\t237,\n\t172,\n\t142,\n\t216,\n\t203,\n\t153,\n\t139,\n\t206,\n\t251,\n\t149,\n\t131,\n\t249,\n\t215,\n\t248,\n\t222,\n\t213,\n\t231,\n\t80,\n\t55,\n\t175,\n\t232,\n\t12,\n\t203,\n\t254,\n\t9,\n\t227,\n\t126,\n\t22,\n\t238,\n\t93,\n\t157,\n\t97,\n\t254,\n\t79,\n\t101,\n\t97,\n\t174,\n\t53,\n\t126,\n\t174,\n\t135,\n\t123,\n\t179,\n\t16,\n\t247,\n\t173,\n\t184,\n\t182,\n\t59,\n\t177,\n\t157,\n\t180,\n\t205,\n\t49,\n\t19,\n\t99,\n\t106,\n\t49,\n\t200,\n\t24,\n\t99,\n\t220,\n\t58,\n\t231,\n\t126,\n\t200,\n\t157,\n\t96,\n\t247,\n\t151,\n\t68,\n\t98,\n\t199,\n\t167,\n\t28,\n\t215,\n\t234,\n\t150,\n\t197,\n\t161,\n\t241,\n\t145,\n\t144,\n\t80,\n\t93,\n\t26,\n\t23,\n\t32,\n\t91,\n\t141,\n\t11,\n\t225,\n\t198,\n\t45,\n\t119,\n\t210,\n\t64,\n\t18,\n\t83,\n\t183,\n\t234,\n\t174,\n\t11,\n\t19,\n\t53,\n\t199,\n\t95,\n\t181,\n\t76,\n\t181,\n\t157,\n\t129,\n\t18,\n\t18,\n\t99,\n\t203,\n\t215,\n\t83,\n\t219,\n\t151,\n\t218,\n\t204,\n\t235,\n\t73,\n\t198,\n\t28,\n\t44,\n\t6,\n\t177,\n\t243,\n\t193,\n\t251,\n\t188,\n\t195,\n\t93,\n\t164,\n\t49,\n\t131,\n\t125,\n\t124,\n\t184,\n\t72,\n\t110,\n\t157,\n\t145,\n\t198,\n\t82,\n\t57,\n\t246,\n\t181,\n\t245,\n\t119,\n\t56,\n\t233,\n\t176,\n\t169,\n\t118,\n\t23,\n\t27,\n\t119,\n\t138,\n\t238,\n\t171,\n\t110,\n\t135,\n\t220,\n\t246,\n\t174,\n\t126,\n\t41,\n\t196,\n\t107,\n\t93,\n\t92,\n\t243,\n\t14,\n\t126,\n\t191,\n\t10,\n\t187,\n\t228,\n\t234,\n\t159,\n\t242,\n\t212,\n\t97,\n\t96,\n\t26,\n\t27,\n\t61,\n\t255,\n\t169,\n\t154,\n\t30,\n\t48,\n\t75,\n\t130,\n\t255,\n\t63,\n\t215,\n\t199,\n\t211,\n\t198,\n\t93,\n\t106,\n\t209,\n\t179,\n\t232,\n\t91,\n\t204,\n\t176,\n\t176,\n\t84,\n\t198,\n\t89,\n\t166,\n\t179,\n\t30,\n\t139,\n\t43,\n\t54,\n\t127,\n\t228,\n\t63,\n\t103,\n\t158,\n\t168,\n\t74,\n\t232,\n\t101,\n\t130,\n\t217,\n\t166,\n\t27,\n\t25,\n\t151,\n\t178,\n\t252,\n\t217,\n\t231,\n\t169,\n\t132,\n\t194,\n\t42,\n\t53,\n\t63,\n\t29,\n\t201,\n\t63,\n\t73,\n\t140,\n\t125,\n\t73,\n\t166,\n\t13,\n\t246,\n\t185,\n\t182,\n\t111,\n\t76,\n\t31,\n\t210,\n\t23,\n\t174,\n\t185,\n\t202,\n\t100,\n\t167,\n\t157,\n\t170,\n\t163,\n\t80,\n\t123,\n\t166,\n\t251,\n\t84,\n\t39,\n\t248,\n\t220,\n\t142,\n\t183,\n\t63,\n\t95,\n\t218,\n\t190,\n\t178,\n\t228,\n\t228,\n\t57,\n\t213,\n\t190,\n\t161,\n\t99,\n\t45,\n\t3,\n\t227,\n\t74,\n\t246,\n\t181,\n\t133,\n\t218,\n\t175,\n\t125,\n\t62,\n\t99,\n\t249,\n\t155,\n\t85,\n\t126,\n\t137,\n\t169,\n\t143,\n\t161,\n\t48,\n\t46,\n\t180,\n\t93,\n\t150,\n\t169,\n\t162,\n\t29,\n\t210,\n\t252,\n\t119,\n\t78,\n\t165,\n\t61,\n\t195,\n\t98,\n\t237,\n\t235,\n\t179,\n\t73,\n\t74,\n\t158,\n\t171,\n\t178,\n\t111,\n\t110,\n\t251,\n\t37,\n\t155,\n\t242,\n\t62,\n\t90,\n\t169,\n\t249,\n\t253,\n\t115,\n\t85,\n\t82,\n\t182,\n\t253,\n\t210,\n\t88,\n\t54,\n\t148,\n\t6,\n\t127,\n\t78,\n\t46,\n\t99,\n\t40,\n\t117,\n\t248,\n\t244,\n\t207,\n\t169,\n\t246,\n\t165,\n\t103,\n\t107,\n\t78,\n\t255,\n\t28,\n\t18,\n\t187,\n\t237,\n\t219,\n\t58,\n\t176,\n\t243,\n\t153,\n\t107,\n\t223,\n\t113,\n\t53,\n\t191,\n\t124,\n\t185,\n\t162,\n\t109,\n\t28,\n\t122,\n\t150,\n\t75,\n\t229,\n\t112,\n\t233,\n\t92,\n\t242,\n\t171,\n\t4,\n\t255,\n\t46,\n\t127,\n\t174,\n\t116,\n\t164,\n\t235,\n\t177,\n\t117,\n\t136,\n\t11,\n\t181,\n\t85,\n\t62,\n\t190,\n\t226,\n\t50,\n\t173,\n\t230,\n\t219,\n\t159,\n\t159,\n\t199,\n\t182,\n\t111,\n\t233,\n\t249,\n\t236,\n\t146,\n\t156,\n\t114,\n\t72,\n\t107,\n\t176,\n\t161,\n\t181,\n\t9,\n\t222,\n\t150,\n\t187,\n\t230,\n\t60,\n\t181,\n\t253,\n\t165,\n\t228,\n\t55,\n\t167,\n\t61,\n\t167,\n\t234,\n\t65,\n\t159,\n\t251,\n\t198,\n\t203,\n\t74,\n\t45,\n\t236,\n\t171,\n\t249,\n\t121,\n\t200,\n\t158,\n\t52,\n\t158,\n\t150,\n\t244,\n\t96,\n\t75,\n\t217,\n\t246,\n\t236,\n\t147,\n\t208,\n\t51,\n\t153,\n\t250,\n\t2,\n\t110,\n\t227,\n\t152,\n\t177,\n\t188,\n\t84,\n\t174,\n\t166,\n\t236,\n\t235,\n\t242,\n\t75,\n\t98,\n\t247,\n\t215,\n\t117,\n\t216,\n\t87,\n\t106,\n\t255,\n\t182,\n\t216,\n\t121,\n\t45,\n\t99,\n\t223,\n\t55,\n\t24,\n\t114,\n\t132,\n\t143,\n\t181,\n\t82,\n\t158,\n\t199,\n\t85,\n\t183,\n\t191,\n\t28,\n\t200,\n\t30,\n\t100,\n\t79,\n\t27,\n\t174,\n\t211,\n\t80,\n\t255,\n\t187,\n\t92,\n\t201,\n\t125,\n\t28,\n\t159,\n\t255,\n\t199,\n\t216,\n\t180,\n\t206,\n\t246,\n\t74,\n\t98,\n\t175,\n\t149,\n\t72,\n\t235,\n\t38,\n\t41,\n\t246,\n\t204,\n\t201,\n\t91,\n\t213,\n\t182,\n\t140,\n\t141,\n\t83,\n\t169,\n\t249,\n\t121,\n\t137,\n\t205,\n\t175,\n\t212,\n\t102,\n\t121,\n\t93,\n\t161,\n\t186,\n\t68,\n\t54,\n\t91,\n\t202,\n\t252,\n\t76,\n\t59,\n\t240,\n\t213,\n\t135,\n\t84,\n\t157,\n\t82,\n\t62,\n\t114,\n\t214,\n\t250,\n\t218,\n\t104,\n\t123,\n\t62,\n\t219,\n\t244,\n\t216,\n\t53,\n\t123,\n\t237,\n\t73,\n\t26,\n\t23,\n\t147,\n\t140,\n\t43,\n\t127,\n\t220,\n\t58,\n\t124,\n\t71,\n\t45,\n\t156,\n\t91,\n\t116,\n\t204,\n\t189,\n\t178,\n\t251,\n\t17,\n\t108,\n\t125,\n\t42,\n\t203,\n\t205,\n\t173,\n\t179,\n\t57,\n\t58,\n\t140,\n\t137,\n\t155,\n\t252,\n\t196,\n\t234,\n\t91,\n\t159,\n\t207,\n\t177,\n\t176,\n\t190,\n\t114,\n\t145,\n\t216,\n\t250,\n\t86,\n\t204,\n\t77,\n\t41,\n\t191,\n\t203,\n\t191,\n\t22,\n\t251,\n\t157,\n\t127,\n\t46,\n\t227,\n\t204,\n\t181,\n\t199,\n\t172,\n\t174,\n\t49,\n\t109,\n\t213,\n\t246,\n\t211,\n\t113,\n\t78,\n\t90,\n\t46,\n\t205,\n\t123,\n\t37,\n\t137,\n\t181,\n\t113,\n\t157,\n\t216,\n\t194,\n\t215,\n\t140,\n\t93,\n\t107,\n\t200,\n\t54,\n\t52,\n\t134,\n\t224,\n\t231,\n\t29,\n\t53,\n\t92,\n\t3,\n\t246,\n\t149,\n\t247,\n\t136,\n\t4,\n\t84,\n\t162,\n\t255,\n\t58,\n\t208,\n\t18,\n\t154,\n\t43,\n\t77,\n\t122,\n\t238,\n\t241,\n\t240,\n\t174,\n\t122,\n\t44,\n\t181,\n\t9,\n\t73,\n\t234,\n\t174,\n\t27,\n\t41,\n\t72,\n\t207,\n\t82,\n\t205,\n\t180,\n\t146,\n\t235,\n\t139,\n\t94,\n\t167,\n\t212,\n\t117,\n\t102,\n\t198,\n\t92,\n\t59,\n\t18,\n\t172,\n\t80,\n\t69,\n\t31,\n\t53,\n\t151,\n\t152,\n\t182,\n\t189,\n\t47,\n\t141,\n\t142,\n\t67,\n\t121,\n\t117,\n\t189,\n\t215,\n\t152,\n\t83,\n\t243,\n\t243,\n\t209,\n\t87,\n\t195,\n\t49,\n\t149,\n\t29,\n\t71,\n\t87,\n\t128,\n\t199,\n\t101,\n\t151,\n\t61,\n\t71,\n\t183,\n\t115,\n\t106,\n\t56,\n\t22,\n\t161,\n\t120,\n\t164,\n\t116,\n\t187,\n\t70,\n\t175,\n\t75,\n\t132,\n\t124,\n\t248,\n\t160,\n\t176,\n\t100,\n\t191,\n\t54,\n\t246,\n\t35,\n\t72,\n\t117,\n\t188,\n\t237,\n\t119,\n\t163,\n\t161,\n\t118,\n\t94,\n\t133,\n\t158,\n\t248,\n\t94,\n\t183,\n\t42,\n\t165,\n\t14,\n\t29,\n\t229,\n\t62,\n\t95,\n\t236,\n\t107,\n\t188,\n\t127,\n\t168,\n\t59,\n\t125,\n\t9,\n\t158,\n\t126,\n\t138,\n\t142,\n\t170,\n\t78,\n\t63,\n\t85,\n\t170,\n\t208,\n\t191,\n\t106,\n\t56,\n\t253,\n\t80,\n\t222,\n\t180,\n\t240,\n\t231,\n\t134,\n\t52,\n\t118,\n\t117,\n\t205,\n\t193,\n\t8,\n\t26,\n\t127,\n\t244,\n\t213,\n\t112,\n\t236,\n\t161,\n\t159,\n\t193,\n\t43,\n\t85,\n\t49,\n\t254,\n\t154,\n\t100,\n\t208,\n\t26,\n\t142,\n\t62,\n\t182,\n\t219,\n\t136,\n\t253,\n\t28,\n\t38,\n\t91,\n\t165,\n\t150,\n\t191,\n\t46,\n\t241,\n\t245,\n\t129,\n\t77,\n\t244,\n\t139,\n\t250,\n\t185,\n\t90,\n\t117,\n\t29,\n\t72,\n\t209,\n\t41,\n\t175,\n\t27,\n\t246,\n\t120,\n\t131,\n\t176,\n\t199,\n\t106,\n\t92,\n\t142,\n\t50,\n\t204,\n\t178,\n\t99,\n\t155,\n\t163,\n\t77,\n\t60,\n\t147,\n\t66,\n\t120,\n\t187,\n\t175,\n\t79,\n\t221,\n\t223,\n\t80,\n\t117,\n\t187,\n\t41,\n\t91,\n\t247,\n\t114,\n\t211,\n\t205,\n\t13,\n\t111,\n\t195,\n\t215,\n\t169,\n\t202,\n\t230,\n\t143,\n\t75,\n\t236,\n\t115,\n\t187,\n\t110,\n\t234,\n\t172,\n\t3,\n\t212,\n\t14,\n\t104,\n\t45,\n\t138,\n\t247,\n\t83,\n\t117,\n\t214,\n\t75,\n\t26,\n\t163,\n\t235,\n\t246,\n\t181,\n\t210,\n\t112,\n\t140,\n\t146,\n\t231,\n\t73,\n\t51,\n\t44,\n\t111,\n\t174,\n\t246,\n\t202,\n\t231,\n\t152,\n\t212,\n\t174,\n\t165,\n\t62,\n\t94,\n\t90,\n\t255,\n\t33,\n\t168,\n\t189,\n\t242,\n\t54,\n\t59,\n\t153,\n\t80,\n\t38,\n\t151,\n\t148,\n\t13,\n\t31,\n\t26,\n\t183,\n\t214,\n\t61,\n\t166,\n\t229,\n\t58,\n\t210,\n\t118,\n\t106,\n\t122,\n\t207,\n\t154,\n\t126,\n\t246,\n\t74,\n\t115,\n\t66,\n\t123,\n\t93,\n\t65,\n\t178,\n\t53,\n\t61,\n\t167,\n\t235,\n\t232,\n\t143,\n\t66,\n\t235,\n\t72,\n\t49,\n\t172,\n\t2,\n\t199,\n\t26,\n\t215,\n\t69,\n\t234,\n\t220,\n\t161,\n\t45,\n\t59,\n\t113,\n\t120,\n\t27,\n\t150,\n\t250,\n\t24,\n\t106,\n\t203,\n\t51,\n\t204,\n\t95,\n\t221,\n\t245,\n\t198,\n\t94,\n\t171,\n\t39,\n\t151,\n\t250,\n\t159,\n\t152,\n\t119,\n\t110,\n\t90,\n\t108,\n\t91,\n\t187,\n\t202,\n\t110,\n\t247,\n\t65,\n\t124,\n\t189,\n\t96,\n\t165,\n\t135,\n\t227,\n\t12,\n\t186,\n\t239,\n\t161,\n\t189,\n\t93,\n\t174,\n\t180,\n\t83,\n\t250,\n\t103,\n\t46,\n\t49,\n\t253,\n\t78,\n\t172,\n\t148,\n\t157,\n\t91,\n\t243,\n\t254,\n\t69,\n\t251,\n\t159,\n\t117,\n\t64,\n\t126,\n\t164,\n\t235,\n\t93,\n\t79,\n\t56,\n\t105,\n\t47,\n\t155,\n\t116,\n\t141,\n\t242,\n\t171,\n\t227,\n\t163,\n\t247,\n\t161,\n\t180,\n\t31,\n\t65,\n\t211,\n\t198,\n\t183,\n\t88,\n\t210,\n\t248,\n\t49,\n\t36,\n\t199,\n\t131,\n\t19,\n\t216,\n\t249,\n\t132,\n\t131,\n\t88,\n\t251,\n\t216,\n\t235,\n\t97,\n\t169,\n\t246,\n\t77,\n\t89,\n\t127,\n\t137,\n\t185,\n\t158,\n\t26,\n\t183,\n\t253,\n\t172,\n\t76,\n\t9,\n\t167,\n\t229,\n\t196,\n\t136,\n\t50,\n\t166,\n\t72,\n\t142,\n\t77,\n\t41,\n\t156,\n\t61,\n\t62,\n\t105,\n\t66,\n\t58,\n\t97,\n\t47,\n\t94,\n\t145,\n\t214,\n\t172,\n\t165,\n\t107,\n\t41,\n\t241,\n\t197,\n\t132,\n\t11,\n\t173,\n\t157,\n\t75,\n\t174,\n\t148,\n\t78,\n\t74,\n\t190,\n\t202,\n\t150,\n\t163,\n\t202,\n\t245,\n\t210,\n\t148,\n\t252,\n\t248,\n\t198,\n\t20,\n\t33,\n\t155,\n\t249,\n\t236,\n\t235,\n\t10,\n\t87,\n\t5,\n\t82,\n\t57,\n\t235,\n\t72,\n\t199,\n\t55,\n\t214,\n\t138,\n\t145,\n\t212,\n\t248,\n\t234,\n\t202,\n\t111,\n\t89,\n\t63,\n\t117,\n\t234,\n\t179,\n\t141,\n\t116,\n\t115,\n\t108,\n\t25,\n\t35,\n\t109,\n\t151,\n\t161,\n\t233,\n\t242,\n\t134,\n\t164,\n\t77,\n\t91,\n\t164,\n\t164,\n\t95,\n\t103,\n\t221,\n\t77,\n\t201,\n\t199,\n\t68,\n\t205,\n\t121,\n\t246,\n\t233,\n\t221,\n\t30,\n\t35,\n\t150,\n\t213,\n\t95,\n\t21,\n\t250,\n\t111,\n\t66,\n\t66,\n\t105,\n\t53,\n\t161,\n\t255,\n\t166,\n\t236,\n\t156,\n\t163,\n\t239,\n\t170,\n\t109,\n\t147,\n\t243,\n\t238,\n\t193,\n\t53,\n\t47,\n\t112,\n\t197,\n\t25,\n\t90,\n\t47,\n\t115,\n\t133,\n\t207,\n\t45,\n\t67,\n\t206,\n\t220,\n\t66,\n\t242,\n\t175,\n\t50,\n\t226,\n\t74,\n\t153,\n\t143,\n\t133,\n\t164,\n\t201,\n\t126,\n\t167,\n\t137,\n\t250,\n\t222,\n\t180,\n\t62,\n\t36,\n\t225,\n\t246,\n\t201,\n\t205,\n\t91,\n\t110,\n\t185,\n\t234,\n\t234,\n\t67,\n\t67,\n\t229,\n\t173,\n\t202,\n\t14,\n\t174,\n\t120,\n\t154,\n\t174,\n\t7,\n\t177,\n\t210,\n\t84,\n\t251,\n\t41,\n\t91,\n\t214,\n\t182,\n\t242,\n\t80,\n\t214,\n\t38,\n\t139,\n\t161,\n\t111,\n\t168,\n\t178,\n\t191,\n\t181,\n\t227,\n\t77,\n\t245,\n\t75,\n\t235,\n\t184,\n\t246,\n\t190,\n\t48,\n\t233,\n\t189,\n\t71,\n\t204,\n\t183,\n\t85,\n\t101,\n\t224,\n\t107,\n\t220,\n\t180,\n\t198,\n\t158,\n\t171,\n\t251,\n\t216,\n\t112,\n\t85,\n\t151,\n\t33,\n\t245,\n\t121,\n\t42,\n\t237,\n\t215,\n\t107,\n\t18,\n\t189,\n\t231,\n\t81,\n\t250,\n\t118,\n\t197,\n\t133,\n\t174,\n\t23,\n\t49,\n\t107,\n\t122,\n\t84,\n\t254,\n\t156,\n\t247,\n\t11,\n\t92,\n\t92,\n\t239,\n\t91,\n\t83,\n\t113,\n\t165,\n\t227,\n\t26,\n\t59,\n\t73,\n\t109,\n\t130,\n\t35,\n\t237,\n\t65,\n\t230,\n\t239,\n\t12,\n\t82,\n\t203,\n\t31,\n\t131,\n\t253,\n\t222,\n\t210,\n\t126,\n\t151,\n\t201,\n\t223,\n\t3,\n\t233,\n\t125,\n\t36,\n\t41,\n\t223,\n\t107,\n\t82,\n\t217,\n\t219,\n\t124,\n\t87,\n\t107,\n\t67,\n\t239,\n\t224,\n\t92,\n\t123,\n\t122,\n\t233,\n\t61,\n\t173,\n\t222,\n\t11,\n\t160,\n\t235,\n\t241,\n\t73,\n\t106,\n\t248,\n\t175,\n\t137,\n\t220,\n\t113,\n\t111,\n\t110,\n\t125,\n\t245,\n\t217,\n\t155,\n\t246,\n\t69,\n\t212,\n\t173,\n\t175,\n\t216,\n\t52,\n\t164,\n\t253,\n\t15,\n\t252,\n\t29,\n\t56,\n\t93,\n\t179,\n\t247,\n\t67,\n\t199,\n\t8,\n\t79,\n\t103,\n\t101,\n\t68,\n\t94,\n\t168,\n\t174,\n\t74,\n\t225,\n\t99,\n\t244,\n\t111,\n\t219,\n\t177,\n\t106,\n\t29,\n\t242,\n\t245,\n\t12,\n\t254,\n\t60,\n\t209,\n\t247,\n\t232,\n\t253,\n\t94,\n\t149,\n\t237,\n\t164,\n\t199,\n\t92,\n\t178,\n\t131,\n\t109,\n\t55,\n\t87,\n\t56,\n\t234,\n\t231,\n\t200,\n\t109,\n\t82,\n\t114,\n\t244,\n\t175,\n\t235,\n\t26,\n\t175,\n\t123,\n\t125,\n\t37,\n\t63,\n\t55,\n\t105,\n\t143,\n\t126,\n\t140,\n\t240,\n\t248,\n\t165,\n\t111,\n\t226,\n\t249,\n\t190,\n\t189,\n\t49,\n\t19,\n\t119,\n\t93,\n\t223,\n\t73,\n\t214,\n\t33,\n\t246,\n\t120,\n\t230,\n\t228,\n\t146,\n\t196,\n\t174,\n\t49,\n\t248,\n\t36,\n\t102,\n\t77,\n\t66,\n\t186,\n\t23,\n\t242,\n\t235,\n\t74,\n\t199,\n\t231,\n\t143,\n\t230,\n\t142,\n\t117,\n\t140,\n\t175,\n\t165,\n\t124,\n\t140,\n\t43,\n\t191,\n\t206,\n\t164,\n\t117,\n\t163,\n\t148,\n\t52,\n\t236,\n\t107,\n\t74,\n\t201,\n\t186,\n\t110,\n\t74,\n\t236,\n\t250,\n\t103,\n\t143,\n\t177,\n\t125,\n\t115,\n\t237,\n\t42,\n\t210,\n\t171,\n\t107,\n\t238,\n\t148,\n\t35,\n\t139,\n\t101,\n\t253,\n\t160,\n\t204,\n\t28,\n\t86,\n\t178,\n\t95,\n\t153,\n\t185,\n\t112,\n\t83,\n\t101,\n\t118,\n\t73,\n\t93,\n\t235,\n\t18,\n\t77,\n\t216,\n\t184,\n\t238,\n\t58,\n\t93,\n\t119,\n\t252,\n\t49,\n\t250,\n\t208,\n\t207,\n\t78,\n\t251,\n\t27,\n\t108,\n\t223,\n\t183,\n\t32,\n\t228,\n\t143,\n\t246,\n\t106,\n\t133,\n\t198,\n\t107,\n\t246,\n\t121,\n\t93,\n\t144,\n\t232,\n\t57,\n\t202,\n\t64,\n\t45,\n\t220,\n\t107,\n\t167,\n\t37,\n\t180,\n\t119,\n\t52,\n\t102,\n\t44,\n\t81,\n\t245,\n\t154,\n\t125,\n\t221,\n\t237,\n\t179,\n\t206,\n\t119,\n\t11,\n\t135,\n\t75,\n\t30,\n\t154,\n\t78,\n\t51,\n\t165,\n\t156,\n\t124,\n\t206,\n\t66,\n\t251,\n\t20,\n\t155,\n\t104,\n\t47,\n\t246,\n\t28,\n\t198,\n\t181,\n\t31,\n\t219,\n\t245,\n\t189,\n\t119,\n\t104,\n\t94,\n\t111,\n\t203,\n\t41,\n\t37,\n\t105,\n\t98,\n\t30,\n\t112,\n\t170,\n\t106,\n\t255,\n\t95,\n\t174,\n\t210,\n\t127,\n\t1,\n\t237,\n\t61,\n\t207,\n\t90,\n\t247,\n\t186,\n\t127,\n\t147,\n\t198,\n\t237,\n\t210,\n\t26,\n\t91,\n\t91,\n\t72,\n\t245,\n\t74,\n\t250,\n\t246,\n\t155,\n\t238,\n\t209,\n\t119,\n\t223,\n\t42,\n\t33,\n\t13,\n\t105,\n\t189,\n\t33,\n\t118,\n\t239,\n\t119,\n\t74,\n\t58,\n\t49,\n\t216,\n\t54,\n\t105,\n\t58,\n\t125,\n\t223,\n\t63,\n\t37,\n\t125,\n\t237,\n\t88,\n\t135,\n\t93,\n\t110,\n\t80,\n\t106,\n\t161,\n\t78,\n\t105,\n\t239,\n\t58,\n\t217,\n\t42,\n\t119,\n\t125,\n\t78,\n\t154,\n\t99,\n\t86,\n\t173,\n\t3,\n\t74,\n\t43,\n\t86,\n\t170,\n\t76,\n\t51,\n\t215,\n\t102,\n\t246,\n\t123,\n\t22,\n\t251,\n\t191,\n\t8,\n\t218,\n\t70,\n\t244,\n\t191,\n\t76,\n\t87,\n\t127,\n\t75,\n\t239,\n\t0,\n\t98,\n\t242,\n\t40,\n\t249,\n\t43,\n\t171,\n\t139,\n\t148,\n\t240,\n\t190,\n\t246,\n\t81,\n\t117,\n\t93,\n\t72,\n\t65,\n\t235,\n\t208,\n\t215,\n\t255,\n\t18,\n\t3,\n\t229,\n\t30,\n\t31,\n\t151,\n\t173,\n\t163,\n\t185,\n\t255,\n\t95,\n\t83,\n\t158,\n\t243,\n\t170,\n\t109,\n\t105,\n\t167,\n\t229,\n\t242,\n\t67,\n\t227,\n\t112,\n\t94,\n\t207,\n\t237,\n\t111,\n\t119,\n\t120,\n\t63,\n\t93,\n\t230,\n\t127,\n\t168,\n\t74,\n\t249,\n\t251,\n\t124,\n\t87,\n\t187,\n\t35,\n\t241,\n\t189,\n\t171,\n\t82,\n\t1,\n\t127,\n\t41,\n\t82,\n\t71,\n\t189,\n\t77,\n\t233,\n\t247,\n\t237,\n\t247,\n\t134,\n\t84,\n\t215,\n\t200,\n\t78,\n\t92,\n\t164,\n\t126,\n\t38,\n\t165,\n\t14,\n\t241,\n\t254,\n\t62,\n\t229,\n\t219,\n\t203,\n\t178,\n\t101,\n\t165,\n\t49,\n\t6,\n\t255,\n\t86,\n\t139,\n\t254,\n\t9,\n\t64,\n\t229,\n\t165,\n\t49,\n\t148,\n\t157,\n\t215,\n\t144,\n\t148,\n\t109,\n\t223,\n\t117,\n\t149,\n\t157,\n\t68,\n\t250,\n\t15,\n\t130,\n\t93,\n\t230,\n\t152,\n\t57,\n\t108,\n\t46,\n\t118,\n\t158,\n\t203,\n\t254,\n\t23,\n\t222,\n\t213,\n\t110,\n\t83,\n\t234,\n\t58,\n\t47,\n\t127,\n\t207,\n\t202,\n\t111,\n\t170,\n\t148,\n\t181,\n\t127,\n\t142,\n\t78,\n\t171,\n\t148,\n\t20,\n\t93,\n\t243,\n\t127,\n\t120,\n\t133,\n\t158,\n\t137,\n\t118,\n\t123,\n\t170,\n\t34,\n\t253,\n\t178,\n\t144,\n\t232,\n\t119,\n\t165,\n\t250,\n\t189,\n\t233,\n\t105,\n\t42,\n\t252,\n\t79,\n\t42,\n\t187,\n\t108,\n\t101,\n\t243,\n\t207,\n\t237,\n\t56,\n\t158,\n\t17,\n\t222,\n\t215,\n\t230,\n\t165,\n\t177,\n\t162,\n\t221,\n\t206,\n\t83,\n\t243,\n\t159,\n\t91,\n\t206,\n\t170,\n\t251,\n\t49,\n\t187,\n\t13,\n\t211,\n\t120,\n\t136,\n\t230,\n\t43,\n\t84,\n\t54,\n\t62,\n\t94,\n\t104,\n\t66,\n\t150,\n\t168,\n\t133,\n\t255,\n\t40,\n\t144,\n\t144,\n\t254,\n\t33,\n\t86,\n\t53,\n\t147,\n\t38,\n\t29,\n\t123,\n\t60,\n\t162,\n\t245,\n\t164,\n\t231,\n\t114,\n\t115,\n\t22,\n\t174,\n\t111,\n\t62,\n\t233,\n\t122,\n\t204,\n\t56,\n\t203,\n\t87,\n\t126,\n\t169,\n\t95,\n\t182,\n\t243,\n\t188,\n\t220,\n\t193,\n\t209,\n\t137,\n\t80,\n\t57,\n\t151,\n\t169,\n\t133,\n\t107,\n\t81,\n\t75,\n\t148,\n\t251,\n\t121,\n\t228,\n\t170,\n\t243,\n\t77,\n\t244,\n\t71,\n\t190,\n\t255,\n\t30,\n\t240,\n\t181,\n\t119,\n\t187,\n\t77,\n\t243,\n\t118,\n\t109,\n\t247,\n\t41,\n\t109,\n\t172,\n\t55,\n\t112,\n\t73,\n\t29,\n\t23,\n\t198,\n\t198,\n\t93,\n\t230,\n\t95,\n\t140,\n\t190,\n\t251,\n\t212,\n\t215,\n\t243,\n\t61,\n\t141,\n\t41,\n\t227,\n\t248,\n\t216,\n\t122,\n\t20,\n\t242,\n\t91,\n\t6,\n\t87,\n\t127,\n\t195,\n\t165,\n\t199,\n\t92,\n\t126,\n\t76,\n\t101,\n\t229,\n\t235,\n\t57,\n\t244,\n\t191,\n\t235,\n\t152,\n\t61,\n\t69,\n\t57,\n\t117,\n\t36,\n\t38,\n\t188,\n\t114,\n\t28,\n\t215,\n\t217,\n\t22,\n\t125,\n\t255,\n\t121,\n\t87,\n\t74,\n\t30,\n\t63,\n\t86,\n\t165,\n\t159,\n\t16,\n\t19,\n\t106,\n\t225,\n\t191,\n\t54,\n\t98,\n\t218,\n\t122,\n\t155,\n\t239,\n\t80,\n\t171,\n\t24,\n\t171,\n\t214,\n\t53,\n\t254,\n\t173,\n\t243,\n\t221,\n\t79,\n\t91,\n\t239,\n\t177,\n\t104,\n\t76,\n\t233,\n\t179,\n\t219,\n\t152,\n\t227,\n\t122,\n\t19,\n\t82,\n\t231,\n\t60,\n\t38,\n\t86,\n\t236,\n\t189,\n\t42,\n\t169,\n\t123,\n\t48,\n\t154,\n\t218,\n\t159,\n\t208,\n\t196,\n\t30,\n\t149,\n\t152,\n\t248,\n\t155,\n\t42,\n\t243,\n\t98,\n\t220,\n\t239,\n\t33,\n\t137,\n\t148,\n\t70,\n\t91,\n\t237,\n\t169,\n\t170,\n\t114,\n\t199,\n\t232,\n\t51,\n\t69,\n\t247,\n\t116,\n\t92,\n\t247,\n\t218,\n\t133,\n\t84,\n\t142,\n\t170,\n\t227,\n\t40,\n\t27,\n\t231,\n\t98,\n\t108,\n\t23,\n\t101,\n\t227,\n\t168,\n\t178,\n\t125,\n\t214,\n\t213,\n\t214,\n\t171,\n\t212,\n\t91,\n\t217,\n\t188,\n\t248,\n\t164,\n\t238,\n\t116,\n\t203,\n\t228,\n\t205,\n\t151,\n\t191,\n\t166,\n\t164,\n\t201,\n\t250,\n\t149,\n\t147,\n\t126,\n\t85,\n\t249,\n\t207,\n\t13,\n\t95,\n\t85,\n\t250,\n\t49,\n\t233,\n\t148,\n\t213,\n\t115,\n\t200,\n\t111,\n\t29,\n\t249,\n\t78,\n\t73,\n\t191,\n\t142,\n\t184,\n\t109,\n\t73,\n\t177,\n\t157,\n\t36,\n\t185,\n\t245,\n\t192,\n\t37,\n\t255,\n\t3\n];\nvar trieData = {\n\ttype: type,\n\tdata: data\n};\n\nvar categories = useData.categories,\n    decompositions = useData.decompositions;\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar stateMachine = new dfa(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions[codepoint]) {\n        var decomposed = decompositions[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper);\n\nUniversalShaper.zeroMarkWidths = 'BEFORE_GPOS';\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(stateMachine.match(glyphs.map(useCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i = start; _i < start + limit; _i++) {\n      glyphs[_i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var glyph = _step2.value;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = _createForOfIteratorHelperLoose(glyphs), _step3; !(_step3 = _iterator3()).done;) {\n    var glyph = _step3.value;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = _createForOfIteratorHelperLoose(glyphs), _step4; !(_step4 = _iterator4()).done;) {\n    var glyph = _step4.value;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {\n      }\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {\n  }\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(script), _step; !(_step = _iterator()).done;) {\n    var s = _step.value;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GSUBProcessor.prototype;\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    var _this = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _this$glyphs;\n\n            var sequence = table.sequences.get(_index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = _createForOfIteratorHelperLoose(table.ligatureSets.get(_index3)), _step; !(_step = _iterator()).done;) {\n            var ligature = _step.value;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = _createForOfIteratorHelperLoose(matched), _step2; !(_step2 = _iterator2()).done;) {\n              var _index4 = _step2.value;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(matched), _step3; !(_step3 = _iterator3()).done;) {\n              var matchIndex = _step3.value;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i = idx; _i < this.glyphs.length; _i++) {\n                if (this.glyphs[_i].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i2 = matched.length - 1; _i2 >= 0; _i2--) {\n              this.glyphs.splice(matched[_i2], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"GSUB lookupType \" + lookupType + \" is not supported\");\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GPOSProcessor.prototype;\n\n  _proto.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n\n              for (var _iterator = _createForOfIteratorHelperLoose(set), _step; !(_step = _iterator()).done;) {\n                var _pair = _step.value;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {\n          }\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {\n          }\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"Unsupported GPOS table: \" + lookupType);\n    }\n  };\n\n  _proto.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  _proto.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  _proto.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  _proto.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = /*#__PURE__*/function () {\n  function OTLayoutEngine(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  var _proto = OTLayoutEngine.prototype;\n\n  _proto.setup = function setup(glyphRun) {\n    var _this = this;\n\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  _proto.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = /*#__PURE__*/function () {\n  function LayoutEngine(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  var _proto = LayoutEngine.prototype;\n\n  _proto.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(string), _step; !(_step = _iterator()).done;) {\n          var glyph = _step.value;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n\n        script = forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  _proto.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.engine.stringsForGlyph(gid)), _step3; !(_step3 = _iterator3()).done;) {\n        var string = _step3.value;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  var _proto = Path.prototype;\n\n  _proto.toFunction = function toFunction() {\n    var _this = this;\n\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  ;\n\n  _proto.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return \"\" + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  }\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  ;\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  _proto.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.commands), _step; !(_step = _iterator()).done;) {\n      var c = _step.value;\n      var args = [];\n\n      for (var i = 0; i < c.args.length; i += 2) {\n        var _fn = fn(c.args[i], c.args[i + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  }\n  /**\n   * Transforms the path by the given matrix.\n   */\n  ;\n\n  _proto.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  }\n  /**\n   * Translates the path by the given offset.\n   */\n  ;\n\n  _proto.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  ;\n\n  _proto.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n   * Scales the path.\n   */\n  ;\n\n  _proto.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) {\n      scaleY = scaleX;\n    }\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  _createClass(Path, [{\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(this.commands), _step2; !(_step2 = _iterator2()).done;) {\n          var command = _step2.value;\n\n          for (var i = 0; i < command.args.length; i += 2) {\n            cbox.addPoint(command.args[i], command.args[i + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.commands), _step3; !(_step3 = _iterator3()).done;) {\n        var c = _step3.value;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n\n  return Path;\n}();\n\nvar _loop = function _loop() {\n  var command = _arr[_i];\n\n  Path.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i = 0, _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']; _i < _arr.length; _i++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$1;\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\nvar Glyph = (_class$1 = /*#__PURE__*/function () {\n  function Glyph(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  var _proto = Glyph.prototype;\n\n  _proto._getPath = function _getPath() {\n    return new Path();\n  };\n\n  _proto._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  _proto._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  _proto._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  _proto._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _this$_getTableMetric.advance,\n        leftBearing = _this$_getTableMetric.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _this$_getTableMetric2.advance,\n          topBearing = _this$_getTableMetric2.bearing;\n    } else {\n      var os2;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  ;\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  _proto.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  ;\n\n  _proto._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  ;\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  _proto.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  _createClass(Glyph, [{\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n\n  return Glyph;\n}(), (_applyDecoratedDescriptor(_class$1.prototype, \"cbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"cbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"bbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"path\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"path\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceWidth\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceWidth\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceHeight\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceHeight\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"name\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"name\"), _class$1.prototype)), _class$1);\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n\nvar Point$1 = /*#__PURE__*/function () {\n  function Point(onCurve, endContour, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  var _proto = Point.prototype;\n\n  _proto.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto2 = TTFGlyph.prototype;\n\n  // Parses just the glyph header and returns the bounding box\n  _proto2._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n  ;\n\n  _proto2._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  ;\n\n  _proto2._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  _proto2._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT$1) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point$1(!!(flag & ON_CURVE$1), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR$1, flag & SAME_X$1);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR$1, flag & SAME_Y$1);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  _proto2._decodeComposite = function _decodeComposite(glyph, stream, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point$1(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  _proto2._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _this$_metrics = this._metrics,\n        advanceWidth = _this$_metrics.advanceWidth,\n        advanceHeight = _this$_metrics.advanceHeight,\n        leftBearing = _this$_metrics.leftBearing,\n        topBearing = _this$_metrics.topBearing;\n    return [new Point$1(false, true, glyph.xMin - leftBearing, 0), new Point$1(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point$1(false, true, 0, glyph.yMax + topBearing), new Point$1(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n  ;\n\n  _proto2._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = _createForOfIteratorHelperLoose(glyph.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point$1(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  _proto2._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n  ;\n\n  _proto2._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point$1(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = CFFGlyph.prototype;\n\n  _proto._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  _proto.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  _proto._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs;\n    var usedSubrs;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              {\n                // hvcurveto\n                var _phase = op === 31;\n\n                while (stack.length >= 4) {\n                  if (_phase) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                  } else {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                  }\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                  _phase = !_phase;\n                }\n\n                break;\n              }\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(\"Unknown op: 12 \" + op);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"Unknown op: \" + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = /*#__PURE__*/function (_TTFGlyph) {\n  _inheritsLoose(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    return _TTFGlyph.apply(this, arguments) || this;\n  }\n\n  var _proto = SBIXGlyph.prototype;\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  _proto.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  _proto.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = COLRGlyph.prototype;\n\n  _proto._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  ;\n\n  _proto.render = function render(ctx, size) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.layers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          glyph = _step$value.glyph,\n          color = _step$value.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  _createClass(COLRGlyph, [{\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = /*#__PURE__*/function () {\n  function GlyphVariationProcessor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  var _proto = GlyphVariationProcessor.prototype;\n\n  _proto.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  _proto.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  _proto.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  _proto.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  _proto.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  ;\n\n  _proto.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  _proto.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  _proto.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  _proto.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  ;\n\n  _proto.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  _proto.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar resolved = Promise.resolve();\n\nvar Subset = /*#__PURE__*/function () {\n  function Subset(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  var _proto = Subset.prototype;\n\n  _proto.includeGlyph = function includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  _proto.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}();\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {}\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = /*#__PURE__*/function () {\n  function TTFGlyphEncoder() {}\n\n  var _proto = TTFGlyphEncoder.prototype;\n\n  _proto.encodeSimple = function encodeSimple(path, instructions) {\n    if (instructions === void 0) {\n      instructions = [];\n    }\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  _proto._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  var _proto = TTFSubset.prototype;\n\n  _proto._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(glyf.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  var _proto = CFFSubset.prototype;\n\n  _proto.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.glyphs), _step; !(_step = _iterator()).done;) {\n      var gid = _step.value;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  _proto.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  _proto.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var gid = _step2.value;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  _proto.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(this.glyphs), _step3; !(_step3 = _iterator3()).done;) {\n      var gid = _step3.value;\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  _proto.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (var _i = 0, _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\nvar TTFFont = (_class = /*#__PURE__*/function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream, variationCoords) {\n    if (variationCoords === void 0) {\n      variationCoords = null;\n    }\n\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  var _proto = TTFFont.prototype;\n\n  _proto.setDefaultLanguage = function setDefaultLanguage(lang) {\n    if (lang === void 0) {\n      lang = null;\n    }\n\n    this.defaultLanguage = lang;\n  };\n\n  _proto._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(\"Error decoding table \" + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  ;\n\n  _proto.getName = function getName(key, lang) {\n    if (lang === void 0) {\n      lang = this.defaultLanguage || fontkit.defaultLanguage;\n    }\n\n    var record = this.name && this.name.records[key];\n\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n\n    return null;\n  }\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  ;\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  ;\n\n  _proto.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  _proto.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  ;\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  ;\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  _proto._getBaseGlyph = function _getBaseGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.getGlyph = function getGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  ;\n\n  _proto.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  ;\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  _proto.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  };\n\n  // Standardized format plugin API\n  _proto.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  _createClass(TTFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.fvar.axis), _step; !(_step = _iterator()).done;) {\n        var axis = _step.value;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.fvar.instance), _step2; !(_step2 = _iterator2()).done;) {\n        var instance = _step2.value;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n\n  return TTFFont;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"bbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_cmapProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_cmapProcessor\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"characterSet\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"characterSet\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_layoutEngine\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_layoutEngine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"variationAxes\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"variationAxes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"namedVariations\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"namedVariations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_variationProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_variationProcessor\"), _class.prototype)), _class);\n\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nvar WOFFFont = /*#__PURE__*/function (_TTFFont) {\n  _inheritsLoose(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    return _TTFFont.apply(this, arguments) || this;\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  var _proto = WOFFFont.prototype;\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = /*#__PURE__*/function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  var _proto = TrueTypeCollection.prototype;\n\n  _proto.getFont = function getFont(name) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.header.offsets), _step; !(_step = _iterator()).done;) {\n      var offset = _step.value;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(TrueTypeCollection, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.offsets), _step2; !(_step2 = _iterator2()).done;) {\n        var offset = _step2.value;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nnew r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = /*#__PURE__*/function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(header.map.typeList.types), _step; !(_step = _iterator()).done;) {\n      var type = _step.value;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.map.typeList.types), _step2; !(_step2 = _iterator2()).done;) {\n      var type = _step2.value;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(type.refList), _step3; !(_step3 = _iterator3()).done;) {\n        var ref = _step3.value;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  var _proto = DFont.prototype;\n\n  _proto.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step4; !(_step4 = _iterator4()).done;) {\n      var ref = _step4.value;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(DFont, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step5; !(_step5 = _iterator5()).done;) {\n        var ref = _step5.value;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return DFont;\n}();\n\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\n\nexport { fontkit as default };\n"],"mappings":"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AAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,QAAQ;EAChB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,QAAQ;EAChB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,QAAQ;EAChB,MAAM,EAAE,KAAK;EACb,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,IAAIC,UAAU,GAAG,IAAItL,CAAC,CAAC0D,MAAM,CAAC;EAC5ByD,UAAU,EAAEnH,CAAC,CAAC4D,MAAM;EACpBwD,UAAU,EAAEpH,CAAC,CAAC4D,MAAM;EACpBsH,UAAU,EAAElL,CAAC,CAAC4D,MAAM;EACpB2H,MAAM,EAAEvL,CAAC,CAAC4D,MAAM;EAChBhC,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;EAChB4H,MAAM,EAAE,IAAIxL,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAI5D,CAAC,CAACyL,MAAM,CAAC,QAAQ,EAAE,UAAU7F,CAAC,EAAE;IAClE,OAAOqF,WAAW,CAACrF,CAAC,CAACuB,UAAU,EAAEvB,CAAC,CAACwB,UAAU,EAAExB,CAAC,CAACsF,UAAU,CAAC;EAC9D,CAAC,CAAC,EAAE;IACF/F,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE,qBAAqB;IACjCC,SAAS,EAAE;EACb,CAAC;AACH,CAAC,CAAC;AACF,IAAIC,aAAa,GAAG,IAAI5L,CAAC,CAAC0D,MAAM,CAAC;EAC/B9B,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;EAChBiI,GAAG,EAAE,IAAI7L,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAI5D,CAAC,CAACyL,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;IAC9DtG,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC;AACH,CAAC,CAAC;AACF,IAAII,SAAS,GAAG,IAAI9L,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC9C,CAAC,EAAE;IACDmI,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;IACfoI,YAAY,EAAEhM,CAAC,CAAC4D,MAAM;IACtBqI,OAAO,EAAE,IAAIjM,CAAC,CAACmD,KAAK,CAACmI,UAAU,EAAE,OAAO;EAC1C,CAAC;EACD,CAAC,EAAE;IACDS,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;IACfoI,YAAY,EAAEhM,CAAC,CAAC4D,MAAM;IACtBqI,OAAO,EAAE,IAAIjM,CAAC,CAACmD,KAAK,CAACmI,UAAU,EAAE,OAAO,CAAC;IACzCY,YAAY,EAAElM,CAAC,CAAC4D,MAAM;IACtBuI,QAAQ,EAAE,IAAInM,CAAC,CAACmD,KAAK,CAACyI,aAAa,EAAE,cAAc;EACrD;AACF,CAAC,CAAC;AACF,IAAIQ,KAAK,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB;AAAE;AACrH,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI;AAAE;AACnH,iBAAiB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,YAAY,EAAE,uBAAuB,EAAE,eAAe,EAAE,kBAAkB,CAAC;AAEtIN,SAAS,CAACO,OAAO,GAAG,UAAUC,MAAM,EAAE;EACpC,IAAIL,OAAO,GAAG,CAAC,CAAC;EAEhB,KAAK,IAAIM,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACgM,OAAO,CAAC,EAAEO,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;IACvG,IAAIC,MAAM,GAAGF,KAAK,CAAC/J,KAAK;IACxB;IACA,IAAI8C,QAAQ,GAAG8F,SAAS,CAACqB,MAAM,CAACvF,UAAU,CAAC,CAACuF,MAAM,CAACxB,UAAU,CAAC;IAE9D,IAAI3F,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC4G,QAAQ,IAAI,IAAI,IAAIO,MAAM,CAACxB,UAAU,IAAI,MAAM,EAAE;MAC5E3F,QAAQ,GAAG,IAAI,CAAC4G,QAAQ,CAACO,MAAM,CAACxB,UAAU,GAAG,MAAM,CAAC,CAACW,GAAG;IAC1D;IAEA,IAAItG,QAAQ,IAAI,IAAI,EAAE;MACpBA,QAAQ,GAAGmH,MAAM,CAACvF,UAAU,GAAG,GAAG,GAAGuF,MAAM,CAACxB,UAAU;IACxD,CAAC,CAAC;;IAGF,IAAI5I,GAAG,GAAGoK,MAAM,CAACnB,MAAM,IAAI,GAAG,GAAG,cAAc,GAAGa,KAAK,CAACM,MAAM,CAACnB,MAAM,CAAC,IAAImB,MAAM,CAACnB,MAAM;IAEvF,IAAIU,OAAO,CAAC3J,GAAG,CAAC,IAAI,IAAI,EAAE;MACxB2J,OAAO,CAAC3J,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB;IAEA,IAAIqK,GAAG,GAAGV,OAAO,CAAC3J,GAAG,CAAC;IAEtB,IAAIoK,MAAM,CAACnB,MAAM,IAAI,GAAG,EAAE;MACxBoB,GAAG,GAAGA,GAAG,CAACD,MAAM,CAACnB,MAAM,CAAC,KAAKoB,GAAG,CAACD,MAAM,CAACnB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD;IAEA,IAAI,OAAOmB,MAAM,CAAClB,MAAM,KAAK,QAAQ,IAAI,OAAOmB,GAAG,CAACpH,QAAQ,CAAC,KAAK,QAAQ,EAAE;MAC1EoH,GAAG,CAACpH,QAAQ,CAAC,GAAGmH,MAAM,CAAClB,MAAM;IAC/B;EACF;EAEA,IAAI,CAACS,OAAO,GAAGA,OAAO;AACxB,CAAC;AAEDH,SAAS,CAACc,SAAS,GAAG,YAAY;EAChC,IAAIzJ,KAAK,CAAC0J,OAAO,CAAC,IAAI,CAACZ,OAAO,CAAC,EAAE;EACjC,IAAI,CAACzE,OAAO,GAAG,CAAC;EAChB,IAAIyE,OAAO,GAAG,EAAE;EAEhB,KAAK,IAAI3J,GAAG,IAAI,IAAI,CAAC2J,OAAO,EAAE;IAC5B,IAAIa,GAAG,GAAG,IAAI,CAACb,OAAO,CAAC3J,GAAG,CAAC;IAC3B,IAAIA,GAAG,KAAK,cAAc,EAAE;IAC5B2J,OAAO,CAAC/K,IAAI,CAAC;MACXiG,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC;MACb8D,UAAU,EAAE,KAAK;MACjBK,MAAM,EAAEa,KAAK,CAACW,OAAO,CAACzK,GAAG,CAAC;MAC1BV,MAAM,EAAEoL,MAAM,CAACC,UAAU,CAACH,GAAG,CAACI,EAAE,EAAE,SAAS,CAAC;MAC5C1B,MAAM,EAAEsB,GAAG,CAACI;IACd,CAAC,CAAC;IAEF,IAAI5K,GAAG,KAAK,gBAAgB,EAAE;MAC5B2J,OAAO,CAAC/K,IAAI,CAAC;QACXiG,UAAU,EAAE,CAAC;QACbC,UAAU,EAAE,CAAC;QACb8D,UAAU,EAAE,CAAC;QACbK,MAAM,EAAEa,KAAK,CAACW,OAAO,CAACzK,GAAG,CAAC;QAC1BV,MAAM,EAAEkL,GAAG,CAACI,EAAE,CAACtL,MAAM;QACrB4J,MAAM,EAAEsB,GAAG,CAACI;MACd,CAAC,CAAC;IACJ;EACF;EAEA,IAAI,CAACjB,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACF,KAAK,GAAGE,OAAO,CAACrK,MAAM;EAC3B,IAAI,CAACoK,YAAY,GAAGF,SAAS,CAACqB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AACvD,CAAC;AAED,IAAIC,GAAG,GAAG,IAAIpN,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EACxCyJ,MAAM,EAAE;IACNC,aAAa,EAAEtN,CAAC,CAAC+D,KAAK;IACtB;IACAwJ,aAAa,EAAEvN,CAAC,CAAC4D,MAAM;IACvB;IACA4J,YAAY,EAAExN,CAAC,CAAC4D,MAAM;IACtB;IACA6J,MAAM,EAAE,IAAIzN,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC4D,MAAM,EAAE;IAAC;IAClC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IACnG8J,eAAe,EAAE1N,CAAC,CAAC+D,KAAK;IACxB;IACA4J,eAAe,EAAE3N,CAAC,CAAC+D,KAAK;IACxB;IACA6J,iBAAiB,EAAE5N,CAAC,CAAC+D,KAAK;IAC1B;IACA8J,iBAAiB,EAAE7N,CAAC,CAAC+D,KAAK;IAC1B;IACA+J,iBAAiB,EAAE9N,CAAC,CAAC+D,KAAK;IAC1B;IACAgK,iBAAiB,EAAE/N,CAAC,CAAC+D,KAAK;IAC1B;IACAiK,mBAAmB,EAAEhO,CAAC,CAAC+D,KAAK;IAC5B;IACAkK,mBAAmB,EAAEjO,CAAC,CAAC+D,KAAK;IAC5B;IACAmK,cAAc,EAAElO,CAAC,CAAC+D,KAAK;IACvB;IACAoK,kBAAkB,EAAEnO,CAAC,CAAC+D,KAAK;IAC3B;IACAqK,YAAY,EAAEpO,CAAC,CAAC+D,KAAK;IACrB;IACAsK,MAAM,EAAE,IAAIrO,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,EAAE,CAAC;IAChC;IACA4J,WAAW,EAAE,IAAItO,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,CAAC,CAAC;IACrCoK,QAAQ,EAAE,IAAIvO,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;IACzB;IACA+C,WAAW,EAAE,IAAIxO,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC4D,MAAM,EAAE;IAAC;IACvC,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACpH6K,gBAAgB,EAAEzO,CAAC,CAAC4D,MAAM;IAC1B;IACA8K,eAAe,EAAE1O,CAAC,CAAC4D,MAAM,CAAC;EAE5B,CAAC;EACD;EACA,CAAC,EAAE,CAAC,CAAC;EACL,CAAC,EAAE;IACD+K,YAAY,EAAE3O,CAAC,CAAC+D,KAAK;IACrB6K,aAAa,EAAE5O,CAAC,CAAC+D,KAAK;IACtB8K,WAAW,EAAE7O,CAAC,CAAC+D,KAAK;IACpB+K,SAAS,EAAE9O,CAAC,CAAC4D,MAAM;IACnBmL,UAAU,EAAE/O,CAAC,CAAC4D,MAAM;IACpBoL,aAAa,EAAE,IAAIhP,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,CAAC;EACxC,CAAC;EACD,CAAC,EAAE;IACD;IACAwK,YAAY,EAAE3O,CAAC,CAAC+D,KAAK;IACrB6K,aAAa,EAAE5O,CAAC,CAAC+D,KAAK;IACtB8K,WAAW,EAAE7O,CAAC,CAAC+D,KAAK;IACpB+K,SAAS,EAAE9O,CAAC,CAAC4D,MAAM;IACnBmL,UAAU,EAAE/O,CAAC,CAAC4D,MAAM;IACpBoL,aAAa,EAAE,IAAIhP,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,CAAC,CAAC;IACvC8K,OAAO,EAAEjP,CAAC,CAAC+D,KAAK;IAChBmL,SAAS,EAAElP,CAAC,CAAC+D,KAAK;IAClBoL,WAAW,EAAEnP,CAAC,CAAC4D,MAAM;IACrBwL,SAAS,EAAEpP,CAAC,CAAC4D,MAAM;IACnByL,UAAU,EAAErP,CAAC,CAAC4D;EAChB,CAAC;EACD,CAAC,EAAE;IACD+K,YAAY,EAAE3O,CAAC,CAAC+D,KAAK;IACrB6K,aAAa,EAAE5O,CAAC,CAAC+D,KAAK;IACtB8K,WAAW,EAAE7O,CAAC,CAAC+D,KAAK;IACpB+K,SAAS,EAAE9O,CAAC,CAAC4D,MAAM;IACnBmL,UAAU,EAAE/O,CAAC,CAAC4D,MAAM;IACpBoL,aAAa,EAAE,IAAIhP,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,CAAC,CAAC;IACvC8K,OAAO,EAAEjP,CAAC,CAAC+D,KAAK;IAChBmL,SAAS,EAAElP,CAAC,CAAC+D,KAAK;IAClBoL,WAAW,EAAEnP,CAAC,CAAC4D,MAAM;IACrBwL,SAAS,EAAEpP,CAAC,CAAC4D,MAAM;IACnByL,UAAU,EAAErP,CAAC,CAAC4D,MAAM;IACpB0L,uBAAuB,EAAEtP,CAAC,CAAC4D,MAAM;IACjC2L,uBAAuB,EAAEvP,CAAC,CAAC4D;EAC7B;AACF,CAAC,CAAC;AACF,IAAI4L,QAAQ,GAAGpC,GAAG,CAACoC,QAAQ;AAC3BA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC;AAEvC,IAAIC,IAAI,GAAG,IAAIzP,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC0P,OAAO,EAAE;EAC1CrC,MAAM,EAAE;IACN;IACAsC,WAAW,EAAE3P,CAAC,CAAC0P,OAAO;IACtB;IACAE,iBAAiB,EAAE5P,CAAC,CAAC+D,KAAK;IAC1B;IACA8L,kBAAkB,EAAE7P,CAAC,CAAC+D,KAAK;IAC3B;IACA+L,YAAY,EAAE9P,CAAC,CAACmE,MAAM;IACtB;IACA4L,YAAY,EAAE/P,CAAC,CAACmE,MAAM;IACtB;IACA6L,YAAY,EAAEhQ,CAAC,CAACmE,MAAM;IACtB;IACA8L,WAAW,EAAEjQ,CAAC,CAACmE,MAAM;IACrB;IACA+L,WAAW,EAAElQ,CAAC,CAACmE,MAAM,CAAC;EAExB,CAAC;EACD,CAAC,EAAE,CAAC,CAAC;EACL;EACA,CAAC,EAAE;IACDgM,cAAc,EAAEnQ,CAAC,CAAC4D,MAAM;IACxBwM,cAAc,EAAE,IAAIpQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,gBAAgB,CAAC;IACvDyM,KAAK,EAAE,IAAIrQ,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACyL,MAAM,CAACzL,CAAC,CAAC0E,KAAK,CAAC;EAC1C,CAAC;EACD,GAAG,EAAE;IACHyL,cAAc,EAAEnQ,CAAC,CAAC4D,MAAM;IACxB0M,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,gBAAgB;EAChD,CAAC;EACD,CAAC,EAAE,CAAC,CAAC;EACL;EACA,CAAC,EAAE;IACD6L,GAAG,EAAE,IAAIvQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,UAAUyB,CAAC,EAAE;MACtC,OAAOA,CAAC,CAACoE,MAAM,CAACE,IAAI,CAACC,SAAS;IAChC,CAAC;EACH;AACF,CAAC,CAAC;AAEF,IAAIqG,GAAG,GAAG,IAAIxQ,CAAC,CAAC0D,MAAM,CAAC;EACrB+M,aAAa,EAAE,IAAIzQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC+D,KAAK;AACpC,CAAC,CAAC;;AAEF;AACA;;AAEA,IAAI2M,IAAI,GAAG,IAAI1Q,CAAC,CAAC0D,MAAM,CAAC;EACtBiN,YAAY,EAAE,IAAI3Q,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK;AACnC,CAAC,CAAC;AAEF,IAAIkM,IAAI,GAAG,IAAI5Q,CAAC,CAACsF,eAAe,CAAC,uBAAuB,EAAE;EACxD,CAAC,EAAE;IACDgL,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM;EAC/B,CAAC;EACD,CAAC,EAAE;IACD0M,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM;EAC/B;AACF,CAAC,CAAC;AAEFyM,IAAI,CAACvE,OAAO,GAAG,YAAY;EACzB,IAAI,IAAI,CAAC7E,OAAO,KAAK,CAAC,EAAE;IACtB,KAAK,IAAI7F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2O,OAAO,CAAC1O,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAI,CAAC2O,OAAO,CAAC3O,CAAC,CAAC,KAAK,CAAC;IACvB;EACF;AACF,CAAC;AAEDiP,IAAI,CAAChE,SAAS,GAAG,YAAY;EAC3B,IAAI,IAAI,CAACpF,OAAO,KAAK,CAAC,EAAE;IACtB,KAAK,IAAI7F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2O,OAAO,CAAC1O,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAI,CAAC2O,OAAO,CAAC3O,CAAC,CAAC,MAAM,CAAC;IACxB;EACF;AACF,CAAC;AAED,IAAIkP,IAAI,GAAG,IAAI7Q,CAAC,CAAC0D,MAAM,CAAC;EACtBoN,mBAAmB,EAAE,IAAI9Q,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK;AAC1C,CAAC,CAAC;AAEF,IAAIqM,IAAI,GAAG,IAAI/Q,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACgN,MAAM,CAAC,CAAC,CAAC;AAEtC,IAAIgE,QAAQ,GAAG,aAAa,YAAY;EACtC,SAASA,QAAQA,CAAC7L,IAAI,EAAE;IACtB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAI8L,MAAM,GAAGD,QAAQ,CAACE,SAAS;EAE/BD,MAAM,CAACE,aAAa,GAAG,SAASA,aAAaA,CAACC,GAAG,EAAE;IACjD,OAAOA,GAAG,IAAI,CAACA,GAAG,CAACC,OAAO,EAAE;MAC1BD,GAAG,GAAGA,GAAG,CAACpH,MAAM;IAClB;IAEA,OAAOoH,GAAG,GAAGA,GAAG,CAAC5J,OAAO,GAAG,CAAC,CAAC;EAC/B,CAAC;EAEDyJ,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC9C,IAAIxC,OAAO,GAAG,IAAI,CAAC2J,aAAa,CAACnH,MAAM,CAAC;IACxC,IAAI+B,KAAK,GAAGvE,OAAO,IAAI,CAAC,GAAG8E,MAAM,CAACiF,YAAY,CAAC,CAAC,GAAGjF,MAAM,CAACkF,YAAY,CAAC,CAAC;IAExE,IAAIzF,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,EAAE;IACX;IAEA,IAAI0F,OAAO,GAAGnF,MAAM,CAACoF,SAAS,CAAC,CAAC;IAChC,IAAIC,UAAU;IAEd,IAAIF,OAAO,KAAK,CAAC,EAAE;MACjBE,UAAU,GAAG3R,CAAC,CAAC0E,KAAK;IACtB,CAAC,MAAM,IAAI+M,OAAO,KAAK,CAAC,EAAE;MACxBE,UAAU,GAAG3R,CAAC,CAAC4D,MAAM;IACvB,CAAC,MAAM,IAAI6N,OAAO,KAAK,CAAC,EAAE;MACxBE,UAAU,GAAG3R,CAAC,CAACwE,MAAM;IACvB,CAAC,MAAM,IAAIiN,OAAO,KAAK,CAAC,EAAE;MACxBE,UAAU,GAAG3R,CAAC,CAACmE,MAAM;IACvB,CAAC,MAAM;MACL,MAAM,IAAI7C,KAAK,CAAC,+BAA+B,GAAGmQ,OAAO,GAAG,GAAG,GAAGnF,MAAM,CAACsF,GAAG,CAAC;IAC/E;IAEA,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAIC,QAAQ,GAAGxF,MAAM,CAACsF,GAAG,GAAG,CAAC7F,KAAK,GAAG,CAAC,IAAI0F,OAAO,GAAG,CAAC;IACrD,IAAIM,KAAK,GAAGJ,UAAU,CAACL,MAAM,CAAChF,MAAM,CAAC;IAErC,KAAK,IAAI3K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoK,KAAK,EAAEpK,CAAC,EAAE,EAAE;MAC9B,IAAIqQ,GAAG,GAAGL,UAAU,CAACL,MAAM,CAAChF,MAAM,CAAC;MAEnC,IAAI,IAAI,CAACnH,IAAI,IAAI,IAAI,EAAE;QACrB,IAAIyM,GAAG,GAAGtF,MAAM,CAACsF,GAAG;QACpBtF,MAAM,CAACsF,GAAG,GAAGE,QAAQ,GAAGC,KAAK;QAC7B/H,MAAM,CAACpI,MAAM,GAAGoQ,GAAG,GAAGD,KAAK;QAC3BF,GAAG,CAAC3Q,IAAI,CAAC,IAAI,CAACiE,IAAI,CAACmM,MAAM,CAAChF,MAAM,EAAEtC,MAAM,CAAC,CAAC;QAC1CsC,MAAM,CAACsF,GAAG,GAAGA,GAAG;MAClB,CAAC,MAAM;QACLC,GAAG,CAAC3Q,IAAI,CAAC;UACP+Q,MAAM,EAAEH,QAAQ,GAAGC,KAAK;UACxBnQ,MAAM,EAAEoQ,GAAG,GAAGD;QAChB,CAAC,CAAC;MACJ;MAEAA,KAAK,GAAGC,GAAG;IACb;IAEA1F,MAAM,CAACsF,GAAG,GAAGE,QAAQ,GAAGC,KAAK;IAC7B,OAAOF,GAAG;EACZ,CAAC;EAEDZ,MAAM,CAAC9D,IAAI,GAAG,SAASA,IAAIA,CAAC+E,GAAG,EAAElI,MAAM,EAAE;IACvC,IAAImD,IAAI,GAAG,CAAC;IAEZ,IAAI+E,GAAG,CAACtQ,MAAM,KAAK,CAAC,EAAE;MACpB,OAAOuL,IAAI;IACb;IAEA,IAAIhI,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAInF,CAAC,CAACgN,MAAM,CAAC,CAAC,CAAC,CAAC;;IAExC,IAAIiF,MAAM,GAAG,CAAC;IAEd,KAAK,IAAItQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuQ,GAAG,CAACtQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIwQ,IAAI,GAAGD,GAAG,CAACvQ,CAAC,CAAC;MACjBsQ,MAAM,IAAI9M,IAAI,CAACgI,IAAI,CAACgF,IAAI,EAAEnI,MAAM,CAAC;IACnC;IAEA,IAAI2H,UAAU;IAEd,IAAIM,MAAM,IAAI,IAAI,EAAE;MAClBN,UAAU,GAAG3R,CAAC,CAAC0E,KAAK;IACtB,CAAC,MAAM,IAAIuN,MAAM,IAAI,MAAM,EAAE;MAC3BN,UAAU,GAAG3R,CAAC,CAAC4D,MAAM;IACvB,CAAC,MAAM,IAAIqO,MAAM,IAAI,QAAQ,EAAE;MAC7BN,UAAU,GAAG3R,CAAC,CAACwE,MAAM;IACvB,CAAC,MAAM,IAAIyN,MAAM,IAAI,UAAU,EAAE;MAC/BN,UAAU,GAAG3R,CAAC,CAACmE,MAAM;IACvB,CAAC,MAAM;MACL,MAAM,IAAI7C,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA6L,IAAI,IAAI,CAAC,GAAGwE,UAAU,CAACxE,IAAI,CAAC,CAAC,IAAI+E,GAAG,CAACtQ,MAAM,GAAG,CAAC,CAAC;IAChDuL,IAAI,IAAI8E,MAAM,GAAG,CAAC;IAClB,OAAO9E,IAAI;EACb,CAAC;EAED8D,MAAM,CAACmB,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAE4F,GAAG,EAAElI,MAAM,EAAE;IACnDsC,MAAM,CAAC+F,aAAa,CAACH,GAAG,CAACtQ,MAAM,CAAC;IAEhC,IAAIsQ,GAAG,CAACtQ,MAAM,KAAK,CAAC,EAAE;MACpB;IACF;IAEA,IAAIuD,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAInF,CAAC,CAACgN,MAAM,CAAC,CAAC,CAAC,CAAC;;IAExC,IAAIsF,KAAK,GAAG,EAAE;IACd,IAAIL,MAAM,GAAG,CAAC;IAEd,KAAK,IAAI1F,SAAS,GAAGtM,+BAA+B,CAACiS,GAAG,CAAC,EAAE1F,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MAC9F,IAAI0F,IAAI,GAAG3F,KAAK,CAAC/J,KAAK;MACtB,IAAI8P,CAAC,GAAGpN,IAAI,CAACgI,IAAI,CAACgF,IAAI,EAAEnI,MAAM,CAAC;MAC/BsI,KAAK,CAACpR,IAAI,CAACqR,CAAC,CAAC;MACbN,MAAM,IAAIM,CAAC;IACb;IAEA,IAAIZ,UAAU;IAEd,IAAIM,MAAM,IAAI,IAAI,EAAE;MAClBN,UAAU,GAAG3R,CAAC,CAAC0E,KAAK;IACtB,CAAC,MAAM,IAAIuN,MAAM,IAAI,MAAM,EAAE;MAC3BN,UAAU,GAAG3R,CAAC,CAAC4D,MAAM;IACvB,CAAC,MAAM,IAAIqO,MAAM,IAAI,QAAQ,EAAE;MAC7BN,UAAU,GAAG3R,CAAC,CAACwE,MAAM;IACvB,CAAC,MAAM,IAAIyN,MAAM,IAAI,UAAU,EAAE;MAC/BN,UAAU,GAAG3R,CAAC,CAACmE,MAAM;IACvB,CAAC,MAAM;MACL,MAAM,IAAI7C,KAAK,CAAC,wBAAwB,CAAC;IAC3C,CAAC,CAAC;;IAGFgL,MAAM,CAACkG,UAAU,CAACb,UAAU,CAACxE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEtC8E,MAAM,GAAG,CAAC;IACVN,UAAU,CAACS,MAAM,CAAC9F,MAAM,EAAE2F,MAAM,CAAC;IAEjC,KAAK,IAAIQ,EAAE,GAAG,CAAC,EAAEC,MAAM,GAAGJ,KAAK,EAAEG,EAAE,GAAGC,MAAM,CAAC9Q,MAAM,EAAE6Q,EAAE,EAAE,EAAE;MACzD,IAAItF,IAAI,GAAGuF,MAAM,CAACD,EAAE,CAAC;MACrBR,MAAM,IAAI9E,IAAI;MACdwE,UAAU,CAACS,MAAM,CAAC9F,MAAM,EAAE2F,MAAM,CAAC;IACnC;IAEA,KAAK,IAAIU,UAAU,GAAG1S,+BAA+B,CAACiS,GAAG,CAAC,EAAEU,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;MAClG,IAAIoG,KAAK,GAAGD,MAAM,CAACnQ,KAAK;MACxB0C,IAAI,CAACiN,MAAM,CAAC9F,MAAM,EAAEuG,KAAK,EAAE7I,MAAM,CAAC;IACpC;IAEA;EACF,CAAC;EAED,OAAOgH,QAAQ;AACjB,CAAC,CAAC,CAAC;AAEH,IAAI8B,SAAS,GAAG,GAAG;AACnB,IAAIC,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;AAChG,IAAIC,mBAAmB,GAAG;EACxB,GAAG,EAAE,EAAE;EACP,GAAG,EAAE,EAAE;EACP,IAAI,EAAE,EAAE;EACR,GAAG,EAAE;AACP,CAAC;AAED,IAAIC,UAAU,GAAG,aAAa,YAAY;EACxC,SAASA,UAAUA,CAAA,EAAG,CAAC;EAEvBA,UAAU,CAAC3B,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAE7J,KAAK,EAAE;IACjD,IAAI,EAAE,IAAIA,KAAK,IAAIA,KAAK,IAAI,GAAG,EAAE;MAC/B,OAAOA,KAAK,GAAG,GAAG;IACpB;IAEA,IAAI,GAAG,IAAIA,KAAK,IAAIA,KAAK,IAAI,GAAG,EAAE;MAChC,OAAO,CAACA,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG6J,MAAM,CAACoF,SAAS,CAAC,CAAC,GAAG,GAAG;IACvD;IAEA,IAAI,GAAG,IAAIjP,KAAK,IAAIA,KAAK,IAAI,GAAG,EAAE;MAChC,OAAO,EAAEA,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG6J,MAAM,CAACoF,SAAS,CAAC,CAAC,GAAG,GAAG;IACxD;IAEA,IAAIjP,KAAK,KAAK,EAAE,EAAE;MAChB,OAAO6J,MAAM,CAAC4G,WAAW,CAAC,CAAC;IAC7B;IAEA,IAAIzQ,KAAK,KAAK,EAAE,EAAE;MAChB,OAAO6J,MAAM,CAAC6G,WAAW,CAAC,CAAC;IAC7B;IAEA,IAAI1Q,KAAK,KAAK,EAAE,EAAE;MAChB,IAAI2Q,GAAG,GAAG,EAAE;MAEZ,OAAO,IAAI,EAAE;QACX,IAAIC,CAAC,GAAG/G,MAAM,CAACoF,SAAS,CAAC,CAAC;QAC1B,IAAI4B,EAAE,GAAGD,CAAC,IAAI,CAAC;QAEf,IAAIC,EAAE,KAAKR,SAAS,EAAE;UACpB;QACF;QAEAM,GAAG,IAAIL,YAAY,CAACO,EAAE,CAAC;QACvB,IAAIC,EAAE,GAAGF,CAAC,GAAG,EAAE;QAEf,IAAIE,EAAE,KAAKT,SAAS,EAAE;UACpB;QACF;QAEAM,GAAG,IAAIL,YAAY,CAACQ,EAAE,CAAC;MACzB;MAEA,OAAOC,UAAU,CAACJ,GAAG,CAAC;IACxB;IAEA,OAAO,IAAI;EACb,CAAC;EAEDH,UAAU,CAAC9F,IAAI,GAAG,SAASA,IAAIA,CAAC1K,KAAK,EAAE;IACrC;IACA;IACA,IAAIA,KAAK,CAACgR,UAAU,EAAE;MACpBhR,KAAK,GAAG,KAAK;IACf;IAEA,IAAI,CAACA,KAAK,GAAG,CAAC,MAAMA,KAAK,EAAE;MACzB;MACA,IAAI2Q,GAAG,GAAG,EAAE,GAAG3Q,KAAK;MACpB,OAAO,CAAC,GAAGoD,IAAI,CAAC6N,IAAI,CAAC,CAACN,GAAG,CAACxR,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,MAAM,IAAI,CAAC,GAAG,IAAIa,KAAK,IAAIA,KAAK,IAAI,GAAG,EAAE;MACxC,OAAO,CAAC;IACV,CAAC,MAAM,IAAI,GAAG,IAAIA,KAAK,IAAIA,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,IAAIA,KAAK,IAAIA,KAAK,IAAI,CAAC,GAAG,EAAE;MAC3E,OAAO,CAAC;IACV,CAAC,MAAM,IAAI,CAAC,KAAK,IAAIA,KAAK,IAAIA,KAAK,IAAI,KAAK,EAAE;MAC5C,OAAO,CAAC;IACV,CAAC,MAAM;MACL,OAAO,CAAC;IACV;EACF,CAAC;EAEDwQ,UAAU,CAACb,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAE7J,KAAK,EAAE;IACjD;IACA;IACA,IAAIqK,GAAG,GAAG6G,MAAM,CAAClR,KAAK,CAAC;IAEvB,IAAIA,KAAK,CAACgR,UAAU,EAAE;MACpBnH,MAAM,CAACkG,UAAU,CAAC,EAAE,CAAC;MACrB,OAAOlG,MAAM,CAACsH,YAAY,CAAC9G,GAAG,CAAC;IACjC,CAAC,MAAM,IAAI,CAACA,GAAG,GAAG,CAAC,MAAMA,GAAG,EAAE;MAC5B;MACAR,MAAM,CAACkG,UAAU,CAAC,EAAE,CAAC;MACrB,IAAIY,GAAG,GAAG,EAAE,GAAGtG,GAAG;MAElB,KAAK,IAAInL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyR,GAAG,CAACxR,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QACtC,IAAIkS,EAAE,GAAGT,GAAG,CAACzR,CAAC,CAAC;QACf,IAAI2R,EAAE,GAAGN,mBAAmB,CAACa,EAAE,CAAC,IAAI,CAACA,EAAE;QAEvC,IAAIlS,CAAC,KAAKyR,GAAG,CAACxR,MAAM,GAAG,CAAC,EAAE;UACxB,IAAI2R,EAAE,GAAGT,SAAS;QACpB,CAAC,MAAM;UACL,IAAIgB,EAAE,GAAGV,GAAG,CAACzR,CAAC,GAAG,CAAC,CAAC;UACnB,IAAI4R,EAAE,GAAGP,mBAAmB,CAACc,EAAE,CAAC,IAAI,CAACA,EAAE;QACzC;QAEAxH,MAAM,CAACkG,UAAU,CAACc,EAAE,IAAI,CAAC,GAAGC,EAAE,GAAG,EAAE,CAAC;MACtC;MAEA,IAAIA,EAAE,KAAKT,SAAS,EAAE;QACpB,OAAOxG,MAAM,CAACkG,UAAU,CAACM,SAAS,IAAI,CAAC,CAAC;MAC1C;IACF,CAAC,MAAM,IAAI,CAAC,GAAG,IAAIhG,GAAG,IAAIA,GAAG,IAAI,GAAG,EAAE;MACpC,OAAOR,MAAM,CAACkG,UAAU,CAAC1F,GAAG,GAAG,GAAG,CAAC;IACrC,CAAC,MAAM,IAAI,GAAG,IAAIA,GAAG,IAAIA,GAAG,IAAI,IAAI,EAAE;MACpCA,GAAG,IAAI,GAAG;MACVR,MAAM,CAACkG,UAAU,CAAC,CAAC1F,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;MACnC,OAAOR,MAAM,CAACkG,UAAU,CAAC1F,GAAG,GAAG,IAAI,CAAC;IACtC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAIA,GAAG,IAAIA,GAAG,IAAI,CAAC,GAAG,EAAE;MACtCA,GAAG,GAAG,CAACA,GAAG,GAAG,GAAG;MAChBR,MAAM,CAACkG,UAAU,CAAC,CAAC1F,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;MACnC,OAAOR,MAAM,CAACkG,UAAU,CAAC1F,GAAG,GAAG,IAAI,CAAC;IACtC,CAAC,MAAM,IAAI,CAAC,KAAK,IAAIA,GAAG,IAAIA,GAAG,IAAI,KAAK,EAAE;MACxCR,MAAM,CAACkG,UAAU,CAAC,EAAE,CAAC;MACrB,OAAOlG,MAAM,CAACyH,YAAY,CAACjH,GAAG,CAAC;IACjC,CAAC,MAAM;MACLR,MAAM,CAACkG,UAAU,CAAC,EAAE,CAAC;MACrB,OAAOlG,MAAM,CAACsH,YAAY,CAAC9G,GAAG,CAAC;IACjC;EACF,CAAC;EAED,OAAOmG,UAAU;AACnB,CAAC,CAAC,CAAC;AAEH,IAAIe,OAAO,GAAG,aAAa,YAAY;EACrC,SAASA,OAAOA,CAACC,GAAG,EAAE;IACpB,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;MAClBA,GAAG,GAAG,EAAE;IACV;IAEA,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAEhB,KAAK,IAAI3H,SAAS,GAAGtM,+BAA+B,CAACgU,GAAG,CAAC,EAAEzH,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MAC9F,IAAI0H,KAAK,GAAG3H,KAAK,CAAC/J,KAAK;MACvB,IAAIH,GAAG,GAAGa,KAAK,CAAC0J,OAAO,CAACsH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;MAC7E,IAAI,CAACD,MAAM,CAAC5R,GAAG,CAAC,GAAG6R,KAAK;IAC1B;EACF;EAEA,IAAIlD,MAAM,GAAG+C,OAAO,CAAC9C,SAAS;EAE9BD,MAAM,CAACmD,cAAc,GAAG,SAASA,cAAcA,CAACjP,IAAI,EAAEmH,MAAM,EAAEuF,GAAG,EAAEwC,QAAQ,EAAE;IAC3E,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAInR,KAAK,CAAC0J,OAAO,CAAC1H,IAAI,CAAC,EAAE;MACvB,OAAOkP,QAAQ,CAAC9D,GAAG,CAAC,UAAUgE,EAAE,EAAE5S,CAAC,EAAE;QACnC,OAAO2S,KAAK,CAACF,cAAc,CAACjP,IAAI,CAACxD,CAAC,CAAC,EAAE2K,MAAM,EAAEuF,GAAG,EAAE,CAAC0C,EAAE,CAAC,CAAC;MACzD,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIpP,IAAI,CAACmM,MAAM,IAAI,IAAI,EAAE;MAC9B,OAAOnM,IAAI,CAACmM,MAAM,CAAChF,MAAM,EAAEuF,GAAG,EAAEwC,QAAQ,CAAC;IAC3C,CAAC,MAAM;MACL,QAAQlP,IAAI;QACV,KAAK,QAAQ;QACb,KAAK,QAAQ;QACb,KAAK,KAAK;UACR,OAAOkP,QAAQ,CAAC,CAAC,CAAC;QAEpB,KAAK,SAAS;UACZ,OAAO,CAAC,CAACA,QAAQ,CAAC,CAAC,CAAC;QAEtB;UACE,OAAOA,QAAQ;MACnB;IACF;EACF,CAAC;EAEDpD,MAAM,CAACuD,cAAc,GAAG,SAASA,cAAcA,CAACrP,IAAI,EAAEmH,MAAM,EAAE8E,GAAG,EAAEiD,QAAQ,EAAE;IAC3E,IAAII,MAAM,GAAG,IAAI;IAEjB,IAAItR,KAAK,CAAC0J,OAAO,CAAC1H,IAAI,CAAC,EAAE;MACvB,OAAOkP,QAAQ,CAAC9D,GAAG,CAAC,UAAUgE,EAAE,EAAE5S,CAAC,EAAE;QACnC,OAAO8S,MAAM,CAACD,cAAc,CAACrP,IAAI,CAACxD,CAAC,CAAC,EAAE2K,MAAM,EAAE8E,GAAG,EAAEmD,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3D,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIpP,IAAI,CAACiN,MAAM,IAAI,IAAI,EAAE;MAC9B,OAAOjN,IAAI,CAACiN,MAAM,CAAC9F,MAAM,EAAE+H,QAAQ,EAAEjD,GAAG,CAAC;IAC3C,CAAC,MAAM,IAAI,OAAOiD,QAAQ,KAAK,QAAQ,EAAE;MACvC,OAAO,CAACA,QAAQ,CAAC;IACnB,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,SAAS,EAAE;MACxC,OAAO,CAAC,CAACA,QAAQ,CAAC;IACpB,CAAC,MAAM,IAAIlR,KAAK,CAAC0J,OAAO,CAACwH,QAAQ,CAAC,EAAE;MAClC,OAAOA,QAAQ;IACjB,CAAC,MAAM;MACL,OAAO,CAACA,QAAQ,CAAC;IACnB;EACF,CAAC;EAEDpD,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC9C,IAAIgI,GAAG,GAAG1F,MAAM,CAACsF,GAAG,GAAG5H,MAAM,CAACpI,MAAM;IACpC,IAAIiQ,GAAG,GAAG,CAAC,CAAC;IACZ,IAAIwC,QAAQ,GAAG,EAAE,CAAC,CAAC;;IAEnB1R,MAAM,CAAC+R,gBAAgB,CAAC7C,GAAG,EAAE;MAC3B7H,MAAM,EAAE;QACNvH,KAAK,EAAEuH;MACT,CAAC;MACD2K,YAAY,EAAE;QACZlS,KAAK,EAAE6J,MAAM,CAACsF;MAChB;IACF,CAAC,CAAC,CAAC,CAAC;;IAEJ,KAAK,IAAItP,GAAG,IAAI,IAAI,CAAC4R,MAAM,EAAE;MAC3B,IAAIC,KAAK,GAAG,IAAI,CAACD,MAAM,CAAC5R,GAAG,CAAC;MAC5BuP,GAAG,CAACsC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;IAC1B;IAEA,OAAO7H,MAAM,CAACsF,GAAG,GAAGI,GAAG,EAAE;MACvB,IAAIqB,CAAC,GAAG/G,MAAM,CAACoF,SAAS,CAAC,CAAC;MAE1B,IAAI2B,CAAC,GAAG,EAAE,EAAE;QACV,IAAIA,CAAC,KAAK,EAAE,EAAE;UACZA,CAAC,GAAGA,CAAC,IAAI,CAAC,GAAG/G,MAAM,CAACoF,SAAS,CAAC,CAAC;QACjC;QAEA,IAAIkD,MAAM,GAAG,IAAI,CAACV,MAAM,CAACb,CAAC,CAAC;QAE3B,IAAI,CAACuB,MAAM,EAAE;UACX,MAAM,IAAItT,KAAK,CAAC,mBAAmB,GAAG+R,CAAC,CAAC;QAC1C;QAEA,IAAIvG,GAAG,GAAG,IAAI,CAACsH,cAAc,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEtI,MAAM,EAAEuF,GAAG,EAAEwC,QAAQ,CAAC;QAE/D,IAAIvH,GAAG,IAAI,IAAI,EAAE;UACf,IAAIA,GAAG,YAAYzM,kBAAkB,EAAE;YACrCsC,MAAM,CAACC,cAAc,CAACiP,GAAG,EAAE+C,MAAM,CAAC,CAAC,CAAC,EAAE9H,GAAG,CAAC;UAC5C,CAAC,MAAM;YACL+E,GAAG,CAAC+C,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG9H,GAAG;UACtB;QACF;QAEAuH,QAAQ,GAAG,EAAE;MACf,CAAC,MAAM;QACLA,QAAQ,CAACnT,IAAI,CAAC+R,UAAU,CAAC3B,MAAM,CAAChF,MAAM,EAAE+G,CAAC,CAAC,CAAC;MAC7C;IACF;IAEA,OAAOxB,GAAG;EACZ,CAAC;EAEDZ,MAAM,CAAC9D,IAAI,GAAG,SAASA,IAAIA,CAAC0H,IAAI,EAAE7K,MAAM,EAAE8K,eAAe,EAAE;IACzD,IAAIA,eAAe,KAAK,KAAK,CAAC,EAAE;MAC9BA,eAAe,GAAG,IAAI;IACxB;IAEA,IAAI1D,GAAG,GAAG;MACRpH,MAAM,EAAEA,MAAM;MACd8C,GAAG,EAAE+H,IAAI;MACTE,WAAW,EAAE,CAAC;MACdC,WAAW,EAAEhL,MAAM,CAACgL,WAAW,IAAI;IACrC,CAAC;IACD,IAAIC,GAAG,GAAG,CAAC;IAEX,KAAK,IAAIC,CAAC,IAAI,IAAI,CAAChB,MAAM,EAAE;MACzB,IAAIC,KAAK,GAAG,IAAI,CAACD,MAAM,CAACgB,CAAC,CAAC;MAC1B,IAAIpI,GAAG,GAAG+H,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;MAExB,IAAIrH,GAAG,IAAI,IAAI,IAAIvM,OAAO,CAACuM,GAAG,EAAEqH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACzC;MACF;MAEA,IAAIE,QAAQ,GAAG,IAAI,CAACG,cAAc,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE/C,GAAG,EAAEtE,GAAG,CAAC;MAE5D,KAAK,IAAI6F,UAAU,GAAG1S,+BAA+B,CAACoU,QAAQ,CAAC,EAAEzB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;QACvG,IAAI8H,EAAE,GAAG3B,MAAM,CAACnQ,KAAK;QACrBwS,GAAG,IAAIhC,UAAU,CAAC9F,IAAI,CAACoH,EAAE,CAAC;MAC5B;MAEA,IAAIjS,GAAG,GAAGa,KAAK,CAAC0J,OAAO,CAACsH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;MACzDc,GAAG,IAAI3S,GAAG,CAACV,MAAM;IACnB;IAEA,IAAIkT,eAAe,EAAE;MACnBG,GAAG,IAAI7D,GAAG,CAAC2D,WAAW;IACxB;IAEA,OAAOE,GAAG;EACZ,CAAC;EAEDhE,MAAM,CAACmB,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAEuI,IAAI,EAAE7K,MAAM,EAAE;IACpD,IAAIoH,GAAG,GAAG;MACR+D,QAAQ,EAAE,EAAE;MACZH,WAAW,EAAE1I,MAAM,CAACsF,GAAG;MACvB5H,MAAM,EAAEA,MAAM;MACd8C,GAAG,EAAE+H,IAAI;MACTE,WAAW,EAAE;IACf,CAAC;IACD3D,GAAG,CAACgE,aAAa,GAAG9I,MAAM,CAACsF,GAAG,GAAG,IAAI,CAACzE,IAAI,CAAC0H,IAAI,EAAEzD,GAAG,EAAE,KAAK,CAAC;IAE5D,KAAK,IAAIiE,UAAU,GAAGpV,+BAA+B,CAAC,IAAI,CAACgU,GAAG,CAAC,EAAEqB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE5I,IAAI,GAAG;MACvG,IAAI0H,KAAK,GAAGmB,MAAM,CAAC7S,KAAK;MACxB,IAAIqK,GAAG,GAAG+H,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;MAExB,IAAIrH,GAAG,IAAI,IAAI,IAAIvM,OAAO,CAACuM,GAAG,EAAEqH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACzC;MACF;MAEA,IAAIE,QAAQ,GAAG,IAAI,CAACG,cAAc,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE7H,MAAM,EAAE8E,GAAG,EAAEtE,GAAG,CAAC;MAE9D,KAAK,IAAIyI,UAAU,GAAGtV,+BAA+B,CAACoU,QAAQ,CAAC,EAAEmB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE9I,IAAI,GAAG;QACvG,IAAI8H,EAAE,GAAGiB,MAAM,CAAC/S,KAAK;QACrBwQ,UAAU,CAACb,MAAM,CAAC9F,MAAM,EAAEiI,EAAE,CAAC;MAC/B;MAEA,IAAIjS,GAAG,GAAGa,KAAK,CAAC0J,OAAO,CAACsH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;MAEzD,KAAK,IAAIsB,UAAU,GAAGxV,+BAA+B,CAACqC,GAAG,CAAC,EAAEoT,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAEhJ,IAAI,GAAG;QAClG,IAAIkJ,GAAG,GAAGD,MAAM,CAACjT,KAAK;QACtB6J,MAAM,CAACkG,UAAU,CAACmD,GAAG,CAAC;MACxB;IACF;IAEA,IAAIhU,CAAC,GAAG,CAAC;IAET,OAAOA,CAAC,GAAGyP,GAAG,CAAC+D,QAAQ,CAACvT,MAAM,EAAE;MAC9B,IAAIgU,GAAG,GAAGxE,GAAG,CAAC+D,QAAQ,CAACxT,CAAC,EAAE,CAAC;MAC3BiU,GAAG,CAACzQ,IAAI,CAACiN,MAAM,CAAC9F,MAAM,EAAEsJ,GAAG,CAAC9I,GAAG,EAAE8I,GAAG,CAAC5L,MAAM,CAAC;IAC9C;IAEA;EACF,CAAC;EAED,OAAOgK,OAAO;AAChB,CAAC,CAAC,CAAC;AAEH,IAAI6B,UAAU,GAAG,aAAa,UAAUC,UAAU,EAAE;EAClD1V,cAAc,CAACyV,UAAU,EAAEC,UAAU,CAAC;EAEtC,SAASD,UAAUA,CAAC1Q,IAAI,EAAE4Q,OAAO,EAAE;IACjC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MACtBA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,IAAIA,OAAO,CAAC5Q,IAAI,IAAI,IAAI,EAAE;MACxB4Q,OAAO,CAAC5Q,IAAI,GAAG,QAAQ;IACzB;IAEA,OAAO2Q,UAAU,CAACpT,IAAI,CAAC,IAAI,EAAE,IAAI,EAAEyC,IAAI,EAAE4Q,OAAO,CAAC,IAAI,IAAI;EAC3D;EAEA,IAAI9E,MAAM,GAAG4E,UAAU,CAAC3E,SAAS;EAEjCD,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,EAAE;IACxD,IAAI,CAAC1C,UAAU,GAAG;MAChBL,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;QACxB,OAAO+C,QAAQ,CAAC,CAAC,CAAC;MACpB;IACF,CAAC;IACD,OAAOyB,UAAU,CAAC5E,SAAS,CAACI,MAAM,CAAC5O,IAAI,CAAC,IAAI,EAAE4J,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,CAAC;EACzE,CAAC;EAEDpD,MAAM,CAACmB,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAE7J,KAAK,EAAE2O,GAAG,EAAE;IAClD,IAAI,CAAC9E,MAAM,EAAE;MACX;MACA,IAAI,CAACqF,UAAU,GAAG;QAChBxE,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;UACpB,OAAO,CAAC;QACV;MACF,CAAC;MACD,IAAI,CAACA,IAAI,CAAC1K,KAAK,EAAE2O,GAAG,CAAC;MACrB,OAAO,CAAC,IAAI4E,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB;IAEA,IAAIJ,GAAG,GAAG,IAAI;IACd,IAAI,CAACjE,UAAU,GAAG;MAChBS,MAAM,EAAE,SAASA,MAAMA,CAAC9F,MAAM,EAAEQ,GAAG,EAAE;QACnC,OAAO8I,GAAG,GAAG9I,GAAG;MAClB;IACF,CAAC;IAEDgJ,UAAU,CAAC5E,SAAS,CAACkB,MAAM,CAAC1P,IAAI,CAAC,IAAI,EAAE4J,MAAM,EAAE7J,KAAK,EAAE2O,GAAG,CAAC;IAE1D,OAAO,CAAC,IAAI4E,GAAG,CAACJ,GAAG,CAAC,CAAC;EACvB,CAAC;EAED,OAAOC,UAAU;AACnB,CAAC,CAAC7V,CAAC,CAACkF,OAAO,CAAC;AAEZ,IAAI8Q,GAAG,GAAG,aAAa,YAAY;EACjC,SAASA,GAAGA,CAAClJ,GAAG,EAAE;IAChB,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAAC2G,UAAU,GAAG,IAAI;EACxB;EAEA,IAAIwC,OAAO,GAAGD,GAAG,CAAC9E,SAAS;EAE3B+E,OAAO,CAACC,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;IACnC,OAAO,IAAI,CAACpJ,GAAG;EACjB,CAAC;EAED,OAAOkJ,GAAG;AACZ,CAAC,CAAC,CAAC;AAEH,IAAIG,UAAU,GAAG,aAAa,YAAY;EACxC,SAASA,UAAUA,CAAA,EAAG,CAAC;EAEvBA,UAAU,CAAC7E,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,EAAE;IAC5D,IAAI+B,SAAS,GAAG/B,QAAQ,CAACgC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC;;IAEA,OAAOhC,QAAQ,CAACzS,MAAM,GAAGwU,SAAS,EAAE;MAClC/B,QAAQ,CAACgC,GAAG,CAAC,CAAC;IAChB;EACF,CAAC;EAED,OAAOF,UAAU;AACnB,CAAC,CAAC,CAAC;AAEH,IAAIG,cAAc,GAAG,IAAItC,OAAO,CAAC;AAAC;AAClC,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,mBAAmB,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAEmC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,IAAIN,UAAU,CAAC,IAAI7E,QAAQ,CAAC,CAAC,EAAE;EACxvB7L,IAAI,EAAE;AACR,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;AAEX;AACA;AACA,IAAIoR,eAAe,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,mBAAmB,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC;AAE9hJ,IAAIC,gBAAgB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC;AAChwD,IAAIC,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,EAAE,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,eAAe,EAAE,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC;AAE9sF,IAAIC,eAAe,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC;AAClwE,IAAIC,aAAa,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC;AACh3E,IAAIC,mBAAmB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,CAAC;;AAE/xC;AACA;;AAEA,IAAIC,YAAY,GAAG,IAAI7W,CAAC,CAAC0D,MAAM,CAAC;EAC9BkD,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,CAAC;EAClCkT,eAAe,EAAE9W,CAAC,CAAC4D,MAAM;EACzBmT,YAAY,EAAE/W,CAAC,CAAC4D,MAAM;EACtBoT,cAAc,EAAE,IAAIhX,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,cAAc;AACtD,CAAC,CAAC;AACF,IAAIqT,aAAa,GAAG,IAAIjX,CAAC,CAAC0D,MAAM,CAAC;EAC/BmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpByL,OAAO,EAAE,IAAIlX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiT,YAAY,EAAE;IAC7C1R,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAIgS,MAAM,GAAG,IAAInX,CAAC,CAAC0D,MAAM,CAAC;EACxB0T,cAAc,EAAE,IAAIpX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiT,YAAY,CAAC;EACrD9K,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;EACfyT,cAAc,EAAE,IAAIrX,CAAC,CAACmD,KAAK,CAAC8T,aAAa,EAAE,OAAO;AACpD,CAAC,CAAC;AACF,IAAIK,YAAY,GAAG,IAAItX,CAAC,CAAC0D,MAAM,CAAC;EAC9BmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB8L,MAAM,EAAE,IAAIvX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEuT,MAAM,EAAE;IACtChS,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAIqS,UAAU,GAAG,IAAIxX,CAAC,CAACmD,KAAK,CAACmU,YAAY,EAAEtX,CAAC,CAAC4D,MAAM,CAAC,CAAC,CAAC;AACtD;AACA;;AAEA,IAAI6T,OAAO,GAAG,IAAIzX,CAAC,CAAC0D,MAAM,CAAC;EACzBgU,aAAa,EAAE1X,CAAC,CAAC4D,MAAM;EACvB;EACA+T,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;EACrBgU,iBAAiB,EAAE,IAAI5X,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,aAAa;AACxD,CAAC,CAAC;AACF,IAAIiU,aAAa,GAAG,IAAI7X,CAAC,CAAC0D,MAAM,CAAC;EAC/BmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpBqM,OAAO,EAAE,IAAI9X,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6T,OAAO,EAAE;IACxCtS,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAI4S,WAAW,GAAG,IAAI/X,CAAC,CAACmD,KAAK,CAAC0U,aAAa,EAAE7X,CAAC,CAAC4D,MAAM,CAAC;AACtD,IAAIoU,WAAW,GAAG,IAAIhY,CAAC,CAAC0D,MAAM,CAAC;EAC7BuU,kBAAkB,EAAEjY,CAAC,CAAC0E,KAAK;EAC3BsD,KAAK,EAAE,IAAIhI,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC0E,KAAK,EAAE,CAAC,aAAa,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,aAAa,EAAE,qBAAqB,CAAC;AAC7H,CAAC,CAAC;AACF,SAASwT,UAAUA,CAACC,QAAQ,EAAE;EAC5B,IAAIC,MAAM,GAAG,IAAIpY,CAAC,CAAC0D,MAAM,CAAC;IACxB2U,UAAU,EAAErY,CAAC,CAAC4D,MAAM;IACpBoE,KAAK,EAAEgQ,WAAW;IAClBM,aAAa,EAAEtY,CAAC,CAAC4D,MAAM;IACvB2U,SAAS,EAAE,IAAIvY,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEuU,QAAQ,CAAC,EAAE,eAAe,CAAC;IAC1EK,gBAAgB,EAAE,IAAIxY,CAAC,CAACyY,QAAQ,CAACzY,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;MACtD,OAAOA,CAAC,CAACoC,KAAK,CAACA,KAAK,CAAC0Q,mBAAmB;IAC1C,CAAC;EACH,CAAC,CAAC;EACF,OAAO,IAAI1Y,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwU,MAAM,CAAC,EAAEpY,CAAC,CAAC4D,MAAM,CAAC;AACnE,CAAC,CAAC;AACF;AACA;;AAEA,IAAI+U,WAAW,GAAG,IAAI3Y,CAAC,CAAC0D,MAAM,CAAC;EAC7BqO,KAAK,EAAE/R,CAAC,CAAC4D,MAAM;EACfoO,GAAG,EAAEhS,CAAC,CAAC4D,MAAM;EACbgV,kBAAkB,EAAE5Y,CAAC,CAAC4D;AACxB,CAAC,CAAC;AACF,IAAIiV,QAAQ,GAAG,IAAI7Y,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC7C,CAAC,EAAE;IACDkV,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;IACpBmV,MAAM,EAAE,IAAI/Y,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,YAAY;EAC5C,CAAC;EACD,CAAC,EAAE;IACDoV,UAAU,EAAEhZ,CAAC,CAAC4D,MAAM;IACpBqV,YAAY,EAAE,IAAIjZ,CAAC,CAACmD,KAAK,CAACwV,WAAW,EAAE,YAAY;EACrD;AACF,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA,IAAIO,gBAAgB,GAAG,IAAIlZ,CAAC,CAAC0D,MAAM,CAAC;EAClCqO,KAAK,EAAE/R,CAAC,CAAC4D,MAAM;EACfoO,GAAG,EAAEhS,CAAC,CAAC4D,MAAM;EACbuV,KAAK,EAAEnZ,CAAC,CAAC4D;AACX,CAAC,CAAC;AACF,IAAIwV,QAAQ,GAAG,IAAIpZ,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC7C,CAAC,EAAE;IACD;IACAyV,UAAU,EAAErZ,CAAC,CAAC4D,MAAM;IACpBkV,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;IACpB0V,eAAe,EAAE,IAAItZ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,YAAY;EACrD,CAAC;EACD,CAAC,EAAE;IACD;IACA2V,eAAe,EAAEvZ,CAAC,CAAC4D,MAAM;IACzB4V,gBAAgB,EAAE,IAAIxZ,CAAC,CAACmD,KAAK,CAAC+V,gBAAgB,EAAE,iBAAiB;EACnE;AACF,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA,IAAIO,MAAM,GAAG,IAAIzZ,CAAC,CAAC0D,MAAM,CAAC;EACxBgW,CAAC,EAAE1Z,CAAC,CAAC4D,MAAM;EACX;EACAyP,CAAC,EAAErT,CAAC,CAAC4D,MAAM;EACX;EACA+V,WAAW,EAAE3Z,CAAC,CAAC4D;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA,IAAIgW,YAAY,GAAG,IAAI5Z,CAAC,CAAC0D,MAAM,CAAC;EAC9BmW,aAAa,EAAE7Z,CAAC,CAAC4D,MAAM;EACvBkW,eAAe,EAAE9Z,CAAC,CAAC4D;AACrB,CAAC,CAAC;AACF,IAAImW,IAAI,GAAG,IAAI/Z,CAAC,CAAC0D,MAAM,CAAC;EACtBoV,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;EACpB+T,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;EACrBoW,KAAK,EAAE,IAAIha,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IACxC,OAAOA,CAAC,CAACkT,UAAU,GAAG,CAAC;EACzB,CAAC,CAAC;EACFmB,aAAa,EAAE,IAAIja,CAAC,CAACmD,KAAK,CAACyW,YAAY,EAAE,aAAa;AACxD,CAAC,CAAC;AACF,IAAIM,OAAO,GAAG,IAAIla,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmW,IAAI,CAAC,EAAE/Z,CAAC,CAAC4D,MAAM,CAAC;AAClE,IAAIuW,SAAS,GAAG,IAAIna,CAAC,CAAC0D,MAAM,CAAC;EAC3BoV,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;EACpB+T,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;EACrBwW,OAAO,EAAE,IAAIpa,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IAC1C,OAAOA,CAAC,CAACkT,UAAU,GAAG,CAAC;EACzB,CAAC,CAAC;EACFmB,aAAa,EAAE,IAAIja,CAAC,CAACmD,KAAK,CAACyW,YAAY,EAAE,aAAa;AACxD,CAAC,CAAC;AACF,IAAIS,QAAQ,GAAG,IAAIra,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEuW,SAAS,CAAC,EAAEna,CAAC,CAAC4D,MAAM,CAAC;AACxE,IAAI0W,OAAO,GAAG,IAAIta,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC5C,CAAC,EAAE;IACD;IACA2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C2B,YAAY,EAAExa,CAAC,CAAC4D,MAAM;IACtB6W,QAAQ,EAAE,IAAIza,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEsW,OAAO,CAAC,EAAE,cAAc;EACxE,CAAC;EACD,CAAC,EAAE;IACD;IACAK,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C6B,QAAQ,EAAE,IAAI1a,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;IAC3CuB,WAAW,EAAE3a,CAAC,CAAC4D,MAAM;IACrBgX,QAAQ,EAAE,IAAI5a,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEyW,QAAQ,CAAC,EAAE,aAAa;EACxE,CAAC;EACD,CAAC,EAAE;IACDvB,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;IACpB+T,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;IACrBiX,SAAS,EAAE,IAAI7a,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,YAAY,CAAC;IACvEoB,aAAa,EAAE,IAAIja,CAAC,CAACmD,KAAK,CAACyW,YAAY,EAAE,aAAa;EACxD;AACF,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA,IAAIkB,SAAS,GAAG,IAAI9a,CAAC,CAAC0D,MAAM,CAAC;EAC3BqX,mBAAmB,EAAE/a,CAAC,CAAC4D,MAAM;EAC7BoX,SAAS,EAAE,IAAIhb,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,qBAAqB,CAAC;EACvDqX,eAAe,EAAEjb,CAAC,CAAC4D,MAAM;EACzBoW,KAAK,EAAE,IAAIha,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IACxC,OAAOA,CAAC,CAACqV,eAAe,GAAG,CAAC;EAC9B,CAAC,CAAC;EACFC,mBAAmB,EAAElb,CAAC,CAAC4D,MAAM;EAC7BuX,SAAS,EAAE,IAAInb,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,qBAAqB,CAAC;EACvD+T,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;EACrBqW,aAAa,EAAE,IAAIja,CAAC,CAACmD,KAAK,CAACyW,YAAY,EAAE,aAAa;AACxD,CAAC,CAAC;AACF,IAAIwB,YAAY,GAAG,IAAIpb,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEkX,SAAS,CAAC,EAAE9a,CAAC,CAAC4D,MAAM,CAAC;AAC5E,IAAIyX,eAAe,GAAG,IAAIrb,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EACpD,CAAC,EAAE;IACD;IACA2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3CyC,UAAU,EAAEtb,CAAC,CAAC4D,MAAM;IACpB2X,aAAa,EAAE,IAAIvb,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwX,YAAY,CAAC,EAAE,YAAY;EAChF,CAAC;EACD,CAAC,EAAE;IACD;IACAb,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C2C,iBAAiB,EAAE,IAAIxb,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;IACpDqC,aAAa,EAAE,IAAIzb,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;IAChDsC,iBAAiB,EAAE,IAAI1b,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;IACpDkC,UAAU,EAAEtb,CAAC,CAAC4D,MAAM;IACpB+X,aAAa,EAAE,IAAI3b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwX,YAAY,CAAC,EAAE,YAAY;EAChF,CAAC;EACD,CAAC,EAAE;IACD;IACAL,mBAAmB,EAAE/a,CAAC,CAAC4D,MAAM;IAC7BgY,iBAAiB,EAAE,IAAI5b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,qBAAqB,CAAC;IACxFoC,eAAe,EAAEjb,CAAC,CAAC4D,MAAM;IACzBiY,aAAa,EAAE,IAAI7b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,iBAAiB,CAAC;IAChFqC,mBAAmB,EAAElb,CAAC,CAAC4D,MAAM;IAC7BkY,iBAAiB,EAAE,IAAI9b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,qBAAqB,CAAC;IACxFlB,WAAW,EAAE3X,CAAC,CAAC4D,MAAM;IACrBqW,aAAa,EAAE,IAAIja,CAAC,CAACmD,KAAK,CAACyW,YAAY,EAAE,aAAa;EACxD;AACF,CAAC,CAAC;AAEF,IAAImC,CAAC;AACL;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG,IAAIhc,CAAC,CAACic,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;AACvC,IAAIC,qBAAqB,GAAG,IAAIlc,CAAC,CAAC0D,MAAM,CAAC;EACvCyY,UAAU,EAAEH,OAAO;EACnBI,SAAS,EAAEJ,OAAO;EAClBK,QAAQ,EAAEL;AACZ,CAAC,CAAC;AACF,IAAIM,mBAAmB,GAAG,IAAItc,CAAC,CAAC0D,MAAM,CAAC;EACrC6Y,SAAS,EAAEvc,CAAC,CAAC4D,MAAM;EACnB4Y,WAAW,EAAExc,CAAC,CAAC4D,MAAM;EACrB6Y,gBAAgB,EAAE,IAAIzc,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACmD,KAAK,CAAC+Y,qBAAqB,EAAE,WAAW,CAAC,EAAE,aAAa;AAC9F,CAAC,CAAC;AACF,IAAIQ,QAAQ,GAAG,IAAI1c,CAAC,CAAC0D,MAAM,CAAC;EAC1BiZ,WAAW,EAAE,IAAI3c,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC+D,KAAK,EAAE,UAAU6B,CAAC,EAAE;IAC7C,OAAOA,CAAC,CAACoE,MAAM,CAAC4S,eAAe;EACjC,CAAC,CAAC;EACFC,YAAY,EAAE,IAAI7c,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC8c,IAAI,EAAE,UAAUlX,CAAC,EAAE;IAC7C,OAAOA,CAAC,CAACoE,MAAM,CAAC+S,gBAAgB,GAAGnX,CAAC,CAACoE,MAAM,CAAC4S,eAAe;EAC7D,CAAC,CAAC;EACFI,MAAM,EAAE,SAASA,MAAMA,CAACpX,CAAC,EAAE;IACzB,OAAOA,CAAC,CAAC+W,WAAW,CAACM,MAAM,CAACrX,CAAC,CAACiX,YAAY,CAAC;EAC7C;AACF,CAAC,CAAC;AACF,IAAIK,iBAAiB,GAAG,IAAIld,CAAC,CAAC0D,MAAM,CAAC;EACnCyZ,SAAS,EAAEnd,CAAC,CAAC4D,MAAM;EACnBgZ,eAAe,EAAE5c,CAAC,CAAC4D,MAAM;EACzBmZ,gBAAgB,EAAE/c,CAAC,CAAC4D,MAAM;EAC1BwZ,aAAa,EAAE,IAAIpd,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,kBAAkB,CAAC;EACxDyZ,SAAS,EAAE,IAAIrd,CAAC,CAACmD,KAAK,CAACuZ,QAAQ,EAAE,WAAW;AAC9C,CAAC,CAAC;AACF,IAAIY,kBAAkB,GAAG,IAAItd,CAAC,CAAC0D,MAAM,CAAC;EACpCzC,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;EAChB2Z,mBAAmB,EAAE,IAAIvd,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEmY,mBAAmB,CAAC;EACjEkB,kBAAkB,EAAExd,CAAC,CAAC4D,MAAM;EAC5B6Z,iBAAiB,EAAE,IAAIzd,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+Y,iBAAiB,CAAC,EAAE,oBAAoB;AACjG,CAAC,CAAC;AACF;AACA;AACA;;AAEA,IAAIQ,cAAc,GAAG,IAAI1d,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EACnD,CAAC,GAAGmY,CAAC,GAAG;IACN4B,SAAS,EAAE3d,CAAC,CAAC4D;EACf,CAAC,EAAEmY,CAAC,CAAC,WAAW,CAAC,GAAG/b,CAAC,CAAC4D,MAAM,EAAEmY,CAAC,CAAC6B,mBAAmB,GAAG5B,OAAO,EAAED,CAAC,CAAC8B,mBAAmB,GAAG7B,OAAO,EAAED,CAAC;AACnG,CAAC,CAAC;AACF,IAAI+B,YAAY,GAAG,IAAI9d,CAAC,CAAC0D,MAAM,CAAC;EAC9Bqa,cAAc,EAAE/d,CAAC,CAAC4D,MAAM;EACxBoa,cAAc,EAAE,IAAIhe,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEuZ,cAAc,CAAC,EAAE,gBAAgB;AACvF,CAAC,CAAC;AACF,IAAIO,8BAA8B,GAAG,IAAIje,CAAC,CAAC0D,MAAM,CAAC;EAChDwa,YAAY,EAAEle,CAAC,CAAC4D,MAAM;EACtBua,qBAAqB,EAAE,IAAIne,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEsT,OAAO,EAAE;IACtDtS,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAIiZ,wBAAwB,GAAG,IAAIpe,CAAC,CAAC0D,MAAM,CAAC;EAC1C8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClB2O,iBAAiB,EAAEre,CAAC,CAAC4D,MAAM;EAC3B0a,aAAa,EAAE,IAAIte,CAAC,CAACmD,KAAK,CAAC8a,8BAA8B,EAAE,mBAAmB;AAChF,CAAC,CAAC;AACF,IAAIM,sBAAsB,GAAG,IAAIve,CAAC,CAAC0D,MAAM,CAAC;EACxC8a,YAAY,EAAE,IAAIxe,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE2Z,YAAY,EAAE;IAClD3Y,IAAI,EAAE;EACR,CAAC,CAAC;EACFsZ,wBAAwB,EAAE,IAAIze,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEia,wBAAwB,EAAE;IAC1EjZ,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAIuZ,iBAAiB,GAAG,IAAI1e,CAAC,CAAC0D,MAAM,CAAC;EACnCib,YAAY,EAAE3e,CAAC,CAAC4D,MAAM;EACtBgb,YAAY,EAAE5e,CAAC,CAAC4D,MAAM;EACtBib,2BAA2B,EAAE7e,CAAC,CAACmE,MAAM;EACrC2a,uBAAuB,EAAE,IAAI9e,CAAC,CAACmD,KAAK,CAACob,sBAAsB,EAAE,6BAA6B;AAC5F,CAAC,CAAC;;AAEF;;AAEA,IAAIQ,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAYA,CAACC,aAAa,EAAE7Z,IAAI,EAAE;IACzC,IAAI,CAAC6Z,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAC7Z,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAI8L,MAAM,GAAG8N,YAAY,CAAC7N,SAAS;EAEnCD,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,EAAE;IACxD,IAAI,IAAI,CAAC2K,aAAa,CAAC3K,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC2K,aAAa,CAAC3K,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxC;IAEA,OAAO,IAAI,CAAClP,IAAI,CAACmM,MAAM,CAAChF,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,CAAC;EACnD,CAAC;EAEDpD,MAAM,CAAC9D,IAAI,GAAG,SAASA,IAAIA,CAAC1K,KAAK,EAAE2O,GAAG,EAAE;IACtC,OAAO,IAAI,CAACjM,IAAI,CAACgI,IAAI,CAAC1K,KAAK,EAAE2O,GAAG,CAAC;EACnC,CAAC;EAEDH,MAAM,CAACmB,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAE7J,KAAK,EAAE2O,GAAG,EAAE;IAClD,IAAI6N,KAAK,GAAG,IAAI,CAACD,aAAa,CAACjS,OAAO,CAACtK,KAAK,CAAC;IAE7C,IAAIwc,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,OAAOA,KAAK;IACd;IAEA,OAAO,IAAI,CAAC9Z,IAAI,CAACiN,MAAM,CAAC9F,MAAM,EAAE7J,KAAK,EAAE2O,GAAG,CAAC;EAC7C,CAAC;EAED,OAAO2N,YAAY;AACrB,CAAC,CAAC,CAAC;AAEH,IAAIG,kBAAkB,GAAG,aAAa,UAAUC,SAAS,EAAE;EACzD/e,cAAc,CAAC8e,kBAAkB,EAAEC,SAAS,CAAC;EAE7C,SAASD,kBAAkBA,CAAA,EAAG;IAC5B,OAAOC,SAAS,CAACzc,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI;EAC9C;EAEA,IAAIuT,OAAO,GAAGiJ,kBAAkB,CAAChO,SAAS;EAE1C+E,OAAO,CAAC3E,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAE;IACvC,OAAOtM,CAAC,CAAC0E,KAAK,CAAC4M,MAAM,CAAChF,MAAM,CAAC,GAAG,IAAI;EACtC,CAAC;EAED,OAAO4S,kBAAkB;AAC3B,CAAC,CAAClf,CAAC,CAAC2T,MAAM,CAAC;AAEX,IAAIyL,MAAM,GAAG,IAAIpf,CAAC,CAAC0D,MAAM,CAAC;EACxB2b,KAAK,EAAErf,CAAC,CAAC4D,MAAM;EACf0b,KAAK,EAAEtf,CAAC,CAAC0E;AACX,CAAC,CAAC;AACF,IAAI6a,MAAM,GAAG,IAAIvf,CAAC,CAAC0D,MAAM,CAAC;EACxB2b,KAAK,EAAErf,CAAC,CAAC4D,MAAM;EACf0b,KAAK,EAAEtf,CAAC,CAAC4D;AACX,CAAC,CAAC;AACF,IAAI4b,iBAAiB,GAAG,IAAIxf,CAAC,CAACsF,eAAe,CAAC,IAAI4Z,kBAAkB,CAAC,CAAC,EAAE;EACtE,CAAC,EAAE;IACDO,MAAM,EAAEzf,CAAC,CAAC0E,KAAK;IACfgb,KAAK,EAAE,IAAI1f,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,QAAQ;EACtC,CAAC;EACD,CAAC,EAAE;IACDib,OAAO,EAAE3f,CAAC,CAAC0E,KAAK;IAChBkb,MAAM,EAAE,IAAI5f,CAAC,CAACmD,KAAK,CAACic,MAAM,EAAE,SAAS;EACvC,CAAC,CAAC;AAEJ,CAAC,CAAC;AACF,IAAIS,WAAW,GAAG,IAAId,YAAY,CAAC,CAACvI,gBAAgB,EAAEC,cAAc,CAAC,EAAE,IAAIZ,UAAU,CAAC2J,iBAAiB,EAAE;EACvGlY,IAAI,EAAE;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL;;AAEA,IAAIwY,UAAU,GAAG,aAAa,UAAUC,QAAQ,EAAE;EAChD3f,cAAc,CAAC0f,UAAU,EAAEC,QAAQ,CAAC;EAEpC,SAASD,UAAUA,CAAA,EAAG;IACpB,OAAOC,QAAQ,CAACxc,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC,IAAI,IAAI;EAChD;EAEA,IAAI+c,OAAO,GAAGF,UAAU,CAAC5O,SAAS;EAElC8O,OAAO,CAAC1O,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC/C,IAAIpI,MAAM,GAAGtB,aAAa,CAAC,IAAI,CAACsB,MAAM,EAAE0K,MAAM,EAAEtC,MAAM,CAAC;IACvD,IAAI+B,KAAK,GAAG,CAAC;IACb,IAAIkU,GAAG,GAAG,EAAE;IAEZ,OAAOlU,KAAK,GAAGnK,MAAM,EAAE;MACrB,IAAIse,KAAK,GAAG,IAAI,CAAC/a,IAAI,CAACmM,MAAM,CAAChF,MAAM,EAAEtC,MAAM,CAAC;MAC5CkW,KAAK,CAACjO,MAAM,GAAGlG,KAAK;MACpBA,KAAK,IAAImU,KAAK,CAACZ,KAAK,GAAG,CAAC;MACxBW,GAAG,CAAC/e,IAAI,CAACgf,KAAK,CAAC;IACjB;IAEA,OAAOD,GAAG;EACZ,CAAC;EAED,OAAOH,UAAU;AACnB,CAAC,CAAC9f,CAAC,CAACmD,KAAK,CAAC;AAEV,IAAIgd,gBAAgB,GAAG,IAAIngB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC0E,KAAK,EAAE;EACpD,CAAC,EAAE;IACDqU,MAAM,EAAE,IAAI/Y,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;MACzC,OAAOA,CAAC,CAACoE,MAAM,CAACoW,WAAW,CAACxe,MAAM,GAAG,CAAC;IACxC,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACDge,MAAM,EAAE,IAAIE,UAAU,CAACV,MAAM,EAAE,UAAUxZ,CAAC,EAAE;MAC1C,OAAOA,CAAC,CAACoE,MAAM,CAACoW,WAAW,CAACxe,MAAM,GAAG,CAAC;IACxC,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACDge,MAAM,EAAE,IAAIE,UAAU,CAACP,MAAM,EAAE,UAAU3Z,CAAC,EAAE;MAC1C,OAAOA,CAAC,CAACoE,MAAM,CAACoW,WAAW,CAACxe,MAAM,GAAG,CAAC;IACxC,CAAC;EACH;AACF,CAAC,CAAC;AACF,IAAIye,UAAU,GAAG,IAAItB,YAAY,CAAC,CAACrI,eAAe,EAAEC,aAAa,EAAEC,mBAAmB,CAAC,EAAE,IAAIf,UAAU,CAACsK,gBAAgB,EAAE;EACxH7Y,IAAI,EAAE;AACR,CAAC,CAAC,CAAC;AACH,IAAIgZ,QAAQ,GAAG,IAAItgB,CAAC,CAAC0D,MAAM,CAAC;EAC1B2b,KAAK,EAAErf,CAAC,CAAC4D,MAAM;EACf2c,EAAE,EAAEvgB,CAAC,CAAC0E;AACR,CAAC,CAAC;AACF,IAAI8b,QAAQ,GAAG,IAAIxgB,CAAC,CAAC0D,MAAM,CAAC;EAC1B2b,KAAK,EAAErf,CAAC,CAACmE,MAAM;EACfoc,EAAE,EAAEvgB,CAAC,CAAC4D;AACR,CAAC,CAAC;AACF,IAAI6c,QAAQ,GAAG,IAAIzgB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC0E,KAAK,EAAE;EAC5C,CAAC,EAAE;IACDgc,GAAG,EAAE,IAAI1gB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;MACrC,OAAOA,CAAC,CAACoE,MAAM,CAACoW,WAAW,CAACxe,MAAM;IACpC,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACD+d,OAAO,EAAE3f,CAAC,CAAC4D,MAAM;IACjBgc,MAAM,EAAE,IAAI5f,CAAC,CAACmD,KAAK,CAACmd,QAAQ,EAAE,SAAS,CAAC;IACxCK,QAAQ,EAAE3gB,CAAC,CAAC4D;EACd,CAAC;EACD,CAAC,EAAE;IACD+b,OAAO,EAAE3f,CAAC,CAACmE,MAAM;IACjByb,MAAM,EAAE,IAAI5f,CAAC,CAACmD,KAAK,CAACqd,QAAQ,EAAE,SAAS,CAAC;IACxCG,QAAQ,EAAE3gB,CAAC,CAACmE;EACd;AACF,CAAC,CAAC;AACF,IAAIyR,GAAG,GAAG,IAAIC,UAAU,CAACS,cAAc,CAAC;AAExC,IAAIsK,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAYA,CAAA,EAAG,CAAC;EAEzB,IAAIC,OAAO,GAAGD,YAAY,CAAC1P,SAAS;EAEpC2P,OAAO,CAACvP,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAEqK,QAAQ,EAAE;IACzDrK,MAAM,CAACpI,MAAM,GAAGyS,QAAQ,CAAC,CAAC,CAAC;IAC3B,OAAOuB,GAAG,CAACtE,MAAM,CAAChF,MAAM,EAAEtC,MAAM,EAAE,CAACqK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;EAEDwM,OAAO,CAAC1T,IAAI,GAAG,SAASA,IAAIA,CAAC0H,IAAI,EAAEzD,GAAG,EAAE;IACtC,OAAO,CAACkF,cAAc,CAACnJ,IAAI,CAAC0H,IAAI,EAAEzD,GAAG,EAAE,KAAK,CAAC,EAAEwE,GAAG,CAACzI,IAAI,CAAC0H,IAAI,EAAEzD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC;EAEDyP,OAAO,CAACzO,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAEuI,IAAI,EAAEzD,GAAG,EAAE;IAClD,OAAO,CAACkF,cAAc,CAACnJ,IAAI,CAAC0H,IAAI,EAAEzD,GAAG,EAAE,KAAK,CAAC,EAAEwE,GAAG,CAACxD,MAAM,CAAC9F,MAAM,EAAEuI,IAAI,EAAEzD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAClF,CAAC;EAED,OAAOwP,YAAY;AACrB,CAAC,CAAC,CAAC;AAEH,IAAIE,QAAQ,GAAG,IAAI9M,OAAO,CAAC;AAAC;AAC5B,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI4M,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACnL,IAAIG,UAAU,GAAG,IAAI/M,OAAO,CAAC;AAAC;AAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,mBAAmB,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,oBAAoB,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,EAAEqM,UAAU,EAAE3J,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE,UAAU,EAAEmJ,WAAW,EAAErJ,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,EAAE,IAAIX,UAAU,CAAC,IAAI7E,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI4P,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC;AAAE;AACviC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI/K,UAAU,CAAC4K,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI5K,UAAU,CAAC,IAAI7E,QAAQ,CAAC8P,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAChX,IAAIE,cAAc,GAAG,IAAIhhB,CAAC,CAAC0D,MAAM,CAAC;EAChC9B,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;EAChBqd,kBAAkB,EAAE3D;AACtB,CAAC,CAAC;AACF,IAAI4D,WAAW,GAAG,IAAIlN,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI6B,UAAU,CAAC,IAAI7E,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI6E,UAAU,CAAC4K,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI5K,UAAU,CAAC,IAAI7E,QAAQ,CAAC8P,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAIjL,UAAU,CAACmL,cAAc,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;AAC5W,IAAIG,MAAM,GAAG,IAAInhB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAACohB,OAAO,EAAE;EAC5C,CAAC,EAAE;IACD/P,OAAO,EAAErR,CAAC,CAAC0E,KAAK;IAChB+M,OAAO,EAAEzR,CAAC,CAAC0E,KAAK;IAChB2c,SAAS,EAAE,IAAIrQ,QAAQ,CAAC,IAAIhR,CAAC,CAACyL,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/C6V,YAAY,EAAE,IAAItQ,QAAQ,CAAC+P,UAAU,CAAC;IACtCQ,WAAW,EAAE,IAAIvQ,QAAQ,CAAC,IAAIhR,CAAC,CAACyL,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjD+V,eAAe,EAAE,IAAIxQ,QAAQ,CAAC;EAChC,CAAC;EACD,CAAC,EAAE;IACDK,OAAO,EAAErR,CAAC,CAAC0E,KAAK;IAChB9C,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;IAChB6d,OAAO,EAAEP,WAAW;IACpBM,eAAe,EAAE,IAAIxQ,QAAQ,CAAC;EAChC;AACF,CAAC,CAAC;AAEF,IAAI0Q,OAAO,GAAG,aAAa,YAAY;EACrC,SAASA,OAAOA,CAACpV,MAAM,EAAE;IACvB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACgF,MAAM,CAAC,CAAC;EACf;EAEAoQ,OAAO,CAACpQ,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAE;IACvC,OAAO,IAAIoV,OAAO,CAACpV,MAAM,CAAC;EAC5B,CAAC;EAED,IAAI2E,MAAM,GAAGyQ,OAAO,CAACxQ,SAAS;EAE9BD,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAChC,IAAI,CAAChF,MAAM,CAACsF,GAAG;IACf,IAAI+P,GAAG,GAAGR,MAAM,CAAC7P,MAAM,CAAC,IAAI,CAAChF,MAAM,CAAC;IAEpC,KAAK,IAAIhK,GAAG,IAAIqf,GAAG,EAAE;MACnB,IAAI7U,GAAG,GAAG6U,GAAG,CAACrf,GAAG,CAAC;MAClB,IAAI,CAACA,GAAG,CAAC,GAAGwK,GAAG;IACjB;IAEA,IAAI,IAAI,CAACtF,OAAO,GAAG,CAAC,EAAE;MACpB,IAAI,IAAI,CAAC8Z,YAAY,CAAC1f,MAAM,KAAK,CAAC,EAAE;QAClC,MAAM,IAAIN,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEA,IAAI,CAACmgB,OAAO,GAAG,IAAI,CAACH,YAAY,CAAC,CAAC,CAAC;IACrC;IAEA,IAAI,CAACM,SAAS,GAAG,IAAI,CAACH,OAAO,CAACI,GAAG,IAAI,IAAI;IACzC,OAAO,IAAI;EACb,CAAC;EAED5Q,MAAM,CAACzF,MAAM,GAAG,SAASA,MAAMA,CAACsW,GAAG,EAAE;IACnC,IAAI,IAAI,CAACta,OAAO,IAAI,CAAC,EAAE;MACrB,OAAO,IAAI;IACb;IAEA,IAAIsa,GAAG,GAAGvL,eAAe,CAAC3U,MAAM,EAAE;MAChC,OAAO2U,eAAe,CAACuL,GAAG,CAAC;IAC7B;IAEA,OAAO,IAAI,CAACP,WAAW,CAACO,GAAG,GAAGvL,eAAe,CAAC3U,MAAM,CAAC;EACvD,CAAC;EAEDqP,MAAM,CAAC8Q,aAAa,GAAG,SAASA,aAAaA,CAACC,KAAK,EAAE;IACnD,IAAI,CAAC1V,MAAM,CAACsF,GAAG,GAAG,IAAI,CAAC6P,OAAO,CAACrB,WAAW,CAAC4B,KAAK,CAAC,CAAC/P,MAAM;IACxD,OAAO,IAAI,CAAC3F,MAAM,CAAC2V,UAAU,CAAC,IAAI,CAACR,OAAO,CAACrB,WAAW,CAAC4B,KAAK,CAAC,CAACpgB,MAAM,CAAC;EACvE,CAAC;EAEDqP,MAAM,CAACiR,YAAY,GAAG,SAASA,YAAYA,CAACC,GAAG,EAAE;IAC/C;IACA,IAAI,IAAI,CAAC3a,OAAO,IAAI,CAAC,EAAE;MACrB,OAAO,IAAI;IACb,CAAC,CAAC;;IAGF,IAAI,IAAI,CAACoa,SAAS,EAAE;MAClB,OAAO,IAAI;IACb;IAEA,IAAIQ,OAAO,GAAG,IAAI,CAACX,OAAO,CAACW,OAAO;IAElC,IAAIjf,KAAK,CAAC0J,OAAO,CAACuV,OAAO,CAAC,EAAE;MAC1B,OAAOA,OAAO,CAACD,GAAG,CAAC;IACrB;IAEA,IAAIA,GAAG,KAAK,CAAC,EAAE;MACb,OAAO,SAAS;IAClB;IAEAA,GAAG,IAAI,CAAC;IAER,QAAQC,OAAO,CAAC5a,OAAO;MACrB,KAAK,CAAC;QACJ,OAAO,IAAI,CAACgE,MAAM,CAAC4W,OAAO,CAACrJ,MAAM,CAACoJ,GAAG,CAAC,CAAC;MAEzC,KAAK,CAAC;MACN,KAAK,CAAC;QACJ,KAAK,IAAIxgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGygB,OAAO,CAACxC,MAAM,CAAChe,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAIue,KAAK,GAAGkC,OAAO,CAACxC,MAAM,CAACje,CAAC,CAAC;UAE7B,IAAIue,KAAK,CAACjO,MAAM,IAAIkQ,GAAG,IAAIA,GAAG,IAAIjC,KAAK,CAACjO,MAAM,GAAGiO,KAAK,CAACZ,KAAK,EAAE;YAC5D,OAAO,IAAI,CAAC9T,MAAM,CAAC0U,KAAK,CAACb,KAAK,IAAI8C,GAAG,GAAGjC,KAAK,CAACjO,MAAM,CAAC,CAAC;UACxD;QACF;QAEA;IACJ;IAEA,OAAO,IAAI;EACb,CAAC;EAEDhB,MAAM,CAACoR,UAAU,GAAG,SAASA,UAAUA,CAACF,GAAG,EAAE;IAC3C,IAAI,CAAC,IAAI,CAACV,OAAO,CAAChB,QAAQ,EAAE;MAC1B,OAAO,IAAI;IACb;IAEA,QAAQ,IAAI,CAACgB,OAAO,CAAChB,QAAQ,CAACjZ,OAAO;MACnC,KAAK,CAAC;QACJ,OAAO,IAAI,CAACia,OAAO,CAAChB,QAAQ,CAACC,GAAG,CAACyB,GAAG,CAAC;MAEvC,KAAK,CAAC;MACN,KAAK,CAAC;QACJ,IAAIvC,MAAM,GAAG,IAAI,CAAC6B,OAAO,CAAChB,QAAQ,CAACb,MAAM;QACzC,IAAI0C,GAAG,GAAG,CAAC;QACX,IAAIC,IAAI,GAAG3C,MAAM,CAAChe,MAAM,GAAG,CAAC;QAE5B,OAAO0gB,GAAG,IAAIC,IAAI,EAAE;UAClB,IAAIC,GAAG,GAAGF,GAAG,GAAGC,IAAI,IAAI,CAAC;UAEzB,IAAIJ,GAAG,GAAGvC,MAAM,CAAC4C,GAAG,CAAC,CAACnD,KAAK,EAAE;YAC3BkD,IAAI,GAAGC,GAAG,GAAG,CAAC;UAChB,CAAC,MAAM,IAAIA,GAAG,GAAGD,IAAI,IAAIJ,GAAG,IAAIvC,MAAM,CAAC4C,GAAG,GAAG,CAAC,CAAC,CAACnD,KAAK,EAAE;YACrDiD,GAAG,GAAGE,GAAG,GAAG,CAAC;UACf,CAAC,MAAM;YACL,OAAO5C,MAAM,CAAC4C,GAAG,CAAC,CAACjC,EAAE;UACvB;QACF;MAEF;QACE,MAAM,IAAIjf,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAACmgB,OAAO,CAAChB,QAAQ,CAACjZ,OAAO,CAAC;IACjF;EACF,CAAC;EAEDyJ,MAAM,CAACwR,mBAAmB,GAAG,SAASA,mBAAmBA,CAACN,GAAG,EAAE;IAC7D,IAAI,IAAI,CAACV,OAAO,CAAChB,QAAQ,EAAE;MACzB,IAAIF,EAAE,GAAG,IAAI,CAAC8B,UAAU,CAACF,GAAG,CAAC;MAE7B,IAAI,IAAI,CAACV,OAAO,CAACiB,OAAO,CAACnC,EAAE,CAAC,EAAE;QAC5B,OAAO,IAAI,CAACkB,OAAO,CAACiB,OAAO,CAACnC,EAAE,CAAC,CAACoC,OAAO;MACzC;MAEA,OAAO,IAAI;IACb;IAEA,IAAI,IAAI,CAACnb,OAAO,GAAG,CAAC,EAAE;MACpB,OAAO,IAAI,CAACia,OAAO,CAACkB,OAAO;IAC7B;IAEA,OAAO,IAAI,CAAClB,OAAO,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EACxC,CAAC;EAEDziB,YAAY,CAACwhB,OAAO,EAAE,CAAC;IACrBpf,GAAG,EAAE,gBAAgB;IACrBE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACgF,OAAO,GAAG,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC6Z,SAAS,CAAC,CAAC,CAAC;MAC1B;MAEA,OAAO,IAAI;IACb;EACF,CAAC,EAAE;IACD/e,GAAG,EAAE,UAAU;IACfE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACgJ,MAAM,CAAC,IAAI,CAACiW,OAAO,CAACmB,QAAQ,CAAC;IAC3C;EACF,CAAC,EAAE;IACDtgB,GAAG,EAAE,YAAY;IACjBE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACgJ,MAAM,CAAC,IAAI,CAACiW,OAAO,CAACoB,UAAU,CAAC;IAC7C;EACF,CAAC,CAAC,CAAC;EAEH,OAAOnB,OAAO;AAChB,CAAC,CAAC,CAAC;AAEH,IAAIoB,cAAc,GAAG,IAAI9iB,CAAC,CAAC0D,MAAM,CAAC;EAChCqf,UAAU,EAAE/iB,CAAC,CAAC4D,MAAM;EACpBof,WAAW,EAAEhjB,CAAC,CAAC+D;AACjB,CAAC,CAAC;AACF,IAAIkf,IAAI,GAAG,IAAIjjB,CAAC,CAAC0D,MAAM,CAAC;EACtBib,YAAY,EAAE3e,CAAC,CAAC4D,MAAM;EACtBgb,YAAY,EAAE5e,CAAC,CAAC4D,MAAM;EACtBsf,kBAAkB,EAAEljB,CAAC,CAAC+D,KAAK;EAC3Bof,qBAAqB,EAAEnjB,CAAC,CAAC4D,MAAM;EAC/BmG,OAAO,EAAE,IAAI/J,CAAC,CAACmD,KAAK,CAAC2f,cAAc,EAAE,uBAAuB;AAC9D,CAAC,CAAC;AAEF,IAAIM,UAAU,GAAG,IAAIpjB,CAAC,CAAC0D,MAAM,CAAC;EAC5B2f,MAAM,EAAErjB,CAAC,CAAC0E,KAAK;EACf4e,KAAK,EAAEtjB,CAAC,CAAC0E,KAAK;EACd6e,YAAY,EAAEvjB,CAAC,CAAC8c,IAAI;EACpB0G,YAAY,EAAExjB,CAAC,CAAC8c,IAAI;EACpB2G,WAAW,EAAEzjB,CAAC,CAAC0E,KAAK;EACpBgf,YAAY,EAAE1jB,CAAC,CAAC8c,IAAI;EACpB6G,YAAY,EAAE3jB,CAAC,CAAC8c,IAAI;EACpB8G,WAAW,EAAE5jB,CAAC,CAAC0E;AACjB,CAAC,CAAC;AACF,IAAImf,YAAY,GAAG,IAAI7jB,CAAC,CAAC0D,MAAM,CAAC;EAC9B2f,MAAM,EAAErjB,CAAC,CAAC0E,KAAK;EACf4e,KAAK,EAAEtjB,CAAC,CAAC0E,KAAK;EACdof,QAAQ,EAAE9jB,CAAC,CAAC8c,IAAI;EAChBiH,QAAQ,EAAE/jB,CAAC,CAAC8c,IAAI;EAChBlT,OAAO,EAAE5J,CAAC,CAAC0E;AACb,CAAC,CAAC;AACF,IAAIsf,aAAa,GAAG,IAAIhkB,CAAC,CAAC0D,MAAM,CAAC;EAC/Bse,KAAK,EAAEhiB,CAAC,CAAC4D,MAAM;EACfqgB,OAAO,EAAEjkB,CAAC,CAAC8c,IAAI;EACfoH,OAAO,EAAElkB,CAAC,CAAC8c;AACb,CAAC,CAAC;AAEF,IAAIqH,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG,CAAC,CAAC;AAE3C,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG,CAAC,CAAC;AAEzC,IAAIpkB,CAAC,CAACsF,eAAe,CAAC,SAAS,EAAE;EAC/B,CAAC,EAAE;IACDyE,OAAO,EAAE8Z,YAAY;IACrBQ,IAAI,EAAEF;EACR,CAAC;EACD,CAAC,EAAE;IACDpa,OAAO,EAAE8Z,YAAY;IACrBQ,IAAI,EAAED;EACR,CAAC;EACD;EACA;EACA,CAAC,EAAE;IACDC,IAAI,EAAED;EACR,CAAC;EACD,CAAC,EAAE;IACDra,OAAO,EAAEqZ,UAAU;IACnBiB,IAAI,EAAEF;EACR,CAAC;EACD,CAAC,EAAE;IACDpa,OAAO,EAAEqZ,UAAU;IACnBiB,IAAI,EAAED;EACR,CAAC;EACD,CAAC,EAAE;IACDra,OAAO,EAAE8Z,YAAY;IACrBS,GAAG,EAAE,IAAItkB,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,CAAC;IAC5B6f,aAAa,EAAEvkB,CAAC,CAAC4D,MAAM;IACvB4gB,UAAU,EAAE,IAAIxkB,CAAC,CAACmD,KAAK,CAAC6gB,aAAa,EAAE,eAAe;EACxD,CAAC;EACD,CAAC,EAAE;IACDja,OAAO,EAAEqZ,UAAU;IACnBkB,GAAG,EAAE,IAAItkB,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,CAAC;IAC5B6f,aAAa,EAAEvkB,CAAC,CAAC4D,MAAM;IACvB4gB,UAAU,EAAE,IAAIxkB,CAAC,CAACmD,KAAK,CAAC6gB,aAAa,EAAE,eAAe;EACxD,CAAC;EACD,EAAE,EAAE;IACFja,OAAO,EAAE8Z,YAAY;IACrBY,OAAO,EAAEzkB,CAAC,CAACmE,MAAM;IACjBkgB,IAAI,EAAE,IAAIrkB,CAAC,CAACgN,MAAM,CAAC,SAAS;EAC9B,CAAC;EACD,EAAE,EAAE;IACFjD,OAAO,EAAEqZ,UAAU;IACnBqB,OAAO,EAAEzkB,CAAC,CAACmE,MAAM;IACjBkgB,IAAI,EAAE,IAAIrkB,CAAC,CAACgN,MAAM,CAAC,SAAS;EAC9B,CAAC;EACD,EAAE,EAAE;IACFyX,OAAO,EAAEzkB,CAAC,CAACmE,MAAM;IACjBkgB,IAAI,EAAE,IAAIrkB,CAAC,CAACgN,MAAM,CAAC,SAAS;EAC9B;AACF,CAAC,CAAC;AAEF,IAAI0X,eAAe,GAAG,IAAI1kB,CAAC,CAAC0D,MAAM,CAAC;EACjCihB,QAAQ,EAAE3kB,CAAC,CAAC8c,IAAI;EAChB8H,SAAS,EAAE5kB,CAAC,CAAC8c,IAAI;EACjB+H,QAAQ,EAAE7kB,CAAC,CAAC0E,KAAK;EACjBogB,mBAAmB,EAAE9kB,CAAC,CAAC8c,IAAI;EAC3BiI,qBAAqB,EAAE/kB,CAAC,CAAC8c,IAAI;EAC7BtT,WAAW,EAAExJ,CAAC,CAAC8c,IAAI;EACnBkI,WAAW,EAAEhlB,CAAC,CAAC8c,IAAI;EACnBmI,YAAY,EAAEjlB,CAAC,CAAC8c,IAAI;EACpBoI,WAAW,EAAEllB,CAAC,CAAC8c,IAAI;EACnBqI,UAAU,EAAEnlB,CAAC,CAAC8c,IAAI;EAClBwH,GAAG,EAAE,IAAItkB,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC8c,IAAI,EAAE,CAAC;AAC/B,CAAC,CAAC;AACF,IAAIsI,cAAc,GAAG,IAAIplB,CAAC,CAAC0D,MAAM,CAAC;EAChC2hB,SAAS,EAAErlB,CAAC,CAAC4D,MAAM;EACnBqO,MAAM,EAAEjS,CAAC,CAAC4D;AACZ,CAAC,CAAC;AACF,IAAI0hB,aAAa,GAAG,IAAItlB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAClDyJ,MAAM,EAAE;IACNkY,WAAW,EAAEvlB,CAAC,CAAC4D,MAAM;IACrB4hB,eAAe,EAAExlB,CAAC,CAACmE;EACrB,CAAC;EACD,CAAC,EAAE;IACDshB,WAAW,EAAE,IAAIzlB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,UAAUyB,CAAC,EAAE;MAC9C,OAAOA,CAAC,CAACoE,MAAM,CAAC0b,cAAc,GAAG9f,CAAC,CAACoE,MAAM,CAAC2b,eAAe,GAAG,CAAC;IAC/D,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACDC,SAAS,EAAE5lB,CAAC,CAACmE,MAAM;IACnB0hB,UAAU,EAAEzC;EACd,CAAC;EACD,CAAC,EAAE;IACDqC,WAAW,EAAE,IAAIzlB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;MAC9C,OAAOA,CAAC,CAACoE,MAAM,CAAC0b,cAAc,GAAG9f,CAAC,CAACoE,MAAM,CAAC2b,eAAe,GAAG,CAAC;IAC/D,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACDxb,SAAS,EAAEnK,CAAC,CAACmE,MAAM;IACnB2hB,UAAU,EAAE,IAAI9lB,CAAC,CAACmD,KAAK,CAACiiB,cAAc,EAAE,UAAUxf,CAAC,EAAE;MACnD,OAAOA,CAAC,CAACuE,SAAS,GAAG,CAAC;IACxB,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACDyb,SAAS,EAAE5lB,CAAC,CAACmE,MAAM;IACnB0hB,UAAU,EAAEzC,UAAU;IACtBjZ,SAAS,EAAEnK,CAAC,CAACmE,MAAM;IACnB4hB,cAAc,EAAE,IAAI/lB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,WAAW;EACnD;AACF,CAAC,CAAC;AACF,IAAIoiB,kBAAkB,GAAG,IAAIhmB,CAAC,CAAC0D,MAAM,CAAC;EACpCiiB,eAAe,EAAE3lB,CAAC,CAAC4D,MAAM;EACzB8hB,cAAc,EAAE1lB,CAAC,CAAC4D,MAAM;EACxBqiB,QAAQ,EAAE,IAAIjmB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEmhB,aAAa;AACjD,CAAC,CAAC;AACF,IAAIY,eAAe,GAAG,IAAIlmB,CAAC,CAAC0D,MAAM,CAAC;EACjCyiB,kBAAkB,EAAE,IAAInmB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAAC6iB,kBAAkB,EAAE,CAAC,CAAC,EAAE;IAC9E7gB,IAAI,EAAE;EACR,CAAC,CAAC;EACFihB,eAAe,EAAEpmB,CAAC,CAACmE,MAAM;EACzBkiB,sBAAsB,EAAErmB,CAAC,CAACmE,MAAM;EAChCmiB,QAAQ,EAAEtmB,CAAC,CAACmE,MAAM;EAClBoiB,IAAI,EAAE7B,eAAe;EACrB8B,IAAI,EAAE9B,eAAe;EACrB+B,eAAe,EAAEzmB,CAAC,CAAC4D,MAAM;EACzB8iB,aAAa,EAAE1mB,CAAC,CAAC4D,MAAM;EACvB+iB,KAAK,EAAE3mB,CAAC,CAAC0E,KAAK;EACdkiB,KAAK,EAAE5mB,CAAC,CAAC0E,KAAK;EACdmiB,QAAQ,EAAE7mB,CAAC,CAAC0E,KAAK;EACjBsD,KAAK,EAAE,IAAIhI,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC0E,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;AAC3D,CAAC,CAAC;AACF,IAAIoiB,IAAI,GAAG,IAAI9mB,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAACmE,MAAM;EACjB;EACA4iB,QAAQ,EAAE/mB,CAAC,CAACmE,MAAM;EAClBmO,KAAK,EAAE,IAAItS,CAAC,CAACmD,KAAK,CAAC+iB,eAAe,EAAE,UAAU;AAChD,CAAC,CAAC;AAEF,IAAIc,UAAU,GAAG,IAAIhnB,CAAC,CAAC0D,MAAM,CAAC;EAC5BujB,IAAI,EAAEjnB,CAAC,CAAC4D,MAAM;EACdsjB,UAAU,EAAElnB,CAAC,CAAC4D,MAAM;EACpBujB,YAAY,EAAE,IAAInnB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,MAAM,CAAC,EAAE,UAAUyB,CAAC,EAAE;IACtE,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAACE,IAAI,CAACC,SAAS,GAAG,CAAC;EAC3C,CAAC;AACH,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA,IAAIid,IAAI,GAAG,IAAIpnB,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBoE,KAAK,EAAE,IAAIhI,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC4D,MAAM,EAAE,CAAC,gBAAgB,CAAC,CAAC;EACnDyjB,YAAY,EAAErnB,CAAC,CAACmE,MAAM;EACtBmjB,WAAW,EAAE,IAAItnB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE6iB,UAAU,CAAC,EAAE,cAAc;AAC9E,CAAC,CAAC;AAEF,IAAIO,WAAW,GAAG,IAAIvnB,CAAC,CAAC0D,MAAM,CAAC;EAC7Bye,GAAG,EAAEniB,CAAC,CAAC4D,MAAM;EACb;EACA4jB,YAAY,EAAExnB,CAAC,CAAC4D,MAAM,CAAC;AAEzB,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;AACA;;AAEA,IAAI6jB,eAAe,GAAG,IAAIznB,CAAC,CAAC0D,MAAM,CAAC;EACjCye,GAAG,EAAEniB,CAAC,CAAC4D,MAAM;EACb;EACA;EACA8jB,eAAe,EAAE1nB,CAAC,CAAC4D,MAAM;EACzB;EACA;EACA+jB,SAAS,EAAE3nB,CAAC,CAAC4D;AACf,CAAC,CAAC;AACF,IAAIgkB,IAAI,GAAG,IAAI5nB,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBikB,mBAAmB,EAAE7nB,CAAC,CAAC4D,MAAM;EAC7BkkB,eAAe,EAAE,IAAI9nB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAACskB,eAAe,EAAE,qBAAqB,CAAC,CAAC;EAC7FM,YAAY,EAAE,IAAI/nB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAACokB,WAAW,EAAE,iBAAiB,CAAC,EAAE;IACjFjgB,IAAI,EAAE;EACR,CAAC,CAAC;EACF0gB,eAAe,EAAEhoB,CAAC,CAAC4D;AACrB,CAAC,CAAC;AAEF,IAAIqkB,WAAW,GAAG,IAAIjoB,CAAC,CAAC0D,MAAM,CAAC;EAC7BwkB,IAAI,EAAEloB,CAAC,CAAC0E,KAAK;EACbyjB,KAAK,EAAEnoB,CAAC,CAAC0E,KAAK;EACd0jB,GAAG,EAAEpoB,CAAC,CAAC0E,KAAK;EACZ2jB,KAAK,EAAEroB,CAAC,CAAC0E;AACX,CAAC,CAAC;AACF,IAAI4jB,IAAI,GAAG,IAAItoB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EACzCyJ,MAAM,EAAE;IACNkb,iBAAiB,EAAEvoB,CAAC,CAAC4D,MAAM;IAC3B4kB,WAAW,EAAExoB,CAAC,CAAC4D,MAAM;IACrB6kB,eAAe,EAAEzoB,CAAC,CAAC4D,MAAM;IACzB8kB,YAAY,EAAE,IAAI1oB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAAC8kB,WAAW,EAAE,iBAAiB,CAAC,CAAC;IAClFU,kBAAkB,EAAE,IAAI3oB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,aAAa;EACzD,CAAC;EACD,CAAC,EAAE,CAAC,CAAC;EACL,CAAC,EAAE;IACDglB,sBAAsB,EAAE,IAAI5oB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAACmE,MAAM,EAAE,aAAa,CAAC,CAAC;IACrF0kB,uBAAuB,EAAE,IAAI7oB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,aAAa,CAAC,CAAC;IACtFklB,4BAA4B,EAAE,IAAI9oB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,mBAAmB,CAAC;EAClG;AACF,CAAC,CAAC;AAEF,IAAImlB,SAAS,GAAG,IAAI/oB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC9C,CAAC,EAAE;IACD;IACAolB,UAAU,EAAEhpB,CAAC,CAAC+D,KAAK,CAAC;EAEtB,CAAC;EACD,CAAC,EAAE;IACD;IACAilB,UAAU,EAAEhpB,CAAC,CAAC+D,KAAK;IACnB;IACAklB,cAAc,EAAEjpB,CAAC,CAAC4D,MAAM;IACxB;IACAslB,cAAc,EAAElpB,CAAC,CAAC4D,MAAM,CAAC;EAE3B,CAAC;EACD,CAAC,EAAE;IACD;IACAolB,UAAU,EAAEhpB,CAAC,CAAC+D,KAAK;IACnB;IACAolB,WAAW,EAAE,IAAInpB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,CAAC,CAAC;EAE/C;AACF,CAAC,CAAC;AACF,IAAI2P,UAAU,GAAG,IAAIppB,CAAC,CAAC0D,MAAM,CAAC;EAC5B2lB,YAAY,EAAErpB,CAAC,CAAC4D,MAAM;EACtB;EACA0lB,cAAc,EAAEtpB,CAAC,CAAC4D,MAAM;EACxB2lB,UAAU,EAAE,IAAIvpB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmlB,SAAS,CAAC,EAAE,gBAAgB;AAC9E,CAAC,CAAC;AACF,IAAIS,gBAAgB,GAAG,IAAIxpB,CAAC,CAAC0D,MAAM,CAAC;EAClCmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB;EACAge,QAAQ,EAAE,IAAIzpB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmlB,SAAS,EAAE;IAC3C5jB,IAAI,EAAE;EACR,CAAC,CAAC;EACF;EACAukB,QAAQ,EAAE,IAAI1pB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmlB,SAAS,EAAE;IAC3C5jB,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC;AACF,IAAIwkB,MAAM,GAAG,IAAI3pB,CAAC,CAAC0D,MAAM,CAAC;EACxB+lB,QAAQ,EAAE,IAAIzpB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmlB,SAAS,CAAC;EAC5C;EACAW,QAAQ,EAAE,IAAI1pB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmlB,SAAS,CAAC;EAC5C;EACAa,eAAe,EAAE5pB,CAAC,CAAC4D,MAAM;EACzB;EACAimB,iBAAiB,EAAE,IAAI7pB,CAAC,CAACmD,KAAK,CAACqmB,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;AAEtE,CAAC,CAAC;AACF,IAAIM,iBAAiB,GAAG,IAAI9pB,CAAC,CAAC0D,MAAM,CAAC;EACnCmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB;EACAse,MAAM,EAAE,IAAI/pB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE+lB,MAAM,EAAE;IACtCxkB,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAI6kB,UAAU,GAAG,IAAIhqB,CAAC,CAAC0D,MAAM,CAAC;EAC5BumB,UAAU,EAAE,IAAIjqB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwlB,UAAU,CAAC;EAC/C;EACAc,aAAa,EAAE,IAAIlqB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE+lB,MAAM,CAAC;EAC9C;EACAQ,gBAAgB,EAAEnqB,CAAC,CAAC4D,MAAM;EAC1B;EACAwmB,kBAAkB,EAAE,IAAIpqB,CAAC,CAACmD,KAAK,CAAC2mB,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;AAEzE,CAAC,CAAC;AACF,IAAIO,gBAAgB,GAAG,IAAIrqB,CAAC,CAAC0D,MAAM,CAAC;EAClCmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB;EACA8L,MAAM,EAAE,IAAIvX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEomB,UAAU,EAAE;IAC1C7kB,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAImlB,cAAc,GAAG,IAAItqB,CAAC,CAACmD,KAAK,CAACknB,gBAAgB,EAAErqB,CAAC,CAAC4D,MAAM,CAAC,CAAC,CAAC;;AAE9D,IAAI2mB,WAAW,GAAG,IAAIvqB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC,EAAEzL,CAAC,CAAC4D,MAAM,CAAC;AACxD,IAAI4mB,MAAM,GAAG,IAAIxqB,CAAC,CAAC0D,MAAM,CAAC;EACxB+mB,WAAW,EAAE,IAAIzqB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE2mB,WAAW,CAAC;EACjD;EACAG,cAAc,EAAE,IAAI1qB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE0mB,cAAc;AACxD,CAAC,CAAC;AACF,IAAIK,IAAI,GAAG,IAAI3qB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAACmE,MAAM,EAAE;EACzCkJ,MAAM,EAAE;IACNud,SAAS,EAAE,IAAI5qB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE4mB,MAAM,CAAC;IAC1C;IACAK,QAAQ,EAAE,IAAI7qB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE4mB,MAAM,CAAC,CAAC;EAE5C,CAAC;EACD,UAAU,EAAE,CAAC,CAAC;EACd,UAAU,EAAE;IACVvJ,kBAAkB,EAAE,IAAIjhB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEmZ,kBAAkB;EAChE;AACF,CAAC,CAAC;AAEF,IAAIwN,WAAW,GAAG,IAAI9qB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE5D,CAAC,CAAC4D,MAAM,CAAC;AACjD,IAAImnB,UAAU,GAAG,IAAI/qB,CAAC,CAAC0D,MAAM,CAAC;EAC5B6W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;EAC3CC,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;EACpBonB,YAAY,EAAE,IAAIhrB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEknB,WAAW,CAAC,EAAE,YAAY;AAC9E,CAAC,CAAC;AACF,IAAIG,UAAU,GAAG,IAAIjrB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC/C,CAAC,EAAE;IACD;IACAolB,UAAU,EAAEhpB,CAAC,CAAC+D;EAChB,CAAC;EACD,CAAC,EAAE;IACD;IACAmnB,eAAe,EAAElrB,CAAC,CAAC4D;EACrB,CAAC;EACD,CAAC,EAAE;IACD;IACAolB,UAAU,EAAEhpB,CAAC,CAAC+D,KAAK;IACnBolB,WAAW,EAAE,IAAInpB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM;EAC7C;AACF,CAAC,CAAC;AACF,IAAI0R,QAAQ,GAAG,IAAInrB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEqnB,UAAU,CAAC,EAAEjrB,CAAC,CAAC4D,MAAM,CAAC;AACzE,IAAIwnB,YAAY,GAAG,IAAIprB,CAAC,CAAC0D,MAAM,CAAC;EAC9B6W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;EAC3CwS,aAAa,EAAErrB,CAAC,CAAC4D,MAAM;EACvB0nB,SAAS,EAAE,IAAItrB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEunB,QAAQ,CAAC,EAAE,eAAe;AAC3E,CAAC,CAAC;AACF,IAAII,gBAAgB,GAAG,IAAIvrB,CAAC,CAAC0D,MAAM,CAAC;EAClC8nB,kBAAkB,EAAExrB,CAAC,CAAC4D,MAAM;EAC5B6nB,YAAY,EAAEzrB,CAAC,CAAC4D,MAAM;EACtB2W,QAAQ,EAAE,IAAIva,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE0U,QAAQ,CAAC,EAAE,cAAc;AACzE,CAAC,CAAC;AACF,IAAI6S,IAAI,GAAG,IAAI1rB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAACmE,MAAM,EAAE;EACzCkJ,MAAM,EAAE;IACNse,aAAa,EAAE,IAAI3rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;IAChDwS,UAAU,EAAE,IAAI5rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmnB,UAAU,CAAC;IAC/Cc,YAAY,EAAE,IAAI7rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwnB,YAAY,CAAC;IACnDU,kBAAkB,EAAE,IAAI9rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ;EACtD,CAAC;EACD,UAAU,EAAE,CAAC,CAAC;EACd,UAAU,EAAE;IACV2S,gBAAgB,EAAE,IAAI/rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE2nB,gBAAgB;EAC5D,CAAC;EACD,UAAU,EAAE;IACVQ,gBAAgB,EAAE,IAAI/rB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE2nB,gBAAgB,CAAC;IAC3DtK,kBAAkB,EAAE,IAAIjhB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEmZ,kBAAkB;EAChE;AACF,CAAC,CAAC;AAEF,IAAI0O,WAAW,GAAG,IAAIhsB,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC4D,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;AACxJ,IAAIqoB,KAAK,GAAG;EACVC,UAAU,EAAElsB,CAAC,CAAC+D,KAAK;EACnBooB,UAAU,EAAEnsB,CAAC,CAAC+D,KAAK;EACnBqoB,QAAQ,EAAEpsB,CAAC,CAAC+D,KAAK;EACjBsoB,QAAQ,EAAErsB,CAAC,CAAC+D,KAAK;EACjBuoB,UAAU,EAAE,IAAItsB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,EAAE;IAC1CtU,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC,CAAC;EACF6gB,UAAU,EAAE,IAAIvsB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,EAAE;IAC1CtU,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC,CAAC;EACF8gB,UAAU,EAAE,IAAIxsB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,EAAE;IAC1CtU,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC,CAAC;EACF+gB,UAAU,EAAE,IAAIzsB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,EAAE;IAC1CtU,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC;AACH,CAAC;AAED,IAAIghB,WAAW,GAAG,aAAa,YAAY;EACzC,SAASA,WAAWA,CAACpqB,GAAG,EAAE;IACxB,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;MAClBA,GAAG,GAAG,aAAa;IACrB;IAEA,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;EAEA,IAAI2O,MAAM,GAAGyb,WAAW,CAACxb,SAAS;EAElCD,MAAM,CAAC0b,WAAW,GAAG,SAASA,WAAWA,CAAC3iB,MAAM,EAAE;IAChD,IAAI4iB,MAAM,GAAG5iB,MAAM;IAEnB,OAAO,CAAC4iB,MAAM,CAAC,IAAI,CAACtqB,GAAG,CAAC,IAAIsqB,MAAM,CAAC5iB,MAAM,EAAE;MACzC4iB,MAAM,GAAGA,MAAM,CAAC5iB,MAAM;IACxB;IAEA,IAAI,CAAC4iB,MAAM,CAAC,IAAI,CAACtqB,GAAG,CAAC,EAAE;IACvB,IAAI4R,MAAM,GAAG,CAAC,CAAC;IAEfA,MAAM,CAAC2Y,GAAG,GAAG,YAAY;MACvB,OAAOD,MAAM,CAACjY,YAAY;IAC5B,CAAC;IAED,IAAI1T,MAAM,GAAG2rB,MAAM,CAAC,IAAI,CAACtqB,GAAG,CAAC;IAE7B,KAAK,IAAIA,GAAG,IAAIrB,MAAM,EAAE;MACtB,IAAIA,MAAM,CAACqB,GAAG,CAAC,EAAE;QACf4R,MAAM,CAAC5R,GAAG,CAAC,GAAG2pB,KAAK,CAAC3pB,GAAG,CAAC;MAC1B;IACF;IAEA,OAAO,IAAItC,CAAC,CAAC0D,MAAM,CAACwQ,MAAM,CAAC;EAC7B,CAAC;EAEDjD,MAAM,CAAC9D,IAAI,GAAG,SAASA,IAAIA,CAACL,GAAG,EAAEsE,GAAG,EAAE;IACpC,OAAO,IAAI,CAACub,WAAW,CAACvb,GAAG,CAAC,CAACjE,IAAI,CAACL,GAAG,EAAEsE,GAAG,CAAC;EAC7C,CAAC;EAEDH,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC9C,IAAIiW,GAAG,GAAG,IAAI,CAAC0M,WAAW,CAAC3iB,MAAM,CAAC,CAACsH,MAAM,CAAChF,MAAM,EAAEtC,MAAM,CAAC;IACzD,OAAOiW,GAAG,CAAC4M,GAAG;IACd,OAAO5M,GAAG;EACZ,CAAC;EAED,OAAOyM,WAAW;AACpB,CAAC,CAAC,CAAC;AAEH,IAAII,eAAe,GAAG,IAAI9sB,CAAC,CAAC0D,MAAM,CAAC;EACjCqpB,WAAW,EAAE/sB,CAAC,CAAC4D,MAAM;EACrBopB,MAAM,EAAE,IAAIN,WAAW,CAAC,cAAc,CAAC;EACvCO,MAAM,EAAE,IAAIP,WAAW,CAAC,cAAc;AACxC,CAAC,CAAC;AACF,IAAIQ,OAAO,GAAG,IAAIltB,CAAC,CAACmD,KAAK,CAAC2pB,eAAe,EAAE9sB,CAAC,CAAC4D,MAAM,CAAC;AACpD,IAAIupB,YAAY,GAAG,IAAIntB,CAAC,CAAC0D,MAAM,CAAC;EAC9BspB,MAAM,EAAE,IAAIN,WAAW,CAAC,cAAc,CAAC;EACvCO,MAAM,EAAE,IAAIP,WAAW,CAAC,cAAc;AACxC,CAAC,CAAC;AACF,IAAIU,MAAM,GAAG,IAAIptB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EAC3C,CAAC,EAAE;IACD;IACAypB,WAAW,EAAErtB,CAAC,CAAC+D,KAAK;IACpBupB,WAAW,EAAEttB,CAAC,CAAC+D;EACjB,CAAC;EACD,CAAC,EAAE;IACD;IACAspB,WAAW,EAAErtB,CAAC,CAAC+D,KAAK;IACpBupB,WAAW,EAAEttB,CAAC,CAAC+D,KAAK;IACpBwpB,WAAW,EAAEvtB,CAAC,CAAC4D;EACjB,CAAC;EACD,CAAC,EAAE;IACD;IACAypB,WAAW,EAAErtB,CAAC,CAAC+D,KAAK;IACpBupB,WAAW,EAAEttB,CAAC,CAAC+D,KAAK;IACpBypB,YAAY,EAAE,IAAIxtB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM,CAAC;IAC7CgU,YAAY,EAAE,IAAIztB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6V,MAAM;EAC9C;AACF,CAAC,CAAC;AACF,IAAIiU,eAAe,GAAG,IAAI1tB,CAAC,CAAC0D,MAAM,CAAC;EACjCiqB,WAAW,EAAE,IAAI3tB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwpB,MAAM,EAAE;IAC3CjoB,IAAI,EAAE;EACR,CAAC,CAAC;EACFyoB,UAAU,EAAE,IAAI5tB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwpB,MAAM,EAAE;IAC1CjoB,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAI0oB,UAAU,GAAG,IAAI7tB,CAAC,CAAC0D,MAAM,CAAC;EAC5ByV,KAAK,EAAEnZ,CAAC,CAAC4D,MAAM;EACfkqB,UAAU,EAAE,IAAI9tB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwpB,MAAM,EAAE;IAC1CjoB,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAI4oB,SAAS,GAAG,IAAI/tB,CAAC,CAACmD,KAAK,CAAC0qB,UAAU,EAAE7tB,CAAC,CAAC4D,MAAM,CAAC;AACjD,IAAIoqB,UAAU,GAAG,IAAIhuB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwpB,MAAM,CAAC,EAAE,UAAUxnB,CAAC,EAAE;EACzE,OAAOA,CAAC,CAACoE,MAAM,CAACikB,UAAU;AAC5B,CAAC,CAAC;AACF,IAAIC,SAAS,GAAG,IAAIluB,CAAC,CAACmD,KAAK,CAAC6qB,UAAU,EAAEhuB,CAAC,CAAC4D,MAAM,CAAC;AACjD,IAAIuqB,eAAe,GAAG,IAAInuB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwpB,MAAM,CAAC,EAAE,UAAUxnB,CAAC,EAAE;EAC9E,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAACikB,UAAU;AACnC,CAAC,CAAC;AACF,IAAIG,cAAc,GAAG,IAAIpuB,CAAC,CAACmD,KAAK,CAACgrB,eAAe,EAAEnuB,CAAC,CAAC4D,MAAM,CAAC;AAC3D,IAAIyqB,aAAa,GAAG,IAAIruB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwqB,cAAc,CAAC,EAAEpuB,CAAC,CAAC4D,MAAM,CAAC;AAClF,IAAI0qB,UAAU,GAAG,IAAItuB,CAAC,CAACsF,eAAe,CAAC,YAAY,EAAE;EACnD,CAAC,EAAE,IAAItF,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;IACjC;IACA,CAAC,EAAE;MACD;MACA2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3C0V,WAAW,EAAEvC,WAAW;MACxBvpB,KAAK,EAAE,IAAIiqB,WAAW,CAAC;IACzB,CAAC;IACD,CAAC,EAAE;MACDnS,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3C0V,WAAW,EAAEvC,WAAW;MACxBwC,UAAU,EAAExuB,CAAC,CAAC4D,MAAM;MACpB6qB,MAAM,EAAE,IAAIzuB,CAAC,CAACyF,SAAS,CAAC,IAAIinB,WAAW,CAAC,CAAC,EAAE,YAAY;IACzD;EACF,CAAC,CAAC;EACF,CAAC,EAAE,IAAI1sB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;IACjC;IACA,CAAC,EAAE;MACD;MACA2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3C6V,YAAY,EAAE1C,WAAW;MACzB2C,YAAY,EAAE3C,WAAW;MACzB4C,YAAY,EAAE5uB,CAAC,CAAC4D,MAAM;MACtBirB,QAAQ,EAAE,IAAI7uB,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEspB,OAAO,CAAC,EAAE,cAAc;IAC5E,CAAC;IACD,CAAC,EAAE;MACD;MACA3S,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3C6V,YAAY,EAAE1C,WAAW;MACzB2C,YAAY,EAAE3C,WAAW;MACzB8C,SAAS,EAAE,IAAI9uB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;MAC5C2V,SAAS,EAAE,IAAI/uB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwV,QAAQ,CAAC;MAC5C4V,WAAW,EAAEhvB,CAAC,CAAC4D,MAAM;MACrBqrB,WAAW,EAAEjvB,CAAC,CAAC4D,MAAM;MACrBsrB,YAAY,EAAE,IAAIlvB,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACyF,SAAS,CAAC0nB,YAAY,EAAE,aAAa,CAAC,EAAE,aAAa;IAC3F;EACF,CAAC,CAAC;EACF,CAAC,EAAE;IACD;IACAlsB,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;IAChB2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3CsW,cAAc,EAAEnvB,CAAC,CAAC4D,MAAM;IACxBwrB,gBAAgB,EAAE,IAAIpvB,CAAC,CAACmD,KAAK,CAACuqB,eAAe,EAAE,gBAAgB;EACjE,CAAC;EACD,CAAC,EAAE;IACD;IACAzsB,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;IAChByrB,YAAY,EAAE,IAAIrvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC/CyW,YAAY,EAAE,IAAItvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC/CoV,UAAU,EAAEjuB,CAAC,CAAC4D,MAAM;IACpB2rB,SAAS,EAAE,IAAIvvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmqB,SAAS,CAAC;IAC7CyB,SAAS,EAAE,IAAIxvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEsqB,SAAS;EAC9C,CAAC;EACD,CAAC,EAAE;IACD;IACAjtB,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;IAChByrB,YAAY,EAAE,IAAIrvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC/C4W,gBAAgB,EAAE,IAAIzvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IACnDoV,UAAU,EAAEjuB,CAAC,CAAC4D,MAAM;IACpB2rB,SAAS,EAAE,IAAIvvB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmqB,SAAS,CAAC;IAC7C2B,aAAa,EAAE,IAAI1vB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEyqB,aAAa;EACtD,CAAC;EACD,CAAC,EAAE;IACD;IACAptB,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;IAChB+rB,aAAa,EAAE,IAAI3vB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAChD+W,aAAa,EAAE,IAAI5vB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAChDoV,UAAU,EAAEjuB,CAAC,CAAC4D,MAAM;IACpBisB,UAAU,EAAE,IAAI7vB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmqB,SAAS,CAAC;IAC9C+B,UAAU,EAAE,IAAI9vB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEsqB,SAAS;EAC/C,CAAC;EACD,CAAC,EAAE5T,OAAO;EACV;EACA,CAAC,EAAEe,eAAe;EAClB;EACA,CAAC,EAAE;IACD;IACA0U,SAAS,EAAE/vB,CAAC,CAAC4D,MAAM;IACnByU,UAAU,EAAErY,CAAC,CAAC4D,MAAM;IACpB;IACAosB,SAAS,EAAE,IAAIhwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE8rB,SAAS;EAC9C;AACF,CAAC,CAAC,CAAC,CAAC;;AAEJ3B,UAAU,CAAC9e,QAAQ,CAAC,CAAC,CAAC,CAACwgB,SAAS,CAAC7qB,IAAI,GAAGmpB,UAAU;AAClD,IAAI4B,IAAI,GAAG,IAAIlwB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAACmE,MAAM,EAAE;EACzCkJ,MAAM,EAAE;IACN8iB,UAAU,EAAE,IAAInwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE4T,UAAU,CAAC;IAC/C4Y,WAAW,EAAE,IAAIpwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmU,WAAW,CAAC;IACjDsY,UAAU,EAAE,IAAIrwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAIsU,UAAU,CAACoW,UAAU,CAAC;EAChE,CAAC;EACD,UAAU,EAAE,CAAC,CAAC;EACd,UAAU,EAAE;IACVgC,iBAAiB,EAAE,IAAItwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEua,iBAAiB;EAC9D;AACF,CAAC,CAAC,CAAC,CAAC;;AAEJ,IAAI6R,QAAQ,GAAG,IAAIvwB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE5D,CAAC,CAAC4D,MAAM,CAAC;AAC9C,IAAI4sB,YAAY,GAAGD,QAAQ;AAC3B,IAAIE,QAAQ,GAAG,IAAIzwB,CAAC,CAAC0D,MAAM,CAAC;EAC1Bse,KAAK,EAAEhiB,CAAC,CAAC4D,MAAM;EACf8sB,SAAS,EAAE1wB,CAAC,CAAC4D,MAAM;EACnB4gB,UAAU,EAAE,IAAIxkB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IAC7C,OAAOA,CAAC,CAAC8qB,SAAS,GAAG,CAAC;EACxB,CAAC;AACH,CAAC,CAAC;AACF,IAAIC,WAAW,GAAG,IAAI3wB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE6sB,QAAQ,CAAC,EAAEzwB,CAAC,CAAC4D,MAAM,CAAC;AAC1E,IAAIgtB,UAAU,GAAG,IAAI5wB,CAAC,CAACsF,eAAe,CAAC,YAAY,EAAE;EACnD,CAAC,EAAE,IAAItF,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;IACjC;IACA,CAAC,EAAE;MACD2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3CgY,YAAY,EAAE7wB,CAAC,CAAC+D;IAClB,CAAC;IACD,CAAC,EAAE;MACDwW,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;MAC3CC,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;MACpBktB,UAAU,EAAE,IAAI9wB,CAAC,CAACyF,SAAS,CAACzF,CAAC,CAAC4D,MAAM,EAAE,YAAY;IACpD;EACF,CAAC,CAAC;EACF,CAAC,EAAE;IACD;IACAmtB,WAAW,EAAE/wB,CAAC,CAAC4D,MAAM;IACrB2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C9M,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;IACfotB,SAAS,EAAE,IAAIhxB,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE2sB,QAAQ,CAAC,EAAE,OAAO;EACvE,CAAC;EACD,CAAC,EAAE;IACD;IACAQ,WAAW,EAAE/wB,CAAC,CAAC4D,MAAM;IACrB2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C9M,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;IACfqtB,YAAY,EAAE,IAAIjxB,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE4sB,YAAY,CAAC,EAAE,OAAO;EAC9E,CAAC;EACD,CAAC,EAAE;IACD;IACAO,WAAW,EAAE/wB,CAAC,CAAC4D,MAAM;IACrB2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C9M,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;IACfstB,YAAY,EAAE,IAAIlxB,CAAC,CAACyF,SAAS,CAAC,IAAIzF,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE+sB,WAAW,CAAC,EAAE,OAAO;EAC7E,CAAC;EACD,CAAC,EAAErW,OAAO;EACV;EACA,CAAC,EAAEe,eAAe;EAClB;EACA,CAAC,EAAE;IACD;IACA0V,WAAW,EAAE/wB,CAAC,CAAC4D,MAAM;IACrByU,UAAU,EAAErY,CAAC,CAAC4D,MAAM;IACpB;IACAosB,SAAS,EAAE,IAAIhwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE8rB,SAAS;EAC9C,CAAC;EACD,CAAC,EAAE;IACD;IACAc,WAAW,EAAE/wB,CAAC,CAAC4D,MAAM;IACrB2W,QAAQ,EAAE,IAAIva,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC;IAC3C+C,iBAAiB,EAAE,IAAI5b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,qBAAqB,CAAC;IACxFqC,mBAAmB,EAAElb,CAAC,CAAC4D,MAAM;IAC7BkY,iBAAiB,EAAE,IAAI9b,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEiV,QAAQ,CAAC,EAAE,qBAAqB,CAAC;IACxFC,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;IACpButB,WAAW,EAAE,IAAInxB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,YAAY;EACjD;AACF,CAAC,CAAC,CAAC,CAAC;;AAEJgtB,UAAU,CAACphB,QAAQ,CAAC,CAAC,CAAC,CAACwgB,SAAS,CAAC7qB,IAAI,GAAGyrB,UAAU;AAClD,IAAIQ,IAAI,GAAG,IAAIpxB,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAACmE,MAAM,EAAE;EACzCkJ,MAAM,EAAE;IACN8iB,UAAU,EAAE,IAAInwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE4T,UAAU,CAAC;IAC/C4Y,WAAW,EAAE,IAAIpwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEmU,WAAW,CAAC;IACjDsY,UAAU,EAAE,IAAIrwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAIsU,UAAU,CAAC0Y,UAAU,CAAC;EAChE,CAAC;EACD,UAAU,EAAE,CAAC,CAAC;EACd,UAAU,EAAE;IACVN,iBAAiB,EAAE,IAAItwB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEua,iBAAiB;EAC9D;AACF,CAAC,CAAC;AAEF,IAAI2S,eAAe,GAAG,IAAIrxB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE5D,CAAC,CAAC4D,MAAM,CAAC;AACrD,IAAI0tB,YAAY,GAAG,IAAItxB,CAAC,CAAC0D,MAAM,CAAC;EAC9B6tB,mBAAmB,EAAE,IAAIvxB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC7DG,oBAAoB,EAAE,IAAIxxB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC9DI,mBAAmB,EAAE,IAAIzxB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC7DK,oBAAoB,EAAE,IAAI1xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC9DM,gBAAgB,EAAE,IAAI3xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAIsU,UAAU,CAACoW,UAAU,CAAC,CAAC;EACrEsD,mBAAmB,EAAE,IAAI5xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC7DQ,oBAAoB,EAAE,IAAI7xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC9DS,mBAAmB,EAAE,IAAI9xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC7DU,oBAAoB,EAAE,IAAI/xB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEytB,eAAe,CAAC;EAC9DW,gBAAgB,EAAE,IAAIhyB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAIsU,UAAU,CAACoW,UAAU,CAAC;AACtE,CAAC,CAAC;AACF,IAAI2D,WAAW,GAAG,IAAIjyB,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE0tB,YAAY,CAAC,EAAEtxB,CAAC,CAAC4D,MAAM,CAAC;AAC9E,IAAIsuB,iBAAiB,GAAG,IAAIlyB,CAAC,CAAC0D,MAAM,CAAC;EACnCmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB0mB,WAAW,EAAE,IAAInyB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEquB,WAAW;AAClD,CAAC,CAAC;AACF,IAAIG,UAAU,GAAG,IAAIpyB,CAAC,CAAC0D,MAAM,CAAC;EAC5B2uB,cAAc,EAAE,IAAIryB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAI5D,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE5D,CAAC,CAAC4D,MAAM,CAAC,CAAC;EACxE;EACAwT,cAAc,EAAE,IAAIpX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEquB,WAAW,CAAC;EACpDK,YAAY,EAAEtyB,CAAC,CAAC4D,MAAM;EACtByT,cAAc,EAAE,IAAIrX,CAAC,CAACmD,KAAK,CAAC+uB,iBAAiB,EAAE,cAAc;AAC/D,CAAC,CAAC;AACF,IAAIK,gBAAgB,GAAG,IAAIvyB,CAAC,CAAC0D,MAAM,CAAC;EAClCmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpB8L,MAAM,EAAE,IAAIvX,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEwuB,UAAU,EAAE;IAC1CjtB,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,IAAIqtB,IAAI,GAAG,IAAIxyB,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAACmE,MAAM;EACjB;EACAsuB,WAAW,EAAEzyB,CAAC,CAAC4D,MAAM;EACrBusB,UAAU,EAAE,IAAInwB,CAAC,CAACmD,KAAK,CAACovB,gBAAgB,EAAE,aAAa;AACzD,CAAC,CAAC;AAEF,IAAIG,kBAAkB,GAAG,aAAa,YAAY;EAChD,SAASA,kBAAkBA,CAACvlB,IAAI,EAAE;IAChC,IAAI,CAACwlB,KAAK,GAAGxlB,IAAI;EACnB;EAEA,IAAI8D,MAAM,GAAGyhB,kBAAkB,CAACxhB,SAAS;EAEzCD,MAAM,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC9C,QAAQ,IAAI,CAACmD,IAAI,CAAC,CAAC,EAAEnD,MAAM,CAAC;MAC1B,KAAK,CAAC;QACJ,OAAOsC,MAAM,CAACoF,SAAS,CAAC,CAAC;MAE3B,KAAK,CAAC;QACJ,OAAOpF,MAAM,CAACkF,YAAY,CAAC,CAAC;MAE9B,KAAK,CAAC;QACJ,OAAOlF,MAAM,CAACsmB,YAAY,CAAC,CAAC;MAE9B,KAAK,CAAC;QACJ,OAAOtmB,MAAM,CAACiF,YAAY,CAAC,CAAC;IAChC;EACF,CAAC;EAEDN,MAAM,CAAC9D,IAAI,GAAG,SAASA,IAAIA,CAACL,GAAG,EAAE9C,MAAM,EAAE;IACvC,OAAO1J,aAAa,CAAC,IAAI,CAACqyB,KAAK,EAAE,IAAI,EAAE3oB,MAAM,CAAC;EAChD,CAAC;EAED,OAAO0oB,kBAAkB;AAC3B,CAAC,CAAC,CAAC;AAEH,IAAIG,YAAY,GAAG,IAAI7yB,CAAC,CAAC0D,MAAM,CAAC;EAC9BovB,KAAK,EAAE,IAAIJ,kBAAkB,CAAC,UAAU9sB,CAAC,EAAE;IACzC,OAAO,CAAC,CAACA,CAAC,CAACoE,MAAM,CAAC+oB,WAAW,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC;EACnD,CAAC,CAAC;EACFC,UAAU,EAAE,SAASA,UAAUA,CAACptB,CAAC,EAAE;IACjC,OAAOA,CAAC,CAACktB,KAAK,IAAI,CAACltB,CAAC,CAACoE,MAAM,CAAC+oB,WAAW,GAAG,MAAM,IAAI,CAAC;EACvD,CAAC;EACDE,UAAU,EAAE,SAASA,UAAUA,CAACrtB,CAAC,EAAE;IACjC,OAAOA,CAAC,CAACktB,KAAK,GAAG,CAAC,CAAC,IAAI,CAACltB,CAAC,CAACoE,MAAM,CAAC+oB,WAAW,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC;EACjE;AACF,CAAC,CAAC;AACF,IAAIG,gBAAgB,GAAG,IAAIlzB,CAAC,CAAC0D,MAAM,CAAC;EAClCqvB,WAAW,EAAE/yB,CAAC,CAAC4D,MAAM;EACrBuvB,QAAQ,EAAEnzB,CAAC,CAAC4D,MAAM;EAClBwvB,OAAO,EAAE,IAAIpzB,CAAC,CAACmD,KAAK,CAAC0vB,YAAY,EAAE,UAAU;AAC/C,CAAC,CAAC;AACF,IAAIQ,IAAI,GAAG,IAAIrzB,CAAC,CAAC0D,MAAM,CAAC;EACtBib,YAAY,EAAE3e,CAAC,CAAC4D,MAAM;EACtBgb,YAAY,EAAE5e,CAAC,CAAC4D,MAAM;EACtBqd,kBAAkB,EAAE,IAAIjhB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAEmZ,kBAAkB,CAAC;EAC/DgW,mBAAmB,EAAE,IAAItzB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+uB,gBAAgB,CAAC;EAC9DK,UAAU,EAAE,IAAIvzB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+uB,gBAAgB,CAAC;EACrDM,UAAU,EAAE,IAAIxzB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+uB,gBAAgB;AACtD,CAAC,CAAC;AAEF,IAAIO,SAAS,GAAG,IAAIzzB,CAAC,CAAC0D,MAAM,CAAC;EAC3BzC,MAAM,EAAEjB,CAAC,CAACmE,MAAM;EAChBvC,MAAM,EAAE5B,CAAC,CAACmE,MAAM;EAChB8N,MAAM,EAAEjS,CAAC,CAACmE;AACZ,CAAC,CAAC;AACF,IAAIuvB,cAAc,GAAG,IAAI1zB,CAAC,CAAC0D,MAAM,CAAC;EAChCkD,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,EAAE,CAAC,CAAC;EACrC+vB,WAAW,EAAE3zB,CAAC,CAACmE,MAAM;EACrB;EACAyvB,SAAS,EAAE,IAAI5zB,CAAC,CAACgN,MAAM,CAAC,aAAa;AACvC,CAAC,CAAC;AACF,IAAI6mB,IAAI,GAAG,IAAI7zB,CAAC,CAAC0D,MAAM,CAAC;EACtBowB,SAAS,EAAE9zB,CAAC,CAACmE,MAAM;EACnB;EACA4vB,SAAS,EAAE/zB,CAAC,CAAC4D,MAAM;EACnB;EACAowB,MAAM,EAAEh0B,CAAC,CAAC4D,MAAM;EAChB;EACAqwB,UAAU,EAAE,IAAIj0B,CAAC,CAACmD,KAAK,CAACswB,SAAS,EAAE,WAAW,CAAC;EAC/CS,eAAe,EAAE,IAAIl0B,CAAC,CAACmD,KAAK,CAACuwB,cAAc,EAAE,WAAW;AAC1D,CAAC,CAAC;AAEF,IAAIS,SAAS,GAAG,IAAIn0B,CAAC,CAAC0D,MAAM,CAAC;EAC3B0wB,YAAY,EAAEp0B,CAAC,CAAC4D,MAAM;EACtB;EACAywB,iBAAiB,EAAE,IAAIr0B,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC4D,MAAM,EAAE;EAAC;EAC7C,WAAW,EAAE,SAAS,EAAE,oBAAoB,EAAE,kBAAkB,CAAC;EAAA,CAChE;AACH,CAAC,CAAC;AACF,IAAI0wB,IAAI,GAAG,IAAIt0B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjB;EACA2wB,SAAS,EAAEv0B,CAAC,CAAC4D,MAAM;EACnB4wB,UAAU,EAAE,IAAIx0B,CAAC,CAACmD,KAAK,CAACgxB,SAAS,EAAE,WAAW,CAAC,CAAC;AAElD,CAAC,CAAC;AAEF,IAAIM,YAAY,GAAG,IAAIz0B,CAAC,CAAC0D,MAAM,CAAC;EAC9BgxB,SAAS,EAAE10B,CAAC,CAAC0E,KAAK;EAClBiwB,YAAY,EAAE30B,CAAC,CAAC0E,KAAK;EACrBkwB,MAAM,EAAE,IAAI50B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;IACxC,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAACE,IAAI,CAACC,SAAS;EACvC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC;;AAEJ,IAAI0qB,IAAI,GAAG,IAAI70B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBoD,UAAU,EAAEhH,CAAC,CAAC+D,KAAK;EACnB+wB,gBAAgB,EAAE90B,CAAC,CAAC4H,KAAK;EACzBqE,OAAO,EAAE,IAAIjM,CAAC,CAACmD,KAAK,CAACsxB,YAAY,EAAE,YAAY;AACjD,CAAC,CAAC;AAEF,IAAIM,QAAQ,GAAG,IAAI/0B,CAAC,CAAC0D,MAAM,CAAC;EAC1BsxB,IAAI,EAAEh1B,CAAC,CAAC4D,MAAM;EACdqxB,KAAK,EAAEj1B,CAAC,CAAC4D,MAAM;EACfnB,KAAK,EAAEzC,CAAC,CAAC+D;AACX,CAAC,CAAC;AACF,IAAImxB,YAAY,GAAG,IAAIl1B,CAAC,CAAC0D,MAAM,CAAC;EAC9ByxB,UAAU,EAAEn1B,CAAC,CAAC4D,MAAM;EACpBwxB,OAAO,EAAEp1B,CAAC,CAAC4D,MAAM;EACjB0M,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,SAAS,CAAC;EACzCkC,GAAG,EAAE,SAASA,GAAGA,CAACF,CAAC,EAAE;IACnB,OAAOA,CAAC,CAAC0K,OAAO,CAAC1O,MAAM,IAAIiE,IAAI,CAACC,GAAG,CAACvC,KAAK,CAACsC,IAAI,EAAED,CAAC,CAAC0K,OAAO,CAAC;EAC5D;AACF,CAAC,CAAC;AACF,IAAI+kB,UAAU,GAAG,IAAIr1B,CAAC,CAAC0D,MAAM,CAAC;EAC5B4xB,GAAG,EAAE,SAASA,GAAGA,CAAC1vB,CAAC,EAAE;IACnB,OAAOA,CAAC,CAAC+O,YAAY,GAAG/O,CAAC,CAACoE,MAAM,CAACA,MAAM,CAAC2K,YAAY;EACtD,CAAC;EACDM,GAAG,EAAE,SAASA,GAAGA,CAACrP,CAAC,EAAE;IACnB,OAAO,CAAC,CAACA,CAAC,CAACoE,MAAM,CAACurB,SAAS,CAACzvB,GAAG,GAAGF,CAAC,CAAC0vB,GAAG,IAAI1vB,CAAC,CAACoE,MAAM,CAACwrB,QAAQ,GAAG,CAAC,KAAK5vB,CAAC,CAACoE,MAAM,CAACwrB,QAAQ,GAAG,CAAC,CAAC;EAC7F,CAAC;EACD/G,MAAM,EAAE,IAAIzuB,CAAC,CAACyF,SAAS,CAACzF,CAAC,CAAC+D,KAAK,EAAE,KAAK;AACxC,CAAC,CAAC;AACF,IAAI0xB,YAAY,GAAG,IAAIz1B,CAAC,CAACsF,eAAe,CAAC,QAAQ,EAAE;EACjD,CAAC,EAAE;IACDowB,MAAM,EAAE11B,CAAC,CAAC4D,MAAM;IAChBuC,WAAW,EAAEnG,CAAC,CAAC4D,MAAM;IACrBwC,aAAa,EAAEpG,CAAC,CAAC4D,MAAM;IACvByC,UAAU,EAAErG,CAAC,CAAC4D,MAAM;IACpB+xB,KAAK,EAAE,IAAI31B,CAAC,CAACmD,KAAK,CAAC4xB,QAAQ,EAAE,QAAQ;EACvC,CAAC;EACD,CAAC,EAAE;IACDS,QAAQ,EAAEx1B,CAAC,CAAC4D,MAAM;IAClB2xB,SAAS,EAAE,IAAIv1B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEsxB,YAAY,EAAE;MAC/C/vB,IAAI,EAAE;IACR,CAAC,CAAC;IACFywB,UAAU,EAAE,IAAI51B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEsxB,YAAY,EAAE;MAChD/vB,IAAI,EAAE;IACR,CAAC,CAAC;IACF0wB,KAAK,EAAE,IAAI71B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEyxB,UAAU,EAAE;MACzClwB,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACD2T,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;IACpBkyB,cAAc,EAAE91B,CAAC,CAAC0E,KAAK;IACvBqxB,cAAc,EAAE/1B,CAAC,CAAC0E,KAAK;IACvBsxB,eAAe,EAAEh2B,CAAC,CAAC0E,KAAK;IACxBsD,KAAK,EAAEhI,CAAC,CAAC0E,KAAK;IACduxB,SAAS,EAAE,IAAIj2B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC+D,KAAK,EAAE,gBAAgB,CAAC;IACjDmyB,SAAS,EAAE,IAAIl2B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,YAAY,CAAC;IAC7CyxB,UAAU,EAAE,IAAIn2B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,YAAY,CAAC;IAC9C0xB,SAAS,EAAE,IAAIp2B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;MAC3C,OAAOA,CAAC,CAACmwB,cAAc,GAAGnwB,CAAC,CAACowB,eAAe;IAC7C,CAAC;EACH;AACF,CAAC,CAAC;AACF,IAAIK,SAAS,GAAG,IAAIr2B,CAAC,CAACsF,eAAe,CAAC,SAAS,EAAE;EAC/C,CAAC,EAAE;IACD;IACAgxB,UAAU,EAAEt2B,CAAC,CAAC4D,MAAM;IACpB;IACAhC,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;IAChB;IACA3C,MAAM,EAAEjB,CAAC,CAAC0E,KAAK;IACf;IACA6V,QAAQ,EAAE,IAAIva,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC0E,KAAK,EAAE,CAAC,YAAY;IAAE;IACjD,SAAS;IAAE;IACX,aAAa;IAAE;IACf,UAAU,CAAC;IAAA,CACV,CAAC;IACFuhB,QAAQ,EAAEwP,YAAY;IACtBc,OAAO,EAAE,IAAIv2B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;MAC5C,OAAOA,CAAC,CAAChE,MAAM,GAAGgE,CAAC,CAACc,cAAc;IACpC,CAAC;EACH,CAAC;EACD,CAAC,EAAE;IACD;IACA9E,MAAM,EAAE5B,CAAC,CAACmE,MAAM;IAChBoW,QAAQ,EAAE,IAAIva,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC0E,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW;IAAE;IAC9E,aAAa;IAAE;IACf,UAAU,CAAC;IAAA,CACV,CAAC;IACFzD,MAAM,EAAEjB,CAAC,CAAC0E,KAAK;IACf8xB,UAAU,EAAEx2B,CAAC,CAAC4D,MAAM;IACpBqiB,QAAQ,EAAEwP,YAAY;IACtBc,OAAO,EAAE,IAAIv2B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;MAC5C,OAAOA,CAAC,CAAChE,MAAM,GAAGgE,CAAC,CAACc,cAAc;IACpC,CAAC;EACH;AACF,CAAC,CAAC;AACF,IAAI+vB,IAAI,GAAG,IAAIz2B,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;EACzC,CAAC,EAAE;IACD;IACA8yB,OAAO,EAAE12B,CAAC,CAAC4D,MAAM;IACjB8D,MAAM,EAAE,IAAI1H,CAAC,CAACmD,KAAK,CAACkzB,SAAS,EAAE,SAAS;EAC1C,CAAC;EACD,CAAC,EAAE;IACD;IACAzvB,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,CAAC;IAClC;IACA8yB,OAAO,EAAE12B,CAAC,CAACmE,MAAM;IACjBuD,MAAM,EAAE,IAAI1H,CAAC,CAACmD,KAAK,CAACkzB,SAAS,EAAE,SAAS;EAC1C;AACF,CAAC,CAAC;;AAEF;AACA;;AAEA,IAAIM,IAAI,GAAG,IAAI32B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBuG,SAAS,EAAEnK,CAAC,CAAC4D,MAAM;EACnBgzB,KAAK,EAAE,IAAI52B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,WAAW;AACzC,CAAC,CAAC;;AAEF;;AAEA,IAAImyB,IAAI,GAAG,IAAI72B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBkzB,UAAU,EAAE92B,CAAC,CAACmE,MAAM;EACpB4yB,KAAK,EAAE/2B,CAAC,CAAC4D,MAAM;EACfqL,OAAO,EAAEjP,CAAC,CAAC4D,MAAM;EACjBozB,KAAK,EAAEh3B,CAAC,CAAC4D,MAAM;EACfqzB,UAAU,EAAEj3B,CAAC,CAAC4D,MAAM;EACpBsL,SAAS,EAAElP,CAAC,CAAC4D,MAAM;EACnBszB,SAAS,EAAEl3B,CAAC,CAAC4D,MAAM;EACnBuzB,QAAQ,EAAE,IAAIn3B,CAAC,CAACyL,MAAM,CAAC,EAAE,CAAC;EAC1B2rB,mBAAmB,EAAE,IAAIp3B,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpC4rB,QAAQ,EAAE,IAAIr3B,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACzB6rB,YAAY,EAAE,IAAIt3B,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EAC7B8rB,SAAS,EAAE,IAAIv3B,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EAC1B+rB,UAAU,EAAEx3B,CAAC,CAAC0E,KAAK;EACnBkC,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK;AAClC,CAAC,CAAC;;AAEF;;AAEA,IAAI+yB,KAAK,GAAG,IAAIz3B,CAAC,CAAC0D,MAAM,CAAC;EACvBg0B,QAAQ,EAAE13B,CAAC,CAAC0E,KAAK;EACjB;EACAizB,MAAM,EAAE33B,CAAC,CAAC0E,KAAK;EACf;EACAkzB,WAAW,EAAE53B,CAAC,CAAC0E,KAAK;EACpB;EACAmzB,SAAS,EAAE73B,CAAC,CAAC0E,KAAK,CAAC;AAErB,CAAC,CAAC;AACF,IAAIozB,MAAM,GAAG,IAAI93B,CAAC,CAAC0D,MAAM,CAAC;EACxBq0B,UAAU,EAAE/3B,CAAC,CAAC4D,MAAM;EACpB;EACA2E,IAAI,EAAEvI,CAAC,CAAC+D,KAAK;EACb;EACAsE,IAAI,EAAErI,CAAC,CAAC+D,KAAK,CAAC;AAEhB,CAAC,CAAC;AACF,IAAIi0B,SAAS,GAAG,IAAIh4B,CAAC,CAAC0D,MAAM,CAAC;EAC3Bu0B,IAAI,EAAEj4B,CAAC,CAAC4D,MAAM;EACd;EACAs0B,OAAO,EAAEl4B,CAAC,CAAC0E,KAAK;EAChB;EACAyzB,KAAK,EAAEn4B,CAAC,CAAC0E,KAAK;EACd;EACA0zB,OAAO,EAAE,IAAIp4B,CAAC,CAACmD,KAAK,CAAC20B,MAAM,EAAE,MAAM,CAAC,CAAC;AAEvC,CAAC,CAAC;AACF,IAAIO,IAAI,GAAG,IAAIr4B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjB;EACA00B,OAAO,EAAEt4B,CAAC,CAAC4D,MAAM;EACjB;EACA20B,SAAS,EAAEv4B,CAAC,CAAC4D,MAAM;EACnB;EACA40B,WAAW,EAAE,IAAIx4B,CAAC,CAACmD,KAAK,CAACs0B,KAAK,EAAE,WAAW,CAAC;EAC5C;EACAnnB,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,WAAW,CAAC;EAC3C;EACAmD,MAAM,EAAE,IAAI/G,CAAC,CAACmD,KAAK,CAAC60B,SAAS,EAAE,SAAS,CAAC,CAAC;AAE5C,CAAC,CAAC;AAEF,IAAIS,IAAI,GAAG,IAAIz4B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjB;EACAmF,MAAM,EAAE/I,CAAC,CAAC+D,KAAK;EACf;EACAiF,OAAO,EAAEhJ,CAAC,CAAC+D,KAAK;EAChB;EACAkF,OAAO,EAAEjJ,CAAC,CAAC+D,KAAK;EAChB;EACA20B,gBAAgB,EAAE14B,CAAC,CAAC+D,KAAK;EACzB;EACA40B,iBAAiB,EAAE34B,CAAC,CAAC+D,KAAK;EAC1B;EACA60B,oBAAoB,EAAE54B,CAAC,CAAC+D,KAAK;EAC7B;EACA80B,UAAU,EAAE74B,CAAC,CAAC+D,KAAK;EACnBuF,cAAc,EAAEtJ,CAAC,CAAC+D,KAAK;EACvB;EACAwF,aAAa,EAAEvJ,CAAC,CAAC+D,KAAK;EACtByF,WAAW,EAAExJ,CAAC,CAAC+D,KAAK;EACpB;EACA6C,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC+D,KAAK,EAAE,CAAC,CAAC;EACpC0F,gBAAgB,EAAEzJ,CAAC,CAAC+D,KAAK;EACzB;EACA2F,eAAe,EAAE1J,CAAC,CAAC4D,MAAM,CAAC;AAE5B,CAAC,CAAC;AAEF,IAAIk1B,SAAS,GAAG,IAAI94B,CAAC,CAAC0D,MAAM,CAAC;EAC3BkG,OAAO,EAAE5J,CAAC,CAAC4D,MAAM;EACjB;EACAiG,OAAO,EAAE7J,CAAC,CAAC+D,KAAK,CAAC;AAEnB,CAAC,CAAC,CAAC,CAAC;;AAEJ,IAAIg1B,IAAI,GAAG,IAAI/4B,CAAC,CAAC0D,MAAM,CAAC;EACtBqG,OAAO,EAAE,IAAI/J,CAAC,CAACyF,SAAS,CAACqzB,SAAS,EAAE,UAAUlzB,CAAC,EAAE;IAC/C,OAAOA,CAAC,CAACoE,MAAM,CAACyuB,IAAI,CAAC/uB,eAAe;EACtC,CAAC,CAAC;EACFO,QAAQ,EAAE,IAAIjK,CAAC,CAACyF,SAAS,CAACzF,CAAC,CAAC+D,KAAK,EAAE,UAAU6B,CAAC,EAAE;IAC9C,OAAOA,CAAC,CAACoE,MAAM,CAACE,IAAI,CAACC,SAAS,GAAGvE,CAAC,CAACoE,MAAM,CAACyuB,IAAI,CAAC/uB,eAAe;EAChE,CAAC;AACH,CAAC,CAAC;AAEF,IAAIsvB,WAAW,GAAG,IAAIh5B,CAAC,CAACic,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;AAC3C,IAAIgd,cAAc,GAAG,IAAIj5B,CAAC,CAAC0D,MAAM,CAAC;EAChCw1B,SAAS,EAAEF,WAAW;EACtBG,OAAO,EAAEH;AACX,CAAC,CAAC;AACF,IAAII,OAAO,GAAG,IAAIp5B,CAAC,CAAC0D,MAAM,CAAC;EACzB21B,SAAS,EAAEr5B,CAAC,CAAC4D,MAAM;EACnB01B,cAAc,EAAE,IAAIt5B,CAAC,CAACmD,KAAK,CAAC81B,cAAc,EAAE,WAAW;AACzD,CAAC,CAAC;AACF,IAAIM,IAAI,GAAG,IAAIv5B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClB6M,SAAS,EAAEvc,CAAC,CAACmE,MAAM;EACnBq1B,OAAO,EAAE,IAAIx5B,CAAC,CAACmD,KAAK,CAACi2B,OAAO,EAAE,WAAW;AAC3C,CAAC,CAAC;AAEF,IAAIK,sBAAsB,GAAG,aAAa,YAAY;EACpD,SAASA,sBAAsBA,CAACt0B,IAAI,EAAEmH,MAAM,EAAEtC,MAAM,EAAE;IACpD,IAAI,CAAC7E,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACmH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACtC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC0vB,IAAI,GAAG,IAAI,CAACptB,MAAM,CAACsF,GAAG;IAC3B,IAAI,CAAC+nB,MAAM,GAAG,EAAE;EAClB;EAEA,IAAI1oB,MAAM,GAAGwoB,sBAAsB,CAACvoB,SAAS;EAE7CD,MAAM,CAAC2oB,OAAO,GAAG,SAASA,OAAOA,CAAC3a,KAAK,EAAE;IACvC,IAAI,IAAI,CAAC0a,MAAM,CAAC1a,KAAK,CAAC,IAAI,IAAI,EAAE;MAC9B,IAAIrN,GAAG,GAAG,IAAI,CAACtF,MAAM,CAACsF,GAAG;MACzB,IAAI,CAACtF,MAAM,CAACsF,GAAG,GAAG,IAAI,CAAC8nB,IAAI,GAAG,IAAI,CAACv0B,IAAI,CAACgI,IAAI,CAAC,IAAI,EAAE,IAAI,CAACnD,MAAM,CAAC,GAAGiV,KAAK;MACvE,IAAI,CAAC0a,MAAM,CAAC1a,KAAK,CAAC,GAAG,IAAI,CAAC9Z,IAAI,CAACmM,MAAM,CAAC,IAAI,CAAChF,MAAM,EAAE,IAAI,CAACtC,MAAM,CAAC;MAC/D,IAAI,CAACsC,MAAM,CAACsF,GAAG,GAAGA,GAAG;IACvB;IAEA,OAAO,IAAI,CAAC+nB,MAAM,CAAC1a,KAAK,CAAC;EAC3B,CAAC;EAEDhO,MAAM,CAAC4oB,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;IAClC,OAAO,kBAAkB,GAAG,IAAI,CAAC10B,IAAI,CAAC20B,WAAW,CAACC,IAAI,GAAG,GAAG;EAC9D,CAAC;EAED,OAAON,sBAAsB;AAC/B,CAAC,CAAC,CAAC;AAEH,IAAIO,cAAc,GAAG,aAAa,UAAUja,QAAQ,EAAE;EACpD3f,cAAc,CAAC45B,cAAc,EAAEja,QAAQ,CAAC;EAExC,SAASia,cAAcA,CAAC70B,IAAI,EAAE;IAC5B,OAAO4a,QAAQ,CAACrd,IAAI,CAAC,IAAI,EAAEyC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI;EAC7C;EAEA,IAAI8Q,OAAO,GAAG+jB,cAAc,CAAC9oB,SAAS;EAEtC+E,OAAO,CAAC3E,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC/C,OAAO,IAAIyvB,sBAAsB,CAAC,IAAI,CAACt0B,IAAI,EAAEmH,MAAM,EAAEtC,MAAM,CAAC;EAC9D,CAAC;EAED,OAAOgwB,cAAc;AACvB,CAAC,CAACh6B,CAAC,CAACmD,KAAK,CAAC;AACV,IAAI82B,WAAW,GAAG,SAASA,WAAWA,CAACC,SAAS,EAAE;EAChD,IAAIA,SAAS,KAAK,KAAK,CAAC,EAAE;IACxBA,SAAS,GAAGl6B,CAAC,CAAC4D,MAAM;EACtB;;EAEA;EACA,IAAIu2B,MAAM,GAAG,aAAa,YAAY;IACpC,SAASA,MAAMA,CAACh1B,IAAI,EAAE;MACpB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB;IAEA,IAAI6a,OAAO,GAAGma,MAAM,CAACjpB,SAAS;IAE9B8O,OAAO,CAAC1O,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAE8E,GAAG,EAAE;MAC5CA,GAAG,GAAGA,GAAG,CAACpH,MAAM,CAACA,MAAM;MACvB,OAAO,IAAI,CAAC7E,IAAI,CAACmM,MAAM,CAAChF,MAAM,EAAE8E,GAAG,CAAC;IACtC,CAAC;IAED4O,OAAO,CAAC7S,IAAI,GAAG,SAASA,IAAIA,CAACL,GAAG,EAAEsE,GAAG,EAAE;MACrCA,GAAG,GAAGA,GAAG,CAACpH,MAAM,CAACA,MAAM;MACvB,OAAO,IAAI,CAAC7E,IAAI,CAACgI,IAAI,CAACL,GAAG,EAAEsE,GAAG,CAAC;IACjC,CAAC;IAED4O,OAAO,CAAC5N,MAAM,GAAG,SAASA,MAAMA,CAAC9F,MAAM,EAAEQ,GAAG,EAAEsE,GAAG,EAAE;MACjDA,GAAG,GAAGA,GAAG,CAACpH,MAAM,CAACA,MAAM;MACvB,OAAO,IAAI,CAAC7E,IAAI,CAACiN,MAAM,CAAC9F,MAAM,EAAEQ,GAAG,EAAEsE,GAAG,CAAC;IAC3C,CAAC;IAED,OAAO+oB,MAAM;EACf,CAAC,CAAC,CAAC;EAEHD,SAAS,GAAG,IAAIC,MAAM,CAACD,SAAS,CAAC;EACjC,IAAIE,kBAAkB,GAAG,IAAIp6B,CAAC,CAAC0D,MAAM,CAAC;IACpC22B,QAAQ,EAAEr6B,CAAC,CAAC4D,MAAM;IAClB02B,MAAM,EAAEt6B,CAAC,CAAC4D,MAAM;IAChBuC,WAAW,EAAEnG,CAAC,CAAC4D,MAAM;IACrBwC,aAAa,EAAEpG,CAAC,CAAC4D,MAAM;IACvByC,UAAU,EAAErG,CAAC,CAAC4D;EAChB,CAAC,CAAC;EACF,IAAI22B,mBAAmB,GAAG,IAAIv6B,CAAC,CAAC0D,MAAM,CAAC;IACrC82B,SAAS,EAAEx6B,CAAC,CAAC4D,MAAM;IACnBuxB,UAAU,EAAEn1B,CAAC,CAAC4D,MAAM;IACpBnB,KAAK,EAAEy3B;EACT,CAAC,CAAC;EACF,IAAIO,kBAAkB,GAAG,IAAIz6B,CAAC,CAAC0D,MAAM,CAAC;IACpC82B,SAAS,EAAEx6B,CAAC,CAAC4D,MAAM;IACnBuxB,UAAU,EAAEn1B,CAAC,CAAC4D,MAAM;IACpB6qB,MAAM,EAAE,IAAIzuB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAI5D,CAAC,CAACmD,KAAK,CAAC+2B,SAAS,EAAE,UAAUt0B,CAAC,EAAE;MAClE,OAAOA,CAAC,CAAC40B,SAAS,GAAG50B,CAAC,CAACuvB,UAAU,GAAG,CAAC;IACvC,CAAC,CAAC,EAAE;MACFhwB,IAAI,EAAE;IACR,CAAC;EACH,CAAC,CAAC;EACF,IAAIu1B,YAAY,GAAG,IAAI16B,CAAC,CAAC0D,MAAM,CAAC;IAC9Bse,KAAK,EAAEhiB,CAAC,CAAC4D,MAAM;IACfnB,KAAK,EAAEy3B;EACT,CAAC,CAAC;EACF,OAAO,IAAIl6B,CAAC,CAACsF,eAAe,CAACtF,CAAC,CAAC4D,MAAM,EAAE;IACrC,CAAC,EAAE;MACD6qB,MAAM,EAAE,IAAIuL,cAAc,CAACE,SAAS,CAAC,CAAC;IAExC,CAAC;IACD,CAAC,EAAE;MACDS,kBAAkB,EAAEP,kBAAkB;MACtCQ,QAAQ,EAAE,IAAI56B,CAAC,CAACmD,KAAK,CAACo3B,mBAAmB,EAAE,UAAU30B,CAAC,EAAE;QACtD,OAAOA,CAAC,CAAC+0B,kBAAkB,CAACL,MAAM;MACpC,CAAC;IACH,CAAC;IACD,CAAC,EAAE;MACDK,kBAAkB,EAAEP,kBAAkB;MACtCQ,QAAQ,EAAE,IAAI56B,CAAC,CAACmD,KAAK,CAACs3B,kBAAkB,EAAE,UAAU70B,CAAC,EAAE;QACrD,OAAOA,CAAC,CAAC+0B,kBAAkB,CAACL,MAAM;MACpC,CAAC;IACH,CAAC;IACD,CAAC,EAAE;MACDK,kBAAkB,EAAEP,kBAAkB;MACtCQ,QAAQ,EAAE,IAAI56B,CAAC,CAACmD,KAAK,CAACu3B,YAAY,EAAE,UAAU90B,CAAC,EAAE;QAC/C,OAAOA,CAAC,CAAC+0B,kBAAkB,CAACL,MAAM;MACpC,CAAC;IACH,CAAC;IACD,CAAC,EAAE;MACDnF,UAAU,EAAEn1B,CAAC,CAAC4D,MAAM;MACpBmI,KAAK,EAAE/L,CAAC,CAAC4D,MAAM;MACf6qB,MAAM,EAAE,IAAIzuB,CAAC,CAACmD,KAAK,CAAC+2B,SAAS,EAAE,OAAO;IACxC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,SAASW,UAAUA,CAACC,SAAS,EAAEziB,UAAU,EAAE;EACzC,IAAIyiB,SAAS,KAAK,KAAK,CAAC,EAAE;IACxBA,SAAS,GAAG,CAAC,CAAC;EAChB;EAEA,IAAIziB,UAAU,KAAK,KAAK,CAAC,EAAE;IACzBA,UAAU,GAAGrY,CAAC,CAAC4D,MAAM;EACvB;EAEA,IAAIkvB,KAAK,GAAGnwB,MAAM,CAACo4B,MAAM,CAAC;IACxBC,QAAQ,EAAEh7B,CAAC,CAAC4D,MAAM;IAClBoE,KAAK,EAAEhI,CAAC,CAAC4D;EACX,CAAC,EAAEk3B,SAAS,CAAC;EACb,IAAIG,KAAK,GAAG,IAAIj7B,CAAC,CAAC0D,MAAM,CAACovB,KAAK,CAAC;EAC/B,IAAIoI,UAAU,GAAG,IAAIlB,cAAc,CAAC,IAAIh6B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IACrE,OAAOA,CAAC,CAACu1B,QAAQ;EACnB,CAAC,CAAC,CAAC;EACH,IAAIC,WAAW,GAAG,IAAIp7B,CAAC,CAAC0D,MAAM,CAAC;IAC7By3B,QAAQ,EAAEn7B,CAAC,CAACmE,MAAM;IAClBk3B,UAAU,EAAE,IAAIr7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI81B,WAAW,CAAC5hB,UAAU,CAAC,CAAC;IAChEijB,UAAU,EAAE,IAAIt7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+2B,UAAU,CAAC;IAC/CK,UAAU,EAAE,IAAIv7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI61B,cAAc,CAACiB,KAAK,CAAC;EAC/D,CAAC,CAAC;EACF,OAAOG,WAAW;AACpB,CAAC,CAAC;;AAEF,SAASI,WAAWA,CAACV,SAAS,EAAEziB,UAAU,EAAE;EAC1C,IAAIyiB,SAAS,KAAK,KAAK,CAAC,EAAE;IACxBA,SAAS,GAAG,CAAC,CAAC;EAChB;EAEA,IAAIW,gBAAgB,GAAG,IAAIz7B,CAAC,CAAC0D,MAAM,CAAC;IAClC8D,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;MAC1B,OAAO,CAAC;IACV,CAAC;IACD;IACA2tB,UAAU,EAAEn1B,CAAC,CAAC4D,MAAM;IACpB6qB,MAAM,EAAE,IAAIzuB,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE1E,CAAC,CAAC4D,MAAM;EACvC,CAAC,CAAC;EACF,IAAIkvB,KAAK,GAAGnwB,MAAM,CAACo4B,MAAM,CAAC;IACxBW,cAAc,EAAE17B,CAAC,CAAC4D,MAAM;IACxB;IACAo3B,QAAQ,EAAE,SAASA,QAAQA,CAACp1B,CAAC,EAAE;MAC7B,OAAO,CAACA,CAAC,CAAC81B,cAAc,IAAI91B,CAAC,CAACoE,MAAM,CAACsxB,UAAU,CAAC5B,IAAI,GAAG9zB,CAAC,CAACoE,MAAM,CAAC2K,YAAY,CAAC,IAAI/O,CAAC,CAACoE,MAAM,CAACmxB,QAAQ;IACpG,CAAC;IACDnzB,KAAK,EAAEhI,CAAC,CAAC4D;EACX,CAAC,EAAEk3B,SAAS,CAAC;EACb,IAAIG,KAAK,GAAG,IAAIj7B,CAAC,CAAC0D,MAAM,CAACovB,KAAK,CAAC;EAC/B,IAAIoI,UAAU,GAAG,IAAIlB,cAAc,CAAC,IAAIh6B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;IACpE,OAAOA,CAAC,CAACu1B,QAAQ;EACnB,CAAC,CAAC,CAAC;EACH,IAAIQ,YAAY,GAAG,IAAI37B,CAAC,CAAC0D,MAAM,CAAC;IAC9By3B,QAAQ,EAAEn7B,CAAC,CAAC4D,MAAM;IAClBy3B,UAAU,EAAE,IAAIr7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE63B,gBAAgB,CAAC;IACrDH,UAAU,EAAE,IAAIt7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEs3B,UAAU,CAAC;IAC/CK,UAAU,EAAE,IAAIv7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAE,IAAIo2B,cAAc,CAACiB,KAAK,CAAC;EAC/D,CAAC,CAAC;EACF,OAAOU,YAAY;AACrB;AAEA,IAAIC,YAAY,GAAG,IAAI57B,CAAC,CAACsF,eAAe,CAAC,QAAQ,EAAE;EACjD,CAAC,EAAE;IACD;IACA0X,MAAM,EAAE,IAAIhd,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC+D,KAAK,EAAE,EAAE;EACjC,CAAC;EACD,CAAC,EAAE;IACD;IACAiZ,MAAM,EAAE,IAAIhd,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC+D,KAAK,EAAE,EAAE,CAAC;IAChC83B,WAAW,EAAE,IAAI5B,WAAW,CAACj6B,CAAC,CAAC4D,MAAM;EACvC,CAAC;EACD,CAAC,EAAE;IACD;IACAk4B,aAAa,EAAE97B,CAAC,CAAC4D,MAAM;IACvBm4B,aAAa,EAAE,IAAI/7B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,EAAE;EACzC,CAAC;EACD,CAAC,EAAE;IACD;IACAk4B,aAAa,EAAE97B,CAAC,CAAC4D,MAAM;IACvBm4B,aAAa,EAAE,IAAI/7B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE,EAAE,CAAC;IACxCi4B,WAAW,EAAE,IAAI5B,WAAW,CAACj6B,CAAC,CAAC4D,MAAM;EACvC;AACF,CAAC,CAAC;AACF,IAAIo4B,IAAI,GAAG,IAAIh8B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClBzO,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;EAChBq4B,eAAe,EAAEj8B,CAAC,CAAC4D,MAAM;EACzBqiB,QAAQ,EAAE2V;AACZ,CAAC,CAAC;AAEF,IAAIM,OAAO,GAAG,IAAIl8B,CAAC,CAAC0D,MAAM,CAAC;EACzBy4B,OAAO,EAAEn8B,CAAC,CAAC4D,MAAM;EACjByd,SAAS,EAAErhB,CAAC,CAAC+D,KAAK;EAClBg2B,IAAI,EAAE,SAASA,IAAIA,CAACn0B,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAACA,MAAM,CAAC+vB,IAAI,CAAC9tB,OAAO,CAACmwB,YAAY,CAACx2B,CAAC,CAACyb,SAAS,CAAC;EACtE;AACF,CAAC,CAAC;AACF,IAAIgb,WAAW,GAAG,IAAIr8B,CAAC,CAAC0D,MAAM,CAAC;EAC7BoU,OAAO,EAAE9X,CAAC,CAAC4D,MAAM;EACjB04B,SAAS,EAAEt8B,CAAC,CAAC4D,MAAM;EACnB24B,YAAY,EAAE,IAAIv8B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAAC+4B,OAAO,EAAE,WAAW,CAAC,EAAE;IACvE/2B,IAAI,EAAE;EACR,CAAC,CAAC;EACFq3B,YAAY,EAAE,IAAIx8B,CAAC,CAACyI,QAAQ,CAACzI,CAAC,CAAC0E,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;EACtG+3B,cAAc,EAAEz8B,CAAC,CAAC0E,KAAK;EACvB2c,SAAS,EAAErhB,CAAC,CAAC+D,KAAK;EAClBg2B,IAAI,EAAE,SAASA,IAAIA,CAACn0B,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAAC+vB,IAAI,CAAC9tB,OAAO,CAACmwB,YAAY,CAACx2B,CAAC,CAACyb,SAAS,CAAC;EAC/D;AACF,CAAC,CAAC;AACF,IAAIqb,IAAI,GAAG,IAAI18B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClBitB,gBAAgB,EAAE38B,CAAC,CAAC4D,MAAM;EAC1Bg5B,SAAS,EAAE,IAAI58B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,CAAC;EACnCi5B,SAAS,EAAE,IAAI78B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAACmE,MAAM,CAAC;EACnC24B,YAAY,EAAE,IAAI98B,CAAC,CAACmD,KAAK,CAACk5B,WAAW,EAAE,kBAAkB;AAC3D,CAAC,CAAC;AAEF,IAAIU,IAAI,GAAG,IAAI/8B,CAAC,CAAC0D,MAAM,CAAC;EACtBs5B,OAAO,EAAE,IAAIh9B,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACxBwxB,QAAQ,EAAEj9B,CAAC,CAAC0P,OAAO;EACnBwtB,YAAY,EAAEl9B,CAAC,CAAC0P,OAAO;EACvBytB,QAAQ,EAAEn9B,CAAC,CAAC0P,OAAO;EACnB1H,KAAK,EAAEhI,CAAC,CAAC4D,MAAM;EACf2H,MAAM,EAAEvL,CAAC,CAAC4D,MAAM;EAChBm2B,IAAI,EAAE,SAASA,IAAIA,CAACn0B,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAAC+vB,IAAI,CAAC9tB,OAAO,CAACmwB,YAAY,CAACx2B,CAAC,CAAC2F,MAAM,CAAC;EAC5D;AACF,CAAC,CAAC;AACF,IAAI6xB,QAAQ,GAAG,IAAIp9B,CAAC,CAAC0D,MAAM,CAAC;EAC1B6H,MAAM,EAAEvL,CAAC,CAAC4D,MAAM;EAChBm2B,IAAI,EAAE,SAASA,IAAIA,CAACn0B,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACoE,MAAM,CAACA,MAAM,CAAC+vB,IAAI,CAAC9tB,OAAO,CAACmwB,YAAY,CAACx2B,CAAC,CAAC2F,MAAM,CAAC;EAC5D,CAAC;EACDvD,KAAK,EAAEhI,CAAC,CAAC4D,MAAM;EACfy5B,KAAK,EAAE,IAAIr9B,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC0P,OAAO,EAAE,UAAU9J,CAAC,EAAE;IACzC,OAAOA,CAAC,CAACoE,MAAM,CAACuS,SAAS;EAC3B,CAAC,CAAC;EACF+gB,gBAAgB,EAAE,IAAIt9B,CAAC,CAACyY,QAAQ,CAACzY,CAAC,CAAC4D,MAAM,EAAE,UAAUgC,CAAC,EAAE;IACtD,OAAOA,CAAC,CAACoE,MAAM,CAACuzB,YAAY,GAAG33B,CAAC,CAACc,cAAc,GAAG,CAAC;EACrD,CAAC;AACH,CAAC,CAAC;AACF,IAAI82B,IAAI,GAAG,IAAIx9B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClB+tB,YAAY,EAAEz9B,CAAC,CAAC4D,MAAM;EACtB85B,cAAc,EAAE19B,CAAC,CAAC4D,MAAM;EACxB2Y,SAAS,EAAEvc,CAAC,CAAC4D,MAAM;EACnB+5B,QAAQ,EAAE39B,CAAC,CAAC4D,MAAM;EAClBg6B,aAAa,EAAE59B,CAAC,CAAC4D,MAAM;EACvB25B,YAAY,EAAEv9B,CAAC,CAAC4D,MAAM;EACtBi6B,IAAI,EAAE,IAAI79B,CAAC,CAACmD,KAAK,CAAC45B,IAAI,EAAE,WAAW,CAAC;EACpCe,QAAQ,EAAE,IAAI99B,CAAC,CAACmD,KAAK,CAACi6B,QAAQ,EAAE,eAAe;AACjD,CAAC,CAAC;AAEF,IAAIW,SAAS,GAAG,IAAI/9B,CAAC,CAACic,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;AAEzC,IAAI+hB,MAAM,GAAG,aAAa,YAAY;EACpC,SAASA,MAAMA,CAAA,EAAG,CAAC;EAEnBA,MAAM,CAAC1sB,MAAM,GAAG,SAASA,MAAMA,CAAChF,MAAM,EAAEtC,MAAM,EAAE;IAC9C;IACA;IACA;IACA,OAAOA,MAAM,CAAChC,KAAK,GAAGsE,MAAM,CAACiF,YAAY,CAAC,CAAC,GAAGjF,MAAM,CAACkF,YAAY,CAAC,CAAC,GAAG,CAAC;EACzE,CAAC;EAED,OAAOwsB,MAAM;AACf,CAAC,CAAC,CAAC;AAEH,IAAIC,IAAI,GAAG,IAAIj+B,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjBgD,QAAQ,EAAE,IAAI5G,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,CAAC;EAClC2Y,SAAS,EAAEvc,CAAC,CAAC4D,MAAM;EACnBs6B,gBAAgB,EAAEl+B,CAAC,CAAC4D,MAAM;EAC1Bu6B,YAAY,EAAE,IAAIn+B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAInE,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACmD,KAAK,CAAC46B,SAAS,EAAE,WAAW,CAAC,EAAE,kBAAkB,CAAC,CAAC;EAC3GjlB,UAAU,EAAE9Y,CAAC,CAAC4D,MAAM;EACpBoE,KAAK,EAAEhI,CAAC,CAAC4D,MAAM;EACf65B,YAAY,EAAEz9B,CAAC,CAACmE,MAAM;EACtBmM,OAAO,EAAE,IAAItQ,CAAC,CAACmD,KAAK,CAAC,IAAInD,CAAC,CAACkF,OAAO,CAAC84B,MAAM,EAAE,MAAM,EAAE;IACjDtyB,UAAU,EAAE,cAAc;IAC1BC,SAAS,EAAE;EACb,CAAC,CAAC,EAAE,UAAU/F,CAAC,EAAE;IACf,OAAOA,CAAC,CAACkT,UAAU,GAAG,CAAC;EACzB,CAAC;AACH,CAAC,CAAC;AAEF,IAAIslB,UAAU,GAAG,IAAIp+B,CAAC,CAAC0D,MAAM,CAAC;EAC5B9B,MAAM,EAAE5B,CAAC,CAAC4D,MAAM;EAChB2W,QAAQ,EAAEva,CAAC,CAAC4D,MAAM;EAClBy6B,eAAe,EAAEr+B,CAAC,CAACmE,MAAM;EACzBm6B,UAAU,EAAE,IAAI9C,WAAW,CAAC;AAC9B,CAAC,CAAC;AACF,IAAI+C,gBAAgB,GAAG,IAAIv+B,CAAC,CAAC0D,MAAM,CAAC;EAClC86B,SAAS,EAAEx+B,CAAC,CAACmE,MAAM;EACnBs6B,eAAe,EAAEz+B,CAAC,CAAC0P,OAAO;EAC1BgvB,iBAAiB,EAAE1+B,CAAC,CAAC0P,OAAO;EAC5BivB,cAAc,EAAE3+B,CAAC,CAAC0P,OAAO;EACzBkvB,gBAAgB,EAAE5+B,CAAC,CAAC0P,OAAO;EAC3BmvB,SAAS,EAAE7+B,CAAC,CAAC4D,MAAM;EACnBk7B,WAAW,EAAE9+B,CAAC,CAAC4D;AACjB,CAAC,CAAC;AACF,IAAIm7B,iBAAiB,GAAG,IAAI/+B,CAAC,CAACmD,KAAK,CAACo7B,gBAAgB,EAAEv+B,CAAC,CAACmE,MAAM,CAAC;AAC/D,IAAI66B,UAAU,GAAG,IAAIh/B,CAAC,CAACsF,eAAe,CAAC,YAAY,EAAE;EACnD,CAAC,EAAE;IACD;IACA25B,UAAU,EAAEj/B,CAAC,CAAC0P,OAAO;IACrBwvB,UAAU,EAAEl/B,CAAC,CAAC0P,OAAO;IACrByvB,KAAK,EAAEn/B,CAAC,CAAC4D,MAAM;IACfmV,MAAM,EAAE,IAAI/Y,CAAC,CAACmD,KAAK,CAACnD,CAAC,CAAC4D,MAAM,EAAE5D,CAAC,CAAC4D,MAAM;EACxC,CAAC;EACD,CAAC,EAAE;IACD;IACAw7B,QAAQ,EAAEp/B,CAAC,CAAC4D;EACd,CAAC;EACD,CAAC,EAAE;IACD;IACAy7B,cAAc,EAAEr/B,CAAC,CAAC0P,OAAO;IACzB0vB,QAAQ,EAAEp/B,CAAC,CAAC4D,MAAM;IAClB07B,UAAU,EAAEt/B,CAAC,CAAC4D;EAChB,CAAC;EACD,CAAC,EAAE,CAAC,CAAC;EACL;EACA,CAAC,EAAE;IACD;IACA27B,aAAa,EAAEv/B,CAAC,CAACmE,MAAM;IACvBq7B,YAAY,EAAEx/B,CAAC,CAAC0P,OAAO;IACvB+vB,cAAc,EAAEz/B,CAAC,CAAC0P,OAAO;IACzBgwB,YAAY,EAAE1/B,CAAC,CAAC0P;EAClB,CAAC;EACD,CAAC,EAAE;IACD;IACA1H,KAAK,EAAEhI,CAAC,CAAC4D,MAAM;IACfoe,KAAK,EAAEhiB,CAAC,CAAC4D;EACX;AACF,CAAC,CAAC;AACF,IAAI+7B,MAAM,GAAG,IAAI3/B,CAAC,CAAC0D,MAAM,CAAC;EACxBk8B,WAAW,EAAE5/B,CAAC,CAAC4D,MAAM;EACrBi8B,UAAU,EAAE7/B,CAAC,CAAC4D,MAAM;EACpBk8B,YAAY,EAAE9/B,CAAC,CAACmE,MAAM;EACtB47B,UAAU,EAAEf,UAAU;EACtBzI,OAAO,EAAE,IAAIv2B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;IAC5C,OAAOA,CAAC,CAACk6B,YAAY,GAAGl6B,CAAC,CAACc,cAAc;EAC1C,CAAC;AACH,CAAC,CAAC;AACF,IAAIs5B,sBAAsB,GAAG,IAAIhgC,CAAC,CAACmD,KAAK,CAACw8B,MAAM,EAAE3/B,CAAC,CAACmE,MAAM,CAAC;AAC1D,IAAI87B,qBAAqB,GAAG,IAAIjgC,CAAC,CAAC0D,MAAM,CAAC;EACvCw8B,WAAW,EAAE,IAAIjG,WAAW,CAAC,IAAIj6B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEo8B,sBAAsB,CAAC;AAC9E,CAAC,CAAC;AACF,IAAIG,kBAAkB,GAAG,IAAIngC,CAAC,CAAC0D,MAAM,CAAC;EACpC23B,UAAU,EAAE,IAAIr7B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEw6B,UAAU,EAAE;IAC9Cj5B,IAAI,EAAE;EACR,CAAC,CAAC;EACFi7B,SAAS,EAAEpgC,CAAC,CAAC4D,MAAM;EACnBy8B,qBAAqB,EAAE,IAAIrgC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEq8B,qBAAqB,EAAE;IACpE96B,IAAI,EAAE;EACR,CAAC,CAAC;EACFm7B,kBAAkB,EAAE,IAAIrG,WAAW,CAAC,IAAIj6B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEm7B,iBAAiB,EAAE;IAC7E55B,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAE;EACd,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,IAAI60B,IAAI,GAAG,IAAIvgC,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAACmE,MAAM;EACjBlD,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;EAChB48B,UAAU,EAAE,IAAIxgC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEu8B,kBAAkB,CAAC;EACvDM,QAAQ,EAAE,IAAIzgC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAAC4D,MAAM,EAAEu8B,kBAAkB;AACtD,CAAC,CAAC;AAEF,IAAIO,YAAY,GAAG;EACjBC,MAAM,EAAE3gC,CAAC,CAAC4D;AACZ,CAAC;AACD,IAAIg9B,cAAc,GAAG;EACnBC,SAAS,EAAE7gC,CAAC,CAAC4D,MAAM;EACnBk9B,YAAY,EAAE9gC,CAAC,CAAC4D;AAClB,CAAC;AACD,IAAIm9B,aAAa,GAAG;EAClBC,kBAAkB,EAAEhhC,CAAC,CAAC4D,MAAM;EAC5Bq9B,iBAAiB,EAAEjhC,CAAC,CAAC4D;AACvB,CAAC;AACD,IAAIs9B,iBAAiB,GAAG,IAAIlhC,CAAC,CAAC0D,MAAM,CAAC;EACnCy9B,KAAK,EAAE,IAAInH,cAAc,CAAC,IAAIh6B,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI81B,WAAW,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC;AACF,IAAImH,YAAY,GAAG,IAAIphC,CAAC,CAACsF,eAAe,CAAC,MAAM,EAAE;EAC/C,CAAC,EAAE;IACD;IACAg5B,UAAU,EAAE,IAAIzD,UAAU,CAAC;EAC7B,CAAC;EACD,CAAC,EAAE;IACD;IACAyD,UAAU,EAAE,IAAIzD,UAAU,CAAC+F,cAAc,CAAC;IAC1CS,iBAAiB,EAAE,IAAIrhC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE+8B,iBAAiB;EAC9D,CAAC;EACD,CAAC,EAAE;IACD;IACA5C,UAAU,EAAE,IAAIzD,UAAU,CAAC6F,YAAY,CAAC;IACxCY,eAAe,EAAE,IAAIthC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI61B,cAAc,CAACh6B,CAAC,CAACmE,MAAM,CAAC,CAAC;IACtEqgB,UAAU,EAAE,IAAIxkB,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI61B,cAAc,CAACh6B,CAAC,CAAC4D,MAAM,CAAC,CAAC;IACjE29B,YAAY,EAAE,IAAIvhC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI61B,cAAc,CAACh6B,CAAC,CAAC4D,MAAM,CAAC;EACpE,CAAC;EACD,CAAC,EAAE;IACD;IACAs8B,WAAW,EAAE,IAAIjG,WAAW,CAAC;EAC/B,CAAC;EACD,CAAC,EAAE;IACD;IACAqE,UAAU,EAAE,IAAIzD,UAAU,CAACkG,aAAa,CAAC;IACzCS,gBAAgB,EAAE,IAAIxhC,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,IAAI61B,cAAc,CAACh6B,CAAC,CAAC4D,MAAM,CAAC;EACxE;AACF,CAAC,CAAC;AACF,IAAI69B,QAAQ,GAAG,IAAIzhC,CAAC,CAAC0D,MAAM,CAAC;EAC1B9B,MAAM,EAAE5B,CAAC,CAACmE,MAAM;EAChBoW,QAAQ,EAAEva,CAAC,CAACwE,MAAM;EAClBW,IAAI,EAAEnF,CAAC,CAAC0E,KAAK;EACb25B,eAAe,EAAEr+B,CAAC,CAACmE,MAAM;EACzBkD,KAAK,EAAE+5B,YAAY;EACnB7K,OAAO,EAAE,IAAIv2B,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC0E,KAAK,EAAE,UAAUkB,CAAC,EAAE;IAC5C,OAAOA,CAAC,CAAChE,MAAM,GAAGgE,CAAC,CAACc,cAAc;EACpC,CAAC;AACH,CAAC,CAAC;AACF,IAAIg7B,YAAY,GAAG,IAAI1hC,CAAC,CAAC0D,MAAM,CAAC;EAC9Bi+B,WAAW,EAAE3hC,CAAC,CAAC4D,MAAM;EACrBg+B,cAAc,EAAE5hC,CAAC,CAAC4D,MAAM;EACxBi+B,WAAW,EAAE7hC,CAAC,CAACmE,MAAM;EACrB29B,YAAY,EAAE9hC,CAAC,CAACmE;AAClB,CAAC,CAAC;AACF,IAAI49B,SAAS,GAAG,IAAI/hC,CAAC,CAAC0D,MAAM,CAAC;EAC3Bs+B,YAAY,EAAEhiC,CAAC,CAACmE,MAAM;EACtB89B,WAAW,EAAEjiC,CAAC,CAACmE,MAAM;EACrB+9B,eAAe,EAAEliC,CAAC,CAACmE,MAAM;EACzBg+B,UAAU,EAAEniC,CAAC,CAACmE,MAAM;EACpBi+B,QAAQ,EAAE,IAAIpiC,CAAC,CAACmD,KAAK,CAACu+B,YAAY,EAAE,iBAAiB,CAAC;EACtDW,SAAS,EAAE,IAAIriC,CAAC,CAACmD,KAAK,CAACs+B,QAAQ,EAAE,YAAY;AAC/C,CAAC,CAAC;AACF,IAAIa,IAAI,GAAG,IAAItiC,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC4D,MAAM;EACjB2+B,MAAM,EAAE,IAAIviC,CAAC,CAACwG,QAAQ,CAACxG,CAAC,CAAC4D,MAAM,CAAC;EAChC4+B,OAAO,EAAExiC,CAAC,CAACmE,MAAM;EACjBs+B,MAAM,EAAE,IAAIziC,CAAC,CAACmD,KAAK,CAAC4+B,SAAS,EAAE,SAAS;AAC1C,CAAC,CAAC;AAEF,IAAIW,aAAa,GAAG,IAAI1iC,CAAC,CAAC0D,MAAM,CAAC;EAC/BsxB,IAAI,EAAEh1B,CAAC,CAAC+D,KAAK;EACb4d,GAAG,EAAE3hB,CAAC,CAAC+D,KAAK;EACZkxB,KAAK,EAAEj1B,CAAC,CAAC+D,KAAK;EACd4+B,MAAM,EAAE3iC,CAAC,CAAC+D;AACZ,CAAC,CAAC;AACF,IAAI6+B,IAAI,GAAG,IAAI5iC,CAAC,CAAC0D,MAAM,CAAC;EACtB8D,OAAO,EAAExH,CAAC,CAAC0P,OAAO;EAClBzO,MAAM,EAAEjB,CAAC,CAAC4D,MAAM;EAChBs8B,WAAW,EAAE,IAAIjG,WAAW,CAACyI,aAAa;AAC5C,CAAC,CAAC;AAEF,IAAIh7B,MAAM,GAAG,CAAC,CAAC;AACfA,MAAM,CAACH,IAAI,GAAGA,IAAI;AAClBG,MAAM,CAACC,IAAI,GAAGA,IAAI;AAClBD,MAAM,CAACoB,IAAI,GAAGA,IAAI;AAClBpB,MAAM,CAACoC,IAAI,GAAGA,IAAI;AAClBpC,MAAM,CAACwC,IAAI,GAAGA,IAAI;AAClBxC,MAAM,CAACqyB,IAAI,GAAGjuB,SAAS;AACvBpE,MAAM,CAAC,MAAM,CAAC,GAAG0F,GAAG;AACpB1F,MAAM,CAAC+H,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpB/H,MAAM,CAACgJ,IAAI,GAAGA,IAAI;AAClBhJ,MAAM,CAACkJ,IAAI,GAAGA,IAAI;AAClBlJ,MAAM,CAACmJ,IAAI,GAAGA,IAAI;AAClBnJ,MAAM,CAAC,MAAM,CAAC,GAAG8I,GAAG;AACpB9I,MAAM,CAACqJ,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpBrJ,MAAM,CAAC,MAAM,CAAC,GAAGga,OAAO;AACxBha,MAAM,CAAC,MAAM,CAAC,GAAGga,OAAO;AACxBha,MAAM,CAACub,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpBvb,MAAM,CAACof,IAAI,GAAGA,IAAI;AAClBpf,MAAM,CAACm7B,IAAI,GAAGn7B,MAAM,CAACof,IAAI;AACzBpf,MAAM,CAAC0f,IAAI,GAAGA,IAAI;AAClB1f,MAAM,CAACkgB,IAAI,GAAGA,IAAI;AAClBlgB,MAAM,CAAC4gB,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpB5gB,MAAM,CAACijB,IAAI,GAAGA,IAAI;AAClBjjB,MAAM,CAACgkB,IAAI,GAAGA,IAAI;AAClBhkB,MAAM,CAACwoB,IAAI,GAAGA,IAAI;AAClBxoB,MAAM,CAAC0pB,IAAI,GAAGA,IAAI;AAClB1pB,MAAM,CAAC8qB,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpB9qB,MAAM,CAAC2rB,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpB3rB,MAAM,CAACmsB,IAAI,GAAGA,IAAI;AAClBnsB,MAAM,CAAC4sB,IAAI,GAAGA,IAAI;AAClB5sB,MAAM,CAACmtB,IAAI,GAAGA,IAAI;AAClBntB,MAAM,CAAC+uB,IAAI,GAAGA,IAAI;AAClB/uB,MAAM,CAACivB,IAAI,GAAGA,IAAI;AAClBjvB,MAAM,CAACmvB,IAAI,GAAGA,IAAI;AAClBnvB,MAAM,CAAC2wB,IAAI,GAAGA,IAAI;AAClB3wB,MAAM,CAAC+wB,IAAI,GAAGA,IAAI;AAClB/wB,MAAM,CAACqxB,IAAI,GAAGA,IAAI,CAAC,CAAC;AACpBrxB,MAAM,CAAC6xB,IAAI,GAAGA,IAAI;AAClB7xB,MAAM,CAACs0B,IAAI,GAAGA,IAAI;AAClBt0B,MAAM,CAACg1B,IAAI,GAAGA,IAAI;AAClBh1B,MAAM,CAAC81B,IAAI,GAAGA,IAAI;AAClB91B,MAAM,CAACu2B,IAAI,GAAGA,IAAI;AAClBv2B,MAAM,CAAC64B,IAAI,GAAGA,IAAI;AAClB74B,MAAM,CAAC46B,IAAI,GAAGA,IAAI;AAClB56B,MAAM,CAACk7B,IAAI,GAAGA,IAAI;AAElB,IAAIE,UAAU,GAAG,IAAI9iC,CAAC,CAAC0D,MAAM,CAAC;EAC5BmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpBs3B,QAAQ,EAAE/iC,CAAC,CAACmE,MAAM;EAClB8N,MAAM,EAAE,IAAIjS,CAAC,CAACkF,OAAO,CAAClF,CAAC,CAACmE,MAAM,EAAE,MAAM,EAAE;IACtCgB,IAAI,EAAE;EACR,CAAC,CAAC;EACFvD,MAAM,EAAE5B,CAAC,CAACmE;AACZ,CAAC,CAAC;AACF,IAAI6+B,SAAS,GAAG,IAAIhjC,CAAC,CAAC0D,MAAM,CAAC;EAC3BmI,GAAG,EAAE,IAAI7L,CAAC,CAACyL,MAAM,CAAC,CAAC,CAAC;EACpBw3B,SAAS,EAAEjjC,CAAC,CAAC4D,MAAM;EACnBuC,WAAW,EAAEnG,CAAC,CAAC4D,MAAM;EACrBwC,aAAa,EAAEpG,CAAC,CAAC4D,MAAM;EACvByC,UAAU,EAAErG,CAAC,CAAC4D,MAAM;EACpB8D,MAAM,EAAE,IAAI1H,CAAC,CAACmD,KAAK,CAAC2/B,UAAU,EAAE,WAAW;AAC7C,CAAC,CAAC;AAEFE,SAAS,CAAC32B,OAAO,GAAG,YAAY;EAC9B,IAAI3E,MAAM,GAAG,CAAC,CAAC;EAEf,KAAK,IAAI6E,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACyH,MAAM,CAAC,EAAE8E,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;IACtG,IAAIpF,KAAK,GAAGmF,KAAK,CAAC/J,KAAK;IACvBiF,MAAM,CAACL,KAAK,CAACwE,GAAG,CAAC,GAAGxE,KAAK;EAC3B;EAEA,IAAI,CAACK,MAAM,GAAGA,MAAM;AACtB,CAAC;AAEDs7B,SAAS,CAACp2B,SAAS,GAAG,UAAUN,MAAM,EAAE;EACtC,IAAI42B,QAAQ,GAAG,EAAE;EAEjB,KAAK,IAAIr3B,GAAG,IAAI,IAAI,CAACnE,MAAM,EAAE;IAC3B,IAAIL,KAAK,GAAG,IAAI,CAACK,MAAM,CAACmE,GAAG,CAAC;IAE5B,IAAIxE,KAAK,EAAE;MACT67B,QAAQ,CAAChiC,IAAI,CAAC;QACZ2K,GAAG,EAAEA,GAAG;QACRk3B,QAAQ,EAAE,CAAC;QACX9wB,MAAM,EAAE,IAAIjS,CAAC,CAACmjC,WAAW,CAACz7B,MAAM,CAACmE,GAAG,CAAC,EAAExE,KAAK,CAAC;QAC7CzF,MAAM,EAAE8F,MAAM,CAACmE,GAAG,CAAC,CAACsB,IAAI,CAAC9F,KAAK;MAChC,CAAC,CAAC;IACJ;EACF;EAEA,IAAI,CAACwE,GAAG,GAAG,MAAM;EACjB,IAAI,CAACo3B,SAAS,GAAGC,QAAQ,CAACthC,MAAM;EAChC,IAAI,CAAC8F,MAAM,GAAGw7B,QAAQ;EACtB,IAAIE,eAAe,GAAGv9B,IAAI,CAACw9B,KAAK,CAACx9B,IAAI,CAACy9B,GAAG,CAAC,IAAI,CAACL,SAAS,CAAC,GAAGp9B,IAAI,CAAC09B,GAAG,CAAC;EACrE,IAAIC,WAAW,GAAG39B,IAAI,CAAC49B,GAAG,CAAC,CAAC,EAAEL,eAAe,CAAC;EAC9C,IAAI,CAACj9B,WAAW,GAAGq9B,WAAW,GAAG,EAAE;EACnC,IAAI,CAACp9B,aAAa,GAAGP,IAAI,CAACy9B,GAAG,CAACE,WAAW,CAAC,GAAG39B,IAAI,CAAC09B,GAAG;EACrD,IAAI,CAACl9B,UAAU,GAAG,IAAI,CAAC48B,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC98B,WAAW;AAC1D,CAAC;AAED,SAASu9B,YAAYA,CAACxxB,GAAG,EAAEyxB,GAAG,EAAE;EAC9B,IAAIC,GAAG,GAAG,CAAC;EACX,IAAI99B,GAAG,GAAGoM,GAAG,CAACtQ,MAAM,GAAG,CAAC;EAExB,OAAOgiC,GAAG,IAAI99B,GAAG,EAAE;IACjB,IAAI0c,GAAG,GAAGohB,GAAG,GAAG99B,GAAG,IAAI,CAAC;IACxB,IAAIma,GAAG,GAAG0jB,GAAG,CAACzxB,GAAG,CAACsQ,GAAG,CAAC,CAAC;IAEvB,IAAIvC,GAAG,GAAG,CAAC,EAAE;MACXna,GAAG,GAAG0c,GAAG,GAAG,CAAC;IACf,CAAC,MAAM,IAAIvC,GAAG,GAAG,CAAC,EAAE;MAClB2jB,GAAG,GAAGphB,GAAG,GAAG,CAAC;IACf,CAAC,MAAM;MACL,OAAOA,GAAG;IACZ;EACF;EAEA,OAAO,CAAC,CAAC;AACX;AACA,SAAStC,KAAKA,CAACjB,KAAK,EAAEjN,GAAG,EAAE;EACzB,IAAIkO,KAAK,GAAG,EAAE;EAEd,OAAOjB,KAAK,GAAGjN,GAAG,EAAE;IAClBkO,KAAK,CAAChf,IAAI,CAAC+d,KAAK,EAAE,CAAC;EACrB;EAEA,OAAOiB,KAAK;AACd;AAEA,IAAI2jB,QAAQ;AAEZ,IAAI;EACF,IAAIC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AACnC,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;AAEf,IAAIC,aAAa,IAAIJ,QAAQ,GAAG,aAAa,YAAY;EACvD,SAASI,aAAaA,CAACC,SAAS,EAAE;IAChC;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC58B,IAAI,GAAG,IAAI,CAAC68B,YAAY,CAACF,SAAS,EAAE;IAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAAE;IACzB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C;;IAEA,IAAI,CAAC,IAAI,CAAC38B,IAAI,IAAIu8B,KAAK,EAAE;MACvB,KAAK,IAAIv3B,SAAS,GAAGtM,+BAA+B,CAACikC,SAAS,CAACx8B,MAAM,CAAC,EAAE8E,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;QAC3G,IAAIlF,IAAI,GAAGiF,KAAK,CAAC/J,KAAK;QACtB,IAAI0hC,QAAQ,GAAGl5B,WAAW,CAAC1D,IAAI,CAACJ,UAAU,EAAEI,IAAI,CAACH,UAAU,EAAEG,IAAI,CAACF,KAAK,CAAC9B,QAAQ,GAAG,CAAC,CAAC;QAErF,IAAIu+B,KAAK,CAACO,cAAc,CAACF,QAAQ,CAAC,EAAE;UAClC,IAAI,CAAC58B,IAAI,GAAGA,IAAI,CAACF,KAAK;UACtB,IAAI,CAAC88B,QAAQ,GAAGA,QAAQ;QAC1B;MACF;IACF;IAEA,IAAI,CAAC,IAAI,CAAC58B,IAAI,EAAE;MACd,MAAM,IAAIjG,KAAK,CAAC,uCAAuC,CAAC;IAC1D;IAEA,IAAI,CAACgjC,GAAG,GAAG,IAAI,CAACF,YAAY,CAACF,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEjD,IAAI,IAAI,CAACI,GAAG,IAAI,IAAI,CAACA,GAAG,CAAC98B,OAAO,KAAK,EAAE,EAAE;MACvC,IAAI,CAAC88B,GAAG,GAAG,IAAI;IACjB;EACF;EAEA,IAAIrzB,MAAM,GAAGgzB,aAAa,CAAC/yB,SAAS;EAEpCD,MAAM,CAACmzB,YAAY,GAAG,SAASA,YAAYA,CAACF,SAAS,EAAEvO,KAAK,EAAE;IAC5D,KAAK,IAAIhjB,UAAU,GAAG1S,+BAA+B,CAAC01B,KAAK,CAAC,EAAE/iB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;MACpG,IAAI83B,YAAY,GAAG3xB,MAAM,CAACnQ,KAAK;QAC3B0E,UAAU,GAAGo9B,YAAY,CAAC,CAAC,CAAC;QAC5Bn9B,UAAU,GAAGm9B,YAAY,CAAC,CAAC,CAAC;MAEhC,KAAK,IAAIlvB,UAAU,GAAGpV,+BAA+B,CAACikC,SAAS,CAACx8B,MAAM,CAAC,EAAE4N,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE5I,IAAI,GAAG;QAC/G,IAAIlF,IAAI,GAAG+N,MAAM,CAAC7S,KAAK;QAEvB,IAAI8E,IAAI,CAACJ,UAAU,KAAKA,UAAU,IAAII,IAAI,CAACH,UAAU,KAAKA,UAAU,EAAE;UACpE,OAAOG,IAAI,CAACF,KAAK;QACnB;MACF;IACF;IAEA,OAAO,IAAI;EACb,CAAC;EAED4J,MAAM,CAACuzB,MAAM,GAAG,SAASA,MAAMA,CAACC,SAAS,EAAEC,iBAAiB,EAAE;IAC5D;IACA;IACA,IAAI,IAAI,CAACP,QAAQ,EAAE;MACjB,IAAIQ,GAAG,GAAGb,KAAK,CAAC1xB,MAAM,CAAC3G,MAAM,CAACm5B,aAAa,CAACH,SAAS,CAAC,EAAE,IAAI,CAACN,QAAQ,CAAC;MACtEM,SAAS,GAAG,CAAC;MAEb,KAAK,IAAI9iC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgjC,GAAG,CAAC/iC,MAAM,EAAED,CAAC,EAAE,EAAE;QACnC8iC,SAAS,GAAGA,SAAS,IAAI,CAAC,GAAGE,GAAG,CAAChjC,CAAC,CAAC;MACrC,CAAC,CAAC;IAEJ,CAAC,MAAM,IAAI+iC,iBAAiB,EAAE;MAC5B,IAAIviB,GAAG,GAAG,IAAI,CAAC0iB,oBAAoB,CAACJ,SAAS,EAAEC,iBAAiB,CAAC;MAEjE,IAAIviB,GAAG,EAAE;QACP,OAAOA,GAAG;MACZ;IACF;IAEA,IAAI5a,IAAI,GAAG,IAAI,CAACA,IAAI;IAEpB,QAAQA,IAAI,CAACC,OAAO;MAClB,KAAK,CAAC;QACJ,OAAOD,IAAI,CAAC/B,OAAO,CAAChD,GAAG,CAACiiC,SAAS,CAAC,IAAI,CAAC;MAEzC,KAAK,CAAC;QACJ;UACE,IAAIb,GAAG,GAAG,CAAC;UACX,IAAI99B,GAAG,GAAGyB,IAAI,CAACrB,QAAQ,GAAG,CAAC;UAE3B,OAAO09B,GAAG,IAAI99B,GAAG,EAAE;YACjB,IAAI0c,GAAG,GAAGohB,GAAG,GAAG99B,GAAG,IAAI,CAAC;YAExB,IAAI2+B,SAAS,GAAGl9B,IAAI,CAACd,SAAS,CAACjE,GAAG,CAACggB,GAAG,CAAC,EAAE;cACvC1c,GAAG,GAAG0c,GAAG,GAAG,CAAC;YACf,CAAC,MAAM,IAAIiiB,SAAS,GAAGl9B,IAAI,CAACjB,OAAO,CAAC9D,GAAG,CAACggB,GAAG,CAAC,EAAE;cAC5CohB,GAAG,GAAGphB,GAAG,GAAG,CAAC;YACf,CAAC,MAAM;cACL,IAAIsiB,WAAW,GAAGv9B,IAAI,CAACvD,aAAa,CAACxB,GAAG,CAACggB,GAAG,CAAC;cAE7C,IAAIuiB,IAAI,GAAG,KAAK,CAAC;cAEjB,IAAID,WAAW,KAAK,CAAC,EAAE;gBACrBC,IAAI,GAAGN,SAAS,GAAGl9B,IAAI,CAACzD,OAAO,CAACtB,GAAG,CAACggB,GAAG,CAAC;cAC1C,CAAC,MAAM;gBACL,IAAIvD,KAAK,GAAG6lB,WAAW,GAAG,CAAC,IAAIL,SAAS,GAAGl9B,IAAI,CAACd,SAAS,CAACjE,GAAG,CAACggB,GAAG,CAAC,CAAC,IAAIjb,IAAI,CAACrB,QAAQ,GAAGsc,GAAG,CAAC;gBAC3FuiB,IAAI,GAAGx9B,IAAI,CAACvB,eAAe,CAACxD,GAAG,CAACyc,KAAK,CAAC,IAAI,CAAC;gBAE3C,IAAI8lB,IAAI,KAAK,CAAC,EAAE;kBACdA,IAAI,IAAIx9B,IAAI,CAACzD,OAAO,CAACtB,GAAG,CAACggB,GAAG,CAAC;gBAC/B;cACF;cAEA,OAAOuiB,IAAI,GAAG,MAAM;YACtB;UACF;UAEA,OAAO,CAAC;QACV;MAEF,KAAK,CAAC;QACJ,MAAM,IAAIzjC,KAAK,CAAC,qBAAqB,CAAC;MAExC,KAAK,CAAC;MACN,KAAK,EAAE;QACL,OAAOiG,IAAI,CAACZ,YAAY,CAACnE,GAAG,CAACiiC,SAAS,GAAGl9B,IAAI,CAAC5D,SAAS,CAAC,IAAI,CAAC;MAE/D,KAAK,EAAE;MACP,KAAK,EAAE;QACL;UACE,IAAIqhC,IAAI,GAAG,CAAC;UAEZ,IAAIC,IAAI,GAAG19B,IAAI,CAACT,OAAO,GAAG,CAAC;UAE3B,OAAOk+B,IAAI,IAAIC,IAAI,EAAE;YACnB,IAAIC,IAAI,GAAGF,IAAI,GAAGC,IAAI,IAAI,CAAC;YAE3B,IAAIE,KAAK,GAAG59B,IAAI,CAACR,MAAM,CAACvE,GAAG,CAAC0iC,IAAI,CAAC;YAEjC,IAAIT,SAAS,GAAGU,KAAK,CAACjhC,aAAa,EAAE;cACnC+gC,IAAI,GAAGC,IAAI,GAAG,CAAC;YACjB,CAAC,MAAM,IAAIT,SAAS,GAAGU,KAAK,CAAC/gC,WAAW,EAAE;cACxC4gC,IAAI,GAAGE,IAAI,GAAG,CAAC;YACjB,CAAC,MAAM;cACL,IAAI39B,IAAI,CAACC,OAAO,KAAK,EAAE,EAAE;gBACvB,OAAO29B,KAAK,CAAC9gC,OAAO,IAAIogC,SAAS,GAAGU,KAAK,CAACjhC,aAAa,CAAC;cAC1D,CAAC,MAAM;gBACL,OAAOihC,KAAK,CAAC9gC,OAAO;cACtB;YACF;UACF;UAEA,OAAO,CAAC;QACV;MAEF,KAAK,EAAE;QACL,MAAM,IAAI/C,KAAK,CAAC,sBAAsB,CAAC;MAEzC;QACE,MAAM,IAAIA,KAAK,CAAC,sBAAsB,GAAGiG,IAAI,CAACC,OAAO,CAAC;IAC1D;EACF,CAAC;EAEDyJ,MAAM,CAAC4zB,oBAAoB,GAAG,SAASA,oBAAoBA,CAACJ,SAAS,EAAEC,iBAAiB,EAAE;IACxF,IAAI,CAAC,IAAI,CAACJ,GAAG,EAAE;MACb,OAAO,CAAC;IACV;IAEA,IAAIc,SAAS,GAAG,IAAI,CAACd,GAAG,CAACr9B,YAAY,CAACo+B,OAAO,CAAC,CAAC;IAC/C,IAAI1jC,CAAC,GAAG+hC,YAAY,CAAC0B,SAAS,EAAE,UAAUE,CAAC,EAAE;MAC3C,OAAOZ,iBAAiB,GAAGY,CAAC,CAACtgC,WAAW;IAC1C,CAAC,CAAC;IACF,IAAIugC,GAAG,GAAGH,SAAS,CAACzjC,CAAC,CAAC;IAEtB,IAAIA,CAAC,KAAK,CAAC,CAAC,IAAI4jC,GAAG,CAACtgC,UAAU,EAAE;MAC9BtD,CAAC,GAAG+hC,YAAY,CAAC6B,GAAG,CAACtgC,UAAU,EAAE,UAAUqgC,CAAC,EAAE;QAC5C,OAAOb,SAAS,GAAGa,CAAC,CAAC/gC,iBAAiB,GAAG,CAAC,CAAC,GAAGkgC,SAAS,GAAGa,CAAC,CAAC/gC,iBAAiB,GAAG+gC,CAAC,CAAC7gC,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5G,CAAC,CAAC;IACJ;IAEA,IAAI9C,CAAC,KAAK,CAAC,CAAC,IAAI4jC,GAAG,CAACngC,aAAa,EAAE;MACjCzD,CAAC,GAAG+hC,YAAY,CAAC6B,GAAG,CAACngC,aAAa,EAAE,UAAUkgC,CAAC,EAAE;QAC/C,OAAOb,SAAS,GAAGa,CAAC,CAAC1gC,YAAY;MACnC,CAAC,CAAC;MAEF,IAAIjD,CAAC,KAAK,CAAC,CAAC,EAAE;QACZ,OAAO4jC,GAAG,CAACngC,aAAa,CAACzD,CAAC,CAAC,CAAC0C,OAAO;MACrC;IACF;IAEA,OAAO,CAAC;EACV,CAAC;EAED4M,MAAM,CAACu0B,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;IAClD,IAAIj+B,IAAI,GAAG,IAAI,CAACA,IAAI;IAEpB,QAAQA,IAAI,CAACC,OAAO;MAClB,KAAK,CAAC;QACJ,OAAO0Y,KAAK,CAAC,CAAC,EAAE3Y,IAAI,CAAC/B,OAAO,CAAC5D,MAAM,CAAC;MAEtC,KAAK,CAAC;QACJ;UACE,IAAIqe,GAAG,GAAG,EAAE;UACZ,IAAIwlB,QAAQ,GAAGl+B,IAAI,CAACjB,OAAO,CAAC++B,OAAO,CAAC,CAAC;UAErC,KAAK,IAAI1jC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jC,QAAQ,CAAC7jC,MAAM,EAAED,CAAC,EAAE,EAAE;YACxC,IAAI+jC,IAAI,GAAGD,QAAQ,CAAC9jC,CAAC,CAAC,GAAG,CAAC;YAC1B,IAAIoQ,KAAK,GAAGxK,IAAI,CAACd,SAAS,CAACjE,GAAG,CAACb,CAAC,CAAC;YACjCse,GAAG,CAAC/e,IAAI,CAACqC,KAAK,CAAC0c,GAAG,EAAEC,KAAK,CAACnO,KAAK,EAAE2zB,IAAI,CAAC,CAAC;UACzC;UAEA,OAAOzlB,GAAG;QACZ;MAEF,KAAK,CAAC;QACJ,MAAM,IAAI3e,KAAK,CAAC,qBAAqB,CAAC;MAExC,KAAK,CAAC;MACN,KAAK,EAAE;QACL,OAAO4e,KAAK,CAAC3Y,IAAI,CAAC5D,SAAS,EAAE4D,IAAI,CAAC5D,SAAS,GAAG4D,IAAI,CAACZ,YAAY,CAAC/E,MAAM,CAAC;MAEzE,KAAK,EAAE;MACP,KAAK,EAAE;QACL;UACE,IAAI+jC,IAAI,GAAG,EAAE;UAEb,KAAK,IAAIpwB,UAAU,GAAGtV,+BAA+B,CAACsH,IAAI,CAACR,MAAM,CAACs+B,OAAO,CAAC,CAAC,CAAC,EAAE7vB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE9I,IAAI,GAAG;YACpH,IAAI04B,KAAK,GAAG3vB,MAAM,CAAC/S,KAAK;YAExBkjC,IAAI,CAACzkC,IAAI,CAACqC,KAAK,CAACoiC,IAAI,EAAEzlB,KAAK,CAACilB,KAAK,CAACjhC,aAAa,EAAEihC,KAAK,CAAC/gC,WAAW,GAAG,CAAC,CAAC,CAAC;UAC1E;UAEA,OAAOuhC,IAAI;QACb;MAEF,KAAK,EAAE;QACL,MAAM,IAAIrkC,KAAK,CAAC,sBAAsB,CAAC;MAEzC;QACE,MAAM,IAAIA,KAAK,CAAC,sBAAsB,GAAGiG,IAAI,CAACC,OAAO,CAAC;IAC1D;EACF,CAAC;EAEDyJ,MAAM,CAAC20B,kBAAkB,GAAG,SAASA,kBAAkBA,CAACzjB,GAAG,EAAE;IAC3D,IAAI5a,IAAI,GAAG,IAAI,CAACA,IAAI;IAEpB,QAAQA,IAAI,CAACC,OAAO;MAClB,KAAK,CAAC;QACJ;UACE,IAAIyY,GAAG,GAAG,EAAE;UAEZ,KAAK,IAAIte,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;YAC5B,IAAI4F,IAAI,CAAC/B,OAAO,CAAChD,GAAG,CAACb,CAAC,CAAC,KAAKwgB,GAAG,EAAE;cAC/BlC,GAAG,CAAC/e,IAAI,CAACS,CAAC,CAAC;YACb;UACF;UAEA,OAAOse,GAAG;QACZ;MAEF,KAAK,CAAC;QACJ;UACE,IAAI4lB,KAAK,GAAG,EAAE;UAEd,KAAK,IAAIpzB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGlL,IAAI,CAACrB,QAAQ,EAAEuM,EAAE,EAAE,EAAE;YACzC,IAAIT,GAAG,GAAGzK,IAAI,CAACjB,OAAO,CAAC9D,GAAG,CAACiQ,EAAE,CAAC;YAC9B,IAAIV,KAAK,GAAGxK,IAAI,CAACd,SAAS,CAACjE,GAAG,CAACiQ,EAAE,CAAC;YAClC,IAAIqyB,WAAW,GAAGv9B,IAAI,CAACvD,aAAa,CAACxB,GAAG,CAACiQ,EAAE,CAAC;YAC5C,IAAIqzB,KAAK,GAAGv+B,IAAI,CAACzD,OAAO,CAACtB,GAAG,CAACiQ,EAAE,CAAC;YAEhC,KAAK,IAAIszB,CAAC,GAAGh0B,KAAK,EAAEg0B,CAAC,IAAI/zB,GAAG,EAAE+zB,CAAC,EAAE,EAAE;cACjC,IAAIC,CAAC,GAAG,CAAC;cAET,IAAIlB,WAAW,KAAK,CAAC,EAAE;gBACrBkB,CAAC,GAAGD,CAAC,GAAGD,KAAK;cACf,CAAC,MAAM;gBACL,IAAI7mB,KAAK,GAAG6lB,WAAW,GAAG,CAAC,IAAIiB,CAAC,GAAGh0B,KAAK,CAAC,IAAIxK,IAAI,CAACrB,QAAQ,GAAGuM,EAAE,CAAC;gBAChEuzB,CAAC,GAAGz+B,IAAI,CAACvB,eAAe,CAACxD,GAAG,CAACyc,KAAK,CAAC,IAAI,CAAC;gBAExC,IAAI+mB,CAAC,KAAK,CAAC,EAAE;kBACXA,CAAC,IAAIF,KAAK;gBACZ;cACF;cAEA,IAAIE,CAAC,KAAK7jB,GAAG,EAAE;gBACb0jB,KAAK,CAAC3kC,IAAI,CAAC6kC,CAAC,CAAC;cACf;YACF;UACF;UAEA,OAAOF,KAAK;QACd;MAEF,KAAK,EAAE;QACL;UACE,IAAII,KAAK,GAAG,EAAE;UAEd,KAAK,IAAIxwB,UAAU,GAAGxV,+BAA+B,CAACsH,IAAI,CAACR,MAAM,CAACs+B,OAAO,CAAC,CAAC,CAAC,EAAE3vB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAEhJ,IAAI,GAAG;YACpH,IAAI04B,KAAK,GAAGzvB,MAAM,CAACjT,KAAK;YAExB,IAAI0f,GAAG,IAAIgjB,KAAK,CAAC9gC,OAAO,IAAI8d,GAAG,IAAIgjB,KAAK,CAAC9gC,OAAO,IAAI8gC,KAAK,CAAC/gC,WAAW,GAAG+gC,KAAK,CAACjhC,aAAa,CAAC,EAAE;cAC5F+hC,KAAK,CAAC/kC,IAAI,CAACikC,KAAK,CAACjhC,aAAa,IAAIie,GAAG,GAAGgjB,KAAK,CAAC9gC,OAAO,CAAC,CAAC;YACzD;UACF;UAEA,OAAO4hC,KAAK;QACd;MAEF,KAAK,EAAE;QACL;UACE,IAAIC,KAAK,GAAG,EAAE;UAEd,KAAK,IAAIC,UAAU,GAAGlmC,+BAA+B,CAACsH,IAAI,CAACR,MAAM,CAACs+B,OAAO,CAAC,CAAC,CAAC,EAAEe,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE15B,IAAI,GAAG;YACpH,IAAI45B,MAAM,GAAGD,MAAM,CAAC3jC,KAAK;YAEzB,IAAI0f,GAAG,KAAKkkB,MAAM,CAAChiC,OAAO,EAAE;cAC1B6hC,KAAK,CAAChlC,IAAI,CAACqC,KAAK,CAAC2iC,KAAK,EAAEhmB,KAAK,CAACmmB,MAAM,CAACniC,aAAa,EAAEmiC,MAAM,CAACjiC,WAAW,GAAG,CAAC,CAAC,CAAC;YAC9E;UACF;UAEA,OAAO8hC,KAAK;QACd;MAEF;QACE,MAAM,IAAI5kC,KAAK,CAAC,sBAAsB,GAAGiG,IAAI,CAACC,OAAO,CAAC;IAC1D;EACF,CAAC;EAED,OAAOy8B,aAAa;AACtB,CAAC,CAAC,CAAC,EAAG9jC,yBAAyB,CAAC0jC,QAAQ,CAAC3yB,SAAS,EAAE,iBAAiB,EAAE,CAAC9O,KAAK,CAAC,EAAEO,MAAM,CAAC2jC,wBAAwB,CAACzC,QAAQ,CAAC3yB,SAAS,EAAE,iBAAiB,CAAC,EAAE2yB,QAAQ,CAAC3yB,SAAS,CAAC,EAAE/Q,yBAAyB,CAAC0jC,QAAQ,CAAC3yB,SAAS,EAAE,oBAAoB,EAAE,CAAC9O,KAAK,CAAC,EAAEO,MAAM,CAAC2jC,wBAAwB,CAACzC,QAAQ,CAAC3yB,SAAS,EAAE,oBAAoB,CAAC,EAAE2yB,QAAQ,CAAC3yB,SAAS,CAAC,EAAG2yB,QAAQ,CAAC;AAEpW,IAAI0C,aAAa,GAAG,aAAa,YAAY;EAC3C,SAASA,aAAaA,CAACzkC,IAAI,EAAE;IAC3B,IAAI,CAAC20B,IAAI,GAAG30B,IAAI,CAAC20B,IAAI;EACvB;EAEA,IAAIxlB,MAAM,GAAGs1B,aAAa,CAACr1B,SAAS;EAEpCD,MAAM,CAAC5E,OAAO,GAAG,SAASA,OAAOA,CAAC0M,MAAM,EAAEytB,SAAS,EAAE;IACnD,KAAK,IAAIzjB,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGhK,MAAM,CAACnX,MAAM,GAAG,CAAC,EAAEmhB,UAAU,EAAE,EAAE;MACrE,IAAIiS,IAAI,GAAGjc,MAAM,CAACgK,UAAU,CAAC,CAAC0jB,EAAE;MAChC,IAAIxR,KAAK,GAAGlc,MAAM,CAACgK,UAAU,GAAG,CAAC,CAAC,CAAC0jB,EAAE;MACrCD,SAAS,CAACzjB,UAAU,CAAC,CAACqJ,QAAQ,IAAI,IAAI,CAACsa,UAAU,CAAC1R,IAAI,EAAEC,KAAK,CAAC;IAChE;EACF,CAAC;EAEDhkB,MAAM,CAACy1B,UAAU,GAAG,SAASA,UAAUA,CAAC1R,IAAI,EAAEC,KAAK,EAAE;IACnD,IAAIhV,GAAG,GAAG,CAAC;IAEX,KAAK,IAAI1T,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACw2B,IAAI,CAAC/uB,MAAM,CAAC,EAAE8E,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MAC3G,IAAIpF,KAAK,GAAGmF,KAAK,CAAC/J,KAAK;MAEvB,IAAI4E,KAAK,CAACkT,QAAQ,CAACosB,WAAW,EAAE;QAC9B;MACF;MAEA,QAAQt/B,KAAK,CAACG,OAAO;QACnB,KAAK,CAAC;UACJ,IAAI,CAACH,KAAK,CAACkT,QAAQ,CAACimB,UAAU,EAAE;YAC9B;UACF;UAEA;QAEF,KAAK,CAAC;UACJ,IAAIn5B,KAAK,CAACkT,QAAQ,CAACkmB,QAAQ,IAAIp5B,KAAK,CAACkT,QAAQ,CAACqsB,SAAS,EAAE;YACvD;UACF;UAEA;QAEF;UACE,MAAM,IAAItlC,KAAK,CAAC,oCAAoC,GAAG+F,KAAK,CAACG,OAAO,CAAC;MACzE;MAEA,IAAIsF,GAAG,GAAG,CAAC;MACX,IAAIyF,CAAC,GAAGlL,KAAK,CAAC4e,QAAQ;MAEtB,QAAQ5e,KAAK,CAACpG,MAAM;QAClB,KAAK,CAAC;UACJ,IAAI4lC,OAAO,GAAGnD,YAAY,CAACnxB,CAAC,CAACojB,KAAK,EAAE,UAAUmR,IAAI,EAAE;YAClD,OAAO9R,IAAI,GAAG8R,IAAI,CAAC9R,IAAI,IAAIC,KAAK,GAAG6R,IAAI,CAAC7R,KAAK;UAC/C,CAAC,CAAC;UAEF,IAAI4R,OAAO,IAAI,CAAC,EAAE;YAChB/5B,GAAG,GAAGyF,CAAC,CAACojB,KAAK,CAACkR,OAAO,CAAC,CAACpkC,KAAK;UAC9B;UAEA;QAEF,KAAK,CAAC;UACJ,IAAIskC,UAAU,GAAG,CAAC;YACdC,WAAW,GAAG,CAAC;UAEnB,IAAIhS,IAAI,IAAIziB,CAAC,CAACgjB,SAAS,CAACJ,UAAU,IAAIH,IAAI,GAAGziB,CAAC,CAACgjB,SAAS,CAACJ,UAAU,GAAG5iB,CAAC,CAACgjB,SAAS,CAACH,OAAO,EAAE;YACzF2R,UAAU,GAAGx0B,CAAC,CAACgjB,SAAS,CAACjlB,OAAO,CAAC0kB,IAAI,GAAGziB,CAAC,CAACgjB,SAAS,CAACJ,UAAU,CAAC;UACjE,CAAC,MAAM;YACL4R,UAAU,GAAGx0B,CAAC,CAACsjB,KAAK,CAACP,GAAG;UAC1B;UAEA,IAAIL,KAAK,IAAI1iB,CAAC,CAACqjB,UAAU,CAACT,UAAU,IAAIF,KAAK,GAAG1iB,CAAC,CAACqjB,UAAU,CAACT,UAAU,GAAG5iB,CAAC,CAACqjB,UAAU,CAACR,OAAO,EAAE;YAC9F4R,WAAW,GAAGz0B,CAAC,CAACqjB,UAAU,CAACtlB,OAAO,CAAC2kB,KAAK,GAAG1iB,CAAC,CAACqjB,UAAU,CAACT,UAAU,CAAC;UACrE;UAEA,IAAIlW,KAAK,GAAG,CAAC8nB,UAAU,GAAGC,WAAW,GAAGz0B,CAAC,CAACsjB,KAAK,CAACP,GAAG,IAAI,CAAC;UACxDxoB,GAAG,GAAGyF,CAAC,CAACsjB,KAAK,CAACpH,MAAM,CAACjsB,GAAG,CAACyc,KAAK,CAAC;UAC/B;QAEF,KAAK,CAAC;UACJ,IAAI+V,IAAI,IAAIziB,CAAC,CAACuG,UAAU,IAAImc,KAAK,IAAI1iB,CAAC,CAACuG,UAAU,EAAE;YACjD,OAAO,CAAC;UACV;UAEAhM,GAAG,GAAGyF,CAAC,CAAC0jB,SAAS,CAAC1jB,CAAC,CAAC6jB,SAAS,CAAC7jB,CAAC,CAAC2jB,SAAS,CAAClB,IAAI,CAAC,GAAGziB,CAAC,CAACyjB,eAAe,GAAGzjB,CAAC,CAAC4jB,UAAU,CAAClB,KAAK,CAAC,CAAC,CAAC;UAC3F;QAEF;UACE,MAAM,IAAI3zB,KAAK,CAAC,uCAAuC,GAAG+F,KAAK,CAACpG,MAAM,CAAC;MAC3E,CAAC,CAAC;MACF;;MAGA,IAAIoG,KAAK,CAACkT,QAAQ,CAAC0sB,QAAQ,EAAE;QAC3BhnB,GAAG,GAAGnT,GAAG;MACX,CAAC,MAAM;QACLmT,GAAG,IAAInT,GAAG;MACZ;IACF;IAEA,OAAOmT,GAAG;EACZ,CAAC;EAED,OAAOsmB,aAAa;AACtB,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIW,mBAAmB,GAAG,aAAa,YAAY;EACjD,SAASA,mBAAmBA,CAACplC,IAAI,EAAE;IACjC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAImP,MAAM,GAAGi2B,mBAAmB,CAACh2B,SAAS;EAE1CD,MAAM,CAACk2B,cAAc,GAAG,SAASA,cAAcA,CAACpuB,MAAM,EAAEytB,SAAS,EAAE;IACjE;IACA,IAAIY,YAAY,GAAG,CAAC;IACpB,IAAIC,UAAU,GAAG,CAAC;IAElB,KAAK,IAAIpoB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlG,MAAM,CAACnX,MAAM,EAAEqd,KAAK,EAAE,EAAE;MAClD,IAAI+C,KAAK,GAAGjJ,MAAM,CAACkG,KAAK,CAAC;MAEzB,IAAI+C,KAAK,CAACslB,MAAM,EAAE;QAChB;QACAD,UAAU,GAAGpoB,KAAK;MACpB,CAAC,MAAM;QACL,IAAImoB,YAAY,KAAKC,UAAU,EAAE;UAC/B,IAAI,CAACE,eAAe,CAACxuB,MAAM,EAAEytB,SAAS,EAAEY,YAAY,EAAEC,UAAU,CAAC;QACnE;QAEAD,YAAY,GAAGC,UAAU,GAAGpoB,KAAK;MACnC;IACF;IAEA,IAAImoB,YAAY,KAAKC,UAAU,EAAE;MAC/B,IAAI,CAACE,eAAe,CAACxuB,MAAM,EAAEytB,SAAS,EAAEY,YAAY,EAAEC,UAAU,CAAC;IACnE;IAEA,OAAOb,SAAS;EAClB,CAAC;EAEDv1B,MAAM,CAACs2B,eAAe,GAAG,SAASA,eAAeA,CAACxuB,MAAM,EAAEytB,SAAS,EAAEY,YAAY,EAAEC,UAAU,EAAE;IAC7F,IAAI3N,IAAI,GAAG3gB,MAAM,CAACquB,YAAY,CAAC;IAC/B,IAAII,OAAO,GAAG9N,IAAI,CAAC+N,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEhC,IAAIhO,IAAI,CAACiO,UAAU,CAAC/lC,MAAM,GAAG,CAAC,EAAE;MAC9B;MACA4lC,OAAO,CAACI,IAAI,IAAI,CAAClO,IAAI,CAACiO,UAAU,CAAC/lC,MAAM,GAAG,CAAC,IAAI4lC,OAAO,CAAClkB,KAAK,GAAGoW,IAAI,CAACiO,UAAU,CAAC/lC,MAAM;IACvF;IAEA,IAAIqiB,OAAO,GAAG,CAACuiB,SAAS,CAACY,YAAY,CAAC,CAAChb,QAAQ;IAC/C,IAAIlI,OAAO,GAAG,CAAC;IACf,IAAI2jB,IAAI,GAAG,IAAI,CAAC/lC,IAAI,CAACmG,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEtC,KAAK,IAAIgX,KAAK,GAAGmoB,YAAY,GAAG,CAAC,EAAEnoB,KAAK,IAAIooB,UAAU,EAAEpoB,KAAK,EAAE,EAAE;MAC/D,IAAI6oB,IAAI,GAAG/uB,MAAM,CAACkG,KAAK,CAAC;MACxB,IAAI8oB,OAAO,GAAGD,IAAI,CAACL,IAAI;MACvB,IAAIO,QAAQ,GAAGxB,SAAS,CAACvnB,KAAK,CAAC;MAC/B,IAAIgpB,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAACJ,IAAI,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;MAE/D,IAAIM,cAAc,KAAK,eAAe,EAAE;QACtCD,QAAQ,CAAC/jB,OAAO,GAAG+jB,QAAQ,CAAC9jB,OAAO,GAAG,CAAC,CAAC,CAAC;;QAEzC,QAAQ+jB,cAAc;UACpB,KAAK,cAAc;UACnB,KAAK,cAAc;YACjB;YACAD,QAAQ,CAAC/jB,OAAO,IAAIujB,OAAO,CAACI,IAAI,GAAGG,OAAO,CAACzkB,KAAK,GAAG,CAAC,GAAGykB,OAAO,CAACH,IAAI;YACnE;UAEF,KAAK,qBAAqB;UAC1B,KAAK,YAAY;UACjB,KAAK,YAAY;YACf;YACAI,QAAQ,CAAC/jB,OAAO,IAAIujB,OAAO,CAACI,IAAI,GAAGG,OAAO,CAACH,IAAI;YAC/C;UAEF,KAAK,sBAAsB;UAC3B,KAAK,aAAa;UAClB,KAAK,aAAa;YAChB;YACAI,QAAQ,CAAC/jB,OAAO,IAAIujB,OAAO,CAACW,IAAI,GAAGJ,OAAO,CAACzkB,KAAK,GAAGykB,OAAO,CAACH,IAAI;YAC/D;UAEF;YACE;YACA;YACAI,QAAQ,CAAC/jB,OAAO,IAAIujB,OAAO,CAACI,IAAI,GAAG,CAACJ,OAAO,CAAClkB,KAAK,GAAGykB,OAAO,CAACzkB,KAAK,IAAI,CAAC,GAAGykB,OAAO,CAACH,IAAI;QACzF,CAAC,CAAC;;QAGF,QAAQK,cAAc;UACpB,KAAK,cAAc;UACnB,KAAK,YAAY;UACjB,KAAK,OAAO;UACZ,KAAK,aAAa;UAClB,KAAK,qBAAqB;UAC1B,KAAK,gBAAgB;YACnB;YACA,IAAIA,cAAc,KAAK,qBAAqB,IAAIA,cAAc,KAAK,gBAAgB,EAAE;cACnFT,OAAO,CAACY,IAAI,IAAIP,IAAI;YACtB;YAEAG,QAAQ,CAAC9jB,OAAO,GAAG,CAACsjB,OAAO,CAACY,IAAI,GAAGL,OAAO,CAACM,IAAI;YAC/Cb,OAAO,CAACY,IAAI,IAAIL,OAAO,CAAC1kB,MAAM;YAC9B;UAEF,KAAK,cAAc;UACnB,KAAK,YAAY;UACjB,KAAK,OAAO;UACZ,KAAK,aAAa;UAClB,KAAK,gBAAgB;UACrB,KAAK,sBAAsB;YACzB;YACA,IAAI4kB,cAAc,KAAK,gBAAgB,IAAIA,cAAc,KAAK,sBAAsB,EAAE;cACpFT,OAAO,CAACa,IAAI,IAAIR,IAAI;YACtB;YAEAG,QAAQ,CAAC9jB,OAAO,GAAGsjB,OAAO,CAACa,IAAI,GAAGN,OAAO,CAACK,IAAI;YAC9CZ,OAAO,CAACa,IAAI,IAAIN,OAAO,CAAC1kB,MAAM;YAC9B;QACJ;QAEA2kB,QAAQ,CAAC5b,QAAQ,GAAG4b,QAAQ,CAAC3b,QAAQ,GAAG,CAAC;QACzC2b,QAAQ,CAAC/jB,OAAO,IAAIA,OAAO;QAC3B+jB,QAAQ,CAAC9jB,OAAO,IAAIA,OAAO;MAC7B,CAAC,MAAM;QACLD,OAAO,IAAI+jB,QAAQ,CAAC5b,QAAQ;QAC5BlI,OAAO,IAAI8jB,QAAQ,CAAC3b,QAAQ;MAC9B;IACF;IAEA;EACF,CAAC;EAEDpb,MAAM,CAACi3B,iBAAiB,GAAG,SAASA,iBAAiBA,CAACI,SAAS,EAAE;IAC/D,IAAIL,cAAc,GAAGznC,OAAO,CAAC0nC,iBAAiB,CAACI,SAAS,CAAC,CAAC,CAAC;;IAE3D,IAAI,CAACA,SAAS,GAAG,CAAC,IAAI,MAAM,MAAM,EAAE;MAClC,IAAIL,cAAc,KAAK,eAAe,EAAE;QACtC,QAAQK,SAAS;UACf,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;YACT,OAAO,aAAa;UAEtB,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK,MAAM;YACT,OAAO,OAAO;UAEhB,KAAK,MAAM;YACT,OAAO,OAAO;QAClB;MACF,CAAC,MAAM,IAAIA,SAAS,KAAK,MAAM,EAAE;QAC/B;QACA,OAAO,aAAa;MACtB;IACF;IAEA,QAAQL,cAAc;MACpB;MACA,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO;QACV;QACA,OAAO,OAAO;MAEhB,KAAK,OAAO;QACV;QACA,OAAO,gBAAgB;MAEzB,KAAK,OAAO;QACV;QACA,OAAO,aAAa;MAEtB,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO;QACV;QACA,OAAO,YAAY;MAErB,KAAK,OAAO;QACV;QACA,OAAO,OAAO;MAEhB,KAAK,OAAO;QACV;QACA;MACF;;MAEA,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO;QACV;QACA,OAAO,OAAO;MAEhB,KAAK,OAAO,CAAC,CAAC;;MAEd,KAAK,OAAO;QACV;QACA,OAAO,OAAO;MAChB;;MAEA,KAAK,QAAQ;QACX;QACA,OAAO,aAAa;MAEtB,KAAK,QAAQ;QACX;QACA,OAAO,aAAa;MACtB;;MAEA,KAAK,QAAQ;QACX;QACA,OAAO,OAAO;MAEhB,KAAK,QAAQ;QACX;QACA,OAAO,OAAO;MAChB;;MAEA,KAAK,QAAQ,CAAC,CAAC;;MAEf,KAAK,QAAQ;QACX;QACA,OAAO,OAAO;MAEhB,KAAK,QAAQ;QACX;QACA,OAAO,OAAO;IAClB;IAEA,OAAOA,cAAc;EACvB,CAAC;EAED,OAAOf,mBAAmB;AAC5B,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA,IAAIqB,IAAI,GAAG,aAAa,YAAY;EAClC,SAASA,IAAIA,CAACX,IAAI,EAAEQ,IAAI,EAAED,IAAI,EAAEE,IAAI,EAAE;IACpC,IAAIT,IAAI,KAAK,KAAK,CAAC,EAAE;MACnBA,IAAI,GAAGY,QAAQ;IACjB;IAEA,IAAIJ,IAAI,KAAK,KAAK,CAAC,EAAE;MACnBA,IAAI,GAAGI,QAAQ;IACjB;IAEA,IAAIL,IAAI,KAAK,KAAK,CAAC,EAAE;MACnBA,IAAI,GAAG,CAACK,QAAQ;IAClB;IAEA,IAAIH,IAAI,KAAK,KAAK,CAAC,EAAE;MACnBA,IAAI,GAAG,CAACG,QAAQ;IAClB;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAACZ,IAAI,GAAGA,IAAI;IAChB;AACJ;AACA;AACA;;IAEI,IAAI,CAACQ,IAAI,GAAGA,IAAI;IAChB;AACJ;AACA;AACA;;IAEI,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB;AACJ;AACA;AACA;;IAEI,IAAI,CAACE,IAAI,GAAGA,IAAI;EAClB;EACA;AACF;AACA;AACA;;EAGE,IAAIp3B,MAAM,GAAGs3B,IAAI,CAACr3B,SAAS;EAE3BD,MAAM,CAACw3B,QAAQ,GAAG,SAASA,QAAQA,CAACnD,CAAC,EAAEoD,CAAC,EAAE;IACxC,IAAI7iC,IAAI,CAAC8iC,GAAG,CAACrD,CAAC,CAAC,KAAKkD,QAAQ,EAAE;MAC5B,IAAIlD,CAAC,GAAG,IAAI,CAACsC,IAAI,EAAE;QACjB,IAAI,CAACA,IAAI,GAAGtC,CAAC;MACf;MAEA,IAAIA,CAAC,GAAG,IAAI,CAAC6C,IAAI,EAAE;QACjB,IAAI,CAACA,IAAI,GAAG7C,CAAC;MACf;IACF;IAEA,IAAIz/B,IAAI,CAAC8iC,GAAG,CAACD,CAAC,CAAC,KAAKF,QAAQ,EAAE;MAC5B,IAAIE,CAAC,GAAG,IAAI,CAACN,IAAI,EAAE;QACjB,IAAI,CAACA,IAAI,GAAGM,CAAC;MACf;MAEA,IAAIA,CAAC,GAAG,IAAI,CAACL,IAAI,EAAE;QACjB,IAAI,CAACA,IAAI,GAAGK,CAAC;MACf;IACF;EACF,CAAC;EAEDz3B,MAAM,CAACy2B,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAG;IAC5B,OAAO,IAAIa,IAAI,CAAC,IAAI,CAACX,IAAI,EAAE,IAAI,CAACQ,IAAI,EAAE,IAAI,CAACD,IAAI,EAAE,IAAI,CAACE,IAAI,CAAC;EAC7D,CAAC;EAEDnoC,YAAY,CAACqoC,IAAI,EAAE,CAAC;IAClBjmC,GAAG,EAAE,OAAO;IACZE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC2lC,IAAI,GAAG,IAAI,CAACP,IAAI;IAC9B;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDtlC,GAAG,EAAE,QAAQ;IACbE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC6lC,IAAI,GAAG,IAAI,CAACD,IAAI;IAC9B;EACF,CAAC,CAAC,CAAC;EAEH,OAAOG,IAAI;AACb,CAAC,CAAC,CAAC;;AAEH;AACA;;AAEA,IAAIK,eAAe,GAAG;EACpBC,kBAAkB,EAAE,MAAM;EAC1BC,MAAM,EAAE,MAAM;EACdC,gBAAgB,EAAE,MAAM;EACxBC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,MAAM;EACjBC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACzBC,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,mBAAmB,EAAE,MAAM;EAC3BC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC5BC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,oBAAoB,EAAE,MAAM;EAC5BC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,MAAM;EAClBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1BC,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1BC,MAAM,EAAE,MAAM;EACdC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,MAAM;EACfC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,MAAM;EAChBC,YAAY,EAAE,MAAM;EACpBC,oBAAoB,EAAE,MAAM;EAC5BC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACzBC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,MAAM;EAChBC,GAAG,EAAE,MAAM;EACXC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,MAAM;EAChBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,MAAM;EAClBC,aAAa,EAAE,MAAM;EACrBC,gBAAgB,EAAE,MAAM;EACxBC,oBAAoB,EAAE,MAAM;EAC5BC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC3BC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,MAAM;EACjBC,GAAG,EAAE,MAAM;EACXC,YAAY,EAAE,MAAM;EACpBC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACzBC,iBAAiB,EAAE,MAAM;EACzBC,SAAS,EAAE,MAAM;EACjBC,GAAG,EAAE,MAAM;EACXC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,MAAM;EACjBC,WAAW,EAAE,MAAM;EACnBC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE,MAAM;EAChBC,qBAAqB,EAAE,MAAM;EAC7BC,eAAe,EAAE,MAAM;EACvBC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,MAAM;EACZC,sBAAsB,EAAE,MAAM;EAC9BC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,MAAM;EACjBC,iBAAiB,EAAE,MAAM;EACzBC,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,MAAM;EACjBC,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,MAAM;EACpBC,SAAS,EAAE,MAAM;EACjBC,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,WAAW,EAAE,MAAM;EACnBC,KAAK,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACvBC,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACxBC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAE,MAAM;EACfC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,GAAG,EAAE,MAAM;EACXC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAE,MAAM;EACjBC,EAAE,EAAE,MAAM;EACVC,SAAS,EAAE,MAAM;EACjBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;AACX,CAAC;AACD,IAAIC,gBAAgB,GAAG,CAAC,CAAC;AAEzB,KAAK,IAAIr5B,MAAM,IAAIqxB,eAAe,EAAE;EAClC,IAAI/8B,GAAG,GAAG+8B,eAAe,CAACrxB,MAAM,CAAC;EAEjC,IAAIpU,KAAK,CAAC0J,OAAO,CAAChB,GAAG,CAAC,EAAE;IACtB,KAAK,IAAIU,SAAS,GAAGtM,+BAA+B,CAAC4L,GAAG,CAAC,EAAEW,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MAC9F,IAAI7G,CAAC,GAAG4G,KAAK,CAAC/J,KAAK;MACnBmuC,gBAAgB,CAAChrC,CAAC,CAAC,GAAG2R,MAAM;IAC9B;EACF,CAAC,MAAM;IACLq5B,gBAAgB,CAAC/kC,GAAG,CAAC,GAAG0L,MAAM;EAChC;AACF;AACA,SAASs5B,YAAYA,CAAChlC,GAAG,EAAE;EACzB,OAAO+kC,gBAAgB,CAAC/kC,GAAG,CAAC;AAC9B;AACA,SAASilC,SAASA,CAACtlC,MAAM,EAAE;EACzB,IAAIyJ,GAAG,GAAGzJ,MAAM,CAAC5J,MAAM;EACvB,IAAImvC,GAAG,GAAG,CAAC;EAEX,OAAOA,GAAG,GAAG97B,GAAG,EAAE;IAChB,IAAI+7B,IAAI,GAAGxlC,MAAM,CAACylC,UAAU,CAACF,GAAG,EAAE,CAAC,CAAC,CAAC;;IAErC,IAAI,MAAM,IAAIC,IAAI,IAAIA,IAAI,IAAI,MAAM,IAAID,GAAG,GAAG97B,GAAG,EAAE;MACjD,IAAIi8B,IAAI,GAAG1lC,MAAM,CAACylC,UAAU,CAACF,GAAG,CAAC,CAAC,CAAC;;MAEnC,IAAI,MAAM,IAAIG,IAAI,IAAIA,IAAI,IAAI,MAAM,EAAE;QACpCH,GAAG,EAAE;QACLC,IAAI,GAAG,CAAC,CAACA,IAAI,GAAG,KAAK,KAAK,EAAE,KAAKE,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO;MAC1D;IACF;IAEA,IAAIC,OAAO,GAAG3wC,OAAO,CAAC4wC,SAAS,CAACJ,IAAI,CAAC;IAErC,IAAIG,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,WAAW,IAAIA,OAAO,KAAK,SAAS,EAAE;MAC5E,OAAOvI,eAAe,CAACuI,OAAO,CAAC;IACjC;EACF;EAEA,OAAOvI,eAAe,CAAC+H,OAAO;AAChC;AACA,SAASU,aAAaA,CAAC1J,UAAU,EAAE;EACjC,KAAK,IAAIhmC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgmC,UAAU,CAAC/lC,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,IAAI2mC,SAAS,GAAGX,UAAU,CAAChmC,CAAC,CAAC;IAE7B,IAAI2vC,QAAQ,GAAG9wC,OAAO,CAAC4wC,SAAS,CAAC9I,SAAS,CAAC;IAE3C,IAAIgJ,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC/E,OAAO1I,eAAe,CAAC0I,QAAQ,CAAC;IAClC;EACF;EAEA,OAAO1I,eAAe,CAAC+H,OAAO;AAChC,CAAC,CAAC;;AAEF,IAAIY,GAAG,GAAG;EACRC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACA,MAAM,EAAE,IAAI;EACZ;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACA;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI;EACV;EACAC,IAAI,EAAE,IAAI,CAAC;AAEb,CAAC;AACD,SAASC,SAASA,CAACz7B,MAAM,EAAE;EACzB,IAAIg6B,GAAG,CAACh6B,MAAM,CAAC,EAAE;IACf,OAAO,KAAK;EACd;EAEA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;;AAEA,IAAI07B,QAAQ,GAAG,aAAa,YAAY;EACtC,SAASA,QAAQA,CAACl6B,MAAM,EAAEqpB,QAAQ,EAAE7qB,MAAM,EAAEhS,QAAQ,EAAE2tC,WAAW,EAAE;IACjE;AACJ;AACA;AACA;IACI,IAAI,CAACn6B,MAAM,GAAGA,MAAM;IACpB;AACJ;AACA;AACA;;IAEI,IAAI,CAACytB,SAAS,GAAG,IAAI;IACrB;AACJ;AACA;AACA;;IAEI,IAAI,CAACjvB,MAAM,GAAGA,MAAM;IACpB;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAAChS,QAAQ,GAAGA,QAAQ,IAAI,IAAI;IAChC;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACytC,SAAS,GAAGE,WAAW,IAAIF,SAAS,CAACz7B,MAAM,CAAC;IACjD;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAAC6qB,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAIj/B,KAAK,CAAC0J,OAAO,CAACu1B,QAAQ,CAAC,EAAE;MAC3B,KAAK,IAAI71B,SAAS,GAAGtM,+BAA+B,CAACmiC,QAAQ,CAAC,EAAE51B,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;QACnG,IAAIZ,GAAG,GAAGW,KAAK,CAAC/J,KAAK;QACrB,IAAI,CAAC2/B,QAAQ,CAACv2B,GAAG,CAAC,GAAG,IAAI;MAC3B;IACF,CAAC,MAAM,IAAI,OAAOu2B,QAAQ,KAAK,QAAQ,EAAE;MACvC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B;EACF;EACA;AACF;AACA;AACA;;EAGEliC,YAAY,CAAC+yC,QAAQ,EAAE,CAAC;IACtB3wC,GAAG,EAAE,cAAc;IACnBE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI8gB,KAAK,GAAG,CAAC;MAEb,KAAK,IAAI3Q,UAAU,GAAG1S,+BAA+B,CAAC,IAAI,CAACumC,SAAS,CAAC,EAAE5zB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;QAC7G,IAAIu7B,QAAQ,GAAGp1B,MAAM,CAACnQ,KAAK;QAC3B6gB,KAAK,IAAI0kB,QAAQ,CAAC5b,QAAQ;MAC5B;MAEA,OAAO9I,KAAK;IACd;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDhhB,GAAG,EAAE,eAAe;IACpBE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI6gB,MAAM,GAAG,CAAC;MAEd,KAAK,IAAIhO,UAAU,GAAGpV,+BAA+B,CAAC,IAAI,CAACumC,SAAS,CAAC,EAAElxB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE5I,IAAI,GAAG;QAC7G,IAAIu7B,QAAQ,GAAG1yB,MAAM,CAAC7S,KAAK;QAC3B4gB,MAAM,IAAI2kB,QAAQ,CAAC3b,QAAQ;MAC7B;MAEA,OAAOhJ,MAAM;IACf;IACA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACD/gB,GAAG,EAAE,MAAM;IACXE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,IAAI2wC,IAAI,GAAG,IAAI5K,IAAI,CAAC,CAAC;MACrB,IAAIjD,CAAC,GAAG,CAAC;MACT,IAAIoD,CAAC,GAAG,CAAC;MAET,KAAK,IAAIzpB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAAClG,MAAM,CAACnX,MAAM,EAAEqd,KAAK,EAAE,EAAE;QACvD,IAAI+C,KAAK,GAAG,IAAI,CAACjJ,MAAM,CAACkG,KAAK,CAAC;QAC9B,IAAIm0B,CAAC,GAAG,IAAI,CAAC5M,SAAS,CAACvnB,KAAK,CAAC;QAC7B,IAAI5L,CAAC,GAAG2O,KAAK,CAACmxB,IAAI;QAClBA,IAAI,CAAC1K,QAAQ,CAACp1B,CAAC,CAACu0B,IAAI,GAAGtC,CAAC,GAAG8N,CAAC,CAACnvB,OAAO,EAAE5Q,CAAC,CAAC+0B,IAAI,GAAGM,CAAC,GAAG0K,CAAC,CAAClvB,OAAO,CAAC;QAC7DivB,IAAI,CAAC1K,QAAQ,CAACp1B,CAAC,CAAC80B,IAAI,GAAG7C,CAAC,GAAG8N,CAAC,CAACnvB,OAAO,EAAE5Q,CAAC,CAACg1B,IAAI,GAAGK,CAAC,GAAG0K,CAAC,CAAClvB,OAAO,CAAC;QAC7DohB,CAAC,IAAI8N,CAAC,CAAChnB,QAAQ;QACfsc,CAAC,IAAI0K,CAAC,CAAC/mB,QAAQ;MACjB;MAEA,OAAO8mB,IAAI;IACb;EACF,CAAC,CAAC,CAAC;EAEH,OAAOF,QAAQ;AACjB,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA,IAAII,aAAa,GAAG,SAASA,aAAaA,CAACjnB,QAAQ,EAAEC,QAAQ,EAAEpI,OAAO,EAAEC,OAAO,EAAE;EAC/E,IAAIkI,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,CAAC;EACd;EAEA,IAAIC,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,CAAC;EACd;EAEA,IAAIpI,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC;EACb;EAEA,IAAIC,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC;EACb;;EAEA;AACF;AACA;AACA;EACE,IAAI,CAACkI,QAAQ,GAAGA,QAAQ;EACxB;AACF;AACA;AACA;;EAEE,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EACxB;AACF;AACA;AACA;;EAEE,IAAI,CAACpI,OAAO,GAAGA,OAAO;EACtB;AACF;AACA;AACA;;EAEE,IAAI,CAACC,OAAO,GAAGA,OAAO;AACxB,CAAC;;AAED;AACA;AACA,IAAIke,QAAQ,GAAG;EACbkR,sBAAsB,EAAE;IACtBtC,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDC,SAAS,EAAE;IACTzC,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,KAAK;IAChBG,iBAAiB,EAAE,CAAC;IACpBC,eAAe,EAAE,CAAC;IAClBC,aAAa,EAAE,CAAC;IAChB;IACAC,aAAa,EAAE,CAAC;IAChBC,kBAAkB,EAAE,EAAE;IACtBC,gBAAgB,EAAE,EAAE;IACpBC,sBAAsB,EAAE,EAAE;IAC1BC,eAAe,EAAE,EAAE;IACnBC,mBAAmB,EAAE,EAAE;IACvBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,iBAAiB,EAAE;IACjBpD,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,IAAI;IACfc,WAAW,EAAE,CAAC;IACdC,kBAAkB,EAAE,CAAC;IACrBC,OAAO,EAAE;EACX,CAAC;EACDC,UAAU,EAAE;IACVxD,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACAkB,oBAAoB,EAAE;IACpBzD,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,KAAK;IAChBmB,uBAAuB,EAAE;EAC3B,CAAC;EACDC,uBAAuB,EAAE;IACvB3D,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,KAAK;IAChBoB,uBAAuB,EAAE;EAC3B,CAAC;EACDC,aAAa,EAAE;IACb5D,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,IAAI;IACfsB,iBAAiB,EAAE,CAAC;IACpBC,mBAAmB,EAAE,CAAC;IACtBC,iBAAiB,EAAE,CAAC;IACpBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,UAAU,EAAE;IACVjE,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,KAAK;IAChB2B,kBAAkB,EAAE,CAAC;IACrBC,gBAAgB,EAAE,CAAC;IACnB;IACA;IACAC,eAAe,EAAE;EACnB,CAAC;EACDC,UAAU,EAAE;IACVrE,IAAI,EAAE,CAAC;IACPuC,SAAS,EAAE,IAAI;IACf+B,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,CAAC;IACjBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,gBAAgB,EAAE;IAChBzE,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfmC,cAAc,EAAE,CAAC;IACjBC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,CAAC;IACXC,mBAAmB,EAAE;EACvB,CAAC;EACDC,SAAS,EAAE;IACT/E,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfyC,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDC,qBAAqB,EAAE;IACrBnF,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB6C,cAAc,EAAE;EAClB,CAAC;EACDC,iBAAiB,EAAE;IACjBrF,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB;IACA;IACA+C,WAAW,EAAE;EACf,CAAC;EACD;EACA;EACA;EACAC,kBAAkB,EAAE;IAClBvF,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB;IACA;IACA;IACA;IACA;IACAiD,iBAAiB,EAAE;EACrB,CAAC;EACDC,YAAY,EAAE;IACZzF,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfmD,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CAAC;IACXC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,CAAC;IACXC,iBAAiB,EAAE,CAAC;IACpBC,oBAAoB,EAAE,CAAC;IACvBC,WAAW,EAAE;EACf,CAAC;EACDC,qBAAqB,EAAE;IACrBjG,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf2D,YAAY,EAAE;EAChB,CAAC;EACD;EACAC,gBAAgB,EAAE;IAChBnG,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf6D,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE;EAChB,CAAC;EACDC,YAAY,EAAE;IACZzG,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfmE,cAAc,EAAE,CAAC;IACjBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,CAAC;IAClBC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,cAAc,EAAE;IACdhH,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf0E,qBAAqB,EAAE,CAAC;IACxBC,oBAAoB,EAAE,CAAC;IACvBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,mBAAmB,EAAE,CAAC;IACtBC,kBAAkB,EAAE,CAAC;IACrBC,kBAAkB,EAAE,CAAC;IACrBC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,EAAE;IACjBC,0BAA0B,EAAE;EAC9B,CAAC;EACDC,UAAU,EAAE;IACVhI,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf0F,gBAAgB,EAAE,CAAC;IACnBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,WAAW,EAAE;IACXnI,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf6F,gBAAgB,EAAE,CAAC;IACnBC,cAAc,EAAE,CAAC;IACjBC,aAAa,EAAE,CAAC;IAChBC,cAAc,EAAE,CAAC;IACjBC,gBAAgB,EAAE,CAAC;IACnBC,mBAAmB,EAAE,CAAC;IACtBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,eAAe,EAAE;IACf3I,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfqG,iBAAiB,EAAE;EACrB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,UAAU,EAAE;IACV7I,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfuG,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC;IAChBC,oBAAoB,EAAE,CAAC;IACvBC,gBAAgB,EAAE,CAAC;IACnBC,wBAAwB,EAAE,CAAC;IAC3BC,qBAAqB,EAAE,CAAC;IACxBC,gBAAgB,EAAE,CAAC;IACnBC,sBAAsB,EAAE,CAAC;IACzBC,iBAAiB,EAAE,CAAC;IACpBC,qBAAqB,EAAE,CAAC;IACxBC,4BAA4B,EAAE;EAChC,CAAC;EACDC,WAAW,EAAE;IACXzJ,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfmH,aAAa,EAAE,CAAC;IAChBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,kBAAkB,EAAE;IAClB5J,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfsH,mBAAmB,EAAE,CAAC;IACtBC,sBAAsB,EAAE,CAAC;IACzBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,oBAAoB,EAAE;IACpBhK,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB0H,oBAAoB,EAAE,CAAC;IACvBC,wBAAwB,EAAE,CAAC;IAC3BC,sBAAsB,EAAE;EAC1B,CAAC;EACDC,QAAQ,EAAE;IACRpK,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB;IACA;IACA6H,QAAQ,EAAE;EACZ,CAAC;EACDC,qBAAqB,EAAE;IACrBrK,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf+H,uBAAuB,EAAE,CAAC;IAC1BC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE,CAAC;IACnBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,uBAAuB,EAAE;IACvB5K,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfsI,yBAAyB,EAAE,CAAC;IAC5BC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,mBAAmB,EAAE,CAAC;IACtBC,kBAAkB,EAAE,CAAC;IACrBC,kBAAkB,EAAE;EACtB,CAAC;EACDC,yBAAyB,EAAE;IACzBnL,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACf6I,wBAAwB,EAAE,CAAC;IAC3BC,yBAAyB,EAAE;EAC7B,CAAC;EACDC,cAAc,EAAE;IACdtL,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB;IACA;IACAgJ,cAAc,EAAE;EAClB,CAAC;EACDC,mBAAmB,EAAE;IACnBxL,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChBiJ,mBAAmB,EAAE,CAAC;IACtBC,oBAAoB,EAAE;EACxB,CAAC;EACDC,aAAa,EAAE;IACb1L,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChBoJ,kBAAkB,EAAE,CAAC;IACrBC,iBAAiB,EAAE;EACrB,CAAC;EACDC,qBAAqB,EAAE;IACrB7L,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChBuJ,qBAAqB,EAAE,CAAC;IACxBC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE,CAAC;IACnBC,gBAAgB,EAAE,EAAE;IACpBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,EAAE;IACpBC,eAAe,EAAE,EAAE;IACnBC,kBAAkB,EAAE,EAAE;IACtBC,kBAAkB,EAAE,EAAE;IACtBC,oBAAoB,EAAE,EAAE;IACxBC,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE,EAAE;IACvBC,mBAAmB,EAAE,EAAE;IACvBC,qBAAqB,EAAE,EAAE;IACzBC,oBAAoB,EAAE,EAAE;IACxBC,oBAAoB,EAAE,EAAE;IACxBC,kBAAkB,EAAE;EACtB,CAAC;EACDC,oBAAoB,EAAE;IACpBnN,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,KAAK;IAChB4K,oBAAoB,EAAE,CAAC;IACvBC,eAAe,EAAE,CAAC;IAClBC,yBAAyB,EAAE;EAC7B,CAAC;EACDC,SAAS,EAAE;IACTtN,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfgL,gBAAgB,EAAE,CAAC;IACnBC,kBAAkB,EAAE,CAAC;IACrBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,SAAS,EAAE;IACT1N,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE,IAAI;IACfoL,gBAAgB,EAAE,CAAC;IACnBC,kBAAkB,EAAE,CAAC;IACrBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,WAAW,EAAE;IACX;IACA9N,IAAI,EAAE,EAAE;IACRuC,SAAS,EAAE;EACb,CAAC;EACDwL,eAAe,EAAE;IACf/N,IAAI,EAAE,GAAG;IACTuC,SAAS,EAAE,IAAI;IACfyL,iBAAiB,EAAE,CAAC;IACpBC,oBAAoB,EAAE,CAAC;IACvBC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE;EACrB;AACF,CAAC;AAED,IAAIrnC,OAAO,GAAG,SAASA,OAAOA,CAACiiB,IAAI,EAAEqlB,QAAQ,EAAE;EAC7C,OAAO,CAAChd,QAAQ,CAACrI,IAAI,CAAC,CAACiX,IAAI,EAAE5O,QAAQ,CAACrI,IAAI,CAAC,CAACqlB,QAAQ,CAAC,CAAC;AACxD,CAAC;AAED,IAAIC,SAAS,GAAG;EACdC,IAAI,EAAExnC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;EAC/CynC,IAAI,EAAEznC,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC;EACjD0nC,IAAI,EAAE1nC,OAAO,CAAC,WAAW,EAAE,eAAe,CAAC;EAC3C2nC,IAAI,EAAE3nC,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC;EACjD4nC,IAAI,EAAE5nC,OAAO,CAAC,WAAW,EAAE,iBAAiB,CAAC;EAC7C6nC,IAAI,EAAE7nC,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC;EACjD;EACA8nC,IAAI,EAAE9nC,OAAO,CAAC,WAAW,EAAE,oBAAoB,CAAC;EAChD+nC,IAAI,EAAE/nC,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC;EACjDgoC,IAAI,EAAEhoC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;EAC/CioC,IAAI,EAAEjoC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;EAC/C;EACAkoC,IAAI,EAAEloC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;EAC/C;EACAmoC,IAAI,EAAEnoC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;EAC/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAooC,IAAI,EAAEpoC,OAAO,CAAC,qBAAqB,EAAE,qBAAqB,CAAC;EAC3D;EACAqoC,IAAI,EAAEroC,OAAO,CAAC,sBAAsB,EAAE,sBAAsB,CAAC;EAC7D;EACAsoC,IAAI,EAAEtoC,OAAO,CAAC,2BAA2B,EAAE,0BAA0B,CAAC;EACtE;EACAuoC,IAAI,EAAEvoC,OAAO,CAAC,2BAA2B,EAAE,0BAA0B,CAAC;EACtEwoC,IAAI,EAAExoC,OAAO,CAAC,sBAAsB,EAAE,iBAAiB,CAAC;EACxDyoC,IAAI,EAAEzoC,OAAO,CAAC,sBAAsB,EAAE,2BAA2B,CAAC;EAClE0oC,IAAI,EAAE1oC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC;EAC7C;EACA2oC,IAAI,EAAE3oC,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC;EACjD4oC,IAAI,EAAE5oC,OAAO,CAAC,WAAW,EAAE,oBAAoB,CAAC;EAChD6oC,IAAI,EAAE7oC,OAAO,CAAC,YAAY,EAAE,oBAAoB,CAAC;EACjD;EACA8oC,IAAI,EAAE9oC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC;EAC/C;EACA+oC,IAAI,EAAE/oC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC;EAC9C;EACAgpC,IAAI,EAAEhpC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC;EAC9C;EACAipC,IAAI,EAAEjpC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC;EAC/C;EACAkpC,IAAI,EAAElpC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC;EAC/C;EACAmpC,IAAI,EAAEnpC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAChDopC,IAAI,EAAEppC,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC;EAC7C;EACAqpC,IAAI,EAAErpC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAChDspC,IAAI,EAAEtpC,OAAO,CAAC,eAAe,EAAE,oBAAoB,CAAC;EACpDupC,IAAI,EAAEvpC,OAAO,CAAC,eAAe,EAAE,mBAAmB,CAAC;EACnD;EACAwpC,IAAI,EAAExpC,OAAO,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;EACjDypC,IAAI,EAAEzpC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC;EAC/C0pC,IAAI,EAAE1pC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC;EAC/C2pC,IAAI,EAAE3pC,OAAO,CAAC,oBAAoB,EAAE,mBAAmB,CAAC;EACxD;EACA;EACA4pC,IAAI,EAAE5pC,OAAO,CAAC,sBAAsB,EAAE,sBAAsB,CAAC;EAC7D;EACA6pC,IAAI,EAAE7pC,OAAO,CAAC,sBAAsB,EAAE,yBAAyB,CAAC;EAChE;EACA0O,IAAI,EAAE1O,OAAO,CAAC,sBAAsB,EAAE,yBAAyB,CAAC;EAChE8pC,IAAI,EAAE9pC,OAAO,CAAC,eAAe,EAAE,mBAAmB,CAAC;EACnD+pC,IAAI,EAAE/pC,OAAO,CAAC,eAAe,EAAE,qBAAqB,CAAC;EACrDgqC,IAAI,EAAEhqC,OAAO,CAAC,kBAAkB,EAAE,WAAW,CAAC;EAC9CiqC,IAAI,EAAEjqC,OAAO,CAAC,kBAAkB,EAAE,WAAW,CAAC;EAC9CkqC,IAAI,EAAElqC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC;EAC7CmqC,IAAI,EAAEnqC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAChDoqC,IAAI,EAAEpqC,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC;EAC7CqqC,IAAI,EAAErqC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAChD;EACAsqC,IAAI,EAAEtqC,OAAO,CAAC,aAAa,EAAE,gBAAgB,CAAC;EAC9C;EACAuqC,IAAI,EAAEvqC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAChD;EACAwqC,IAAI,EAAExqC,OAAO,CAAC,aAAa,EAAE,qBAAqB,CAAC;EACnDyqC,IAAI,EAAEzqC,OAAO,CAAC,gBAAgB,EAAE,uBAAuB,CAAC;EACxD0qC,IAAI,EAAE1qC,OAAO,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;EACvD2qC,IAAI,EAAE3qC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;EACpD4qC,IAAI,EAAE5qC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;EACpD6qC,IAAI,EAAE7qC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;EACpD8qC,IAAI,EAAE9qC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;EACpD+qC,IAAI,EAAE/qC,OAAO,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;EACnDgrC,IAAI,EAAEhrC,OAAO,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;EACjDirC,IAAI,EAAEjrC,OAAO,CAAC,gBAAgB,EAAE,eAAe,CAAC;EAChDkrC,IAAI,EAAElrC,OAAO,CAAC,gBAAgB,EAAE,4BAA4B,CAAC;EAC7DmrC,IAAI,EAAEnrC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC;EACrCorC,IAAI,EAAEprC,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC;EAC5CqrC,IAAI,EAAErrC,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC;EACjDsrC,IAAI,EAAEtrC,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;EACzDurC,IAAI,EAAEvrC,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;EACzDwrC,IAAI,EAAExrC,OAAO,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;EAC3DyrC,IAAI,EAAEzrC,OAAO,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;EAC1D0rC,IAAI,EAAE1rC,OAAO,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;EAC1D2rC,IAAI,EAAE3rC,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;EACzD4rC,IAAI,EAAE5rC,OAAO,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;EAC3D6rC,IAAI,EAAE7rC,OAAO,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;EAC3D8rC,IAAI,EAAE9rC,OAAO,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;EAC1D+rC,IAAI,EAAE/rC,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;EACzDgsC,IAAI,EAAEhsC,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,CAAC;EAC5DisC,IAAI,EAAEjsC,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,CAAC;EAC5DksC,IAAI,EAAElsC,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC;EAC9DmsC,IAAI,EAAEnsC,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC;EAC9DosC,IAAI,EAAEpsC,OAAO,CAAC,uBAAuB,EAAE,qBAAqB,CAAC;EAC7DqsC,IAAI,EAAErsC,OAAO,CAAC,uBAAuB,EAAE,qBAAqB,CAAC;EAC7DssC,IAAI,EAAEtsC,OAAO,CAAC,uBAAuB,EAAE,uBAAuB,CAAC;EAC/DusC,IAAI,EAAEvsC,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC;EAC9DwsC,IAAI,EAAExsC,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC;EAC9DysC,IAAI,EAAEzsC,OAAO,CAAC,uBAAuB,EAAE,oBAAoB;AAC7D,CAAC,CAAC,CAAC;AACH;;AAEA,KAAK,IAAInW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC5B09C,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG19C,CAAC,EAAE6iD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACpiB,QAAQ,CAAC6U,qBAAqB,CAACjG,IAAI,EAAErvC,CAAC,CAAC;AACnF,CAAC,CAAC;;AAGF,IAAI8iD,UAAU,GAAG,CAAC,CAAC;AAEnB,KAAK,IAAIC,EAAE,IAAIrF,SAAS,EAAE;EACxB,IAAIsF,GAAG,GAAGtF,SAAS,CAACqF,EAAE,CAAC;EAEvB,IAAID,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAC9BF,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACzB;EAEAF,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGD,EAAE;AACjC,CAAC,CAAC;AACF;;AAGA,SAASE,UAAUA,CAACxiB,QAAQ,EAAE;EAC5B,IAAIniB,GAAG,GAAG,CAAC,CAAC;EAEZ,KAAK,IAAI/K,CAAC,IAAIktB,QAAQ,EAAE;IACtB,IAAIpiC,CAAC,GAAG,KAAK,CAAC;IAEd,IAAIA,CAAC,GAAGq/C,SAAS,CAACnqC,CAAC,CAAC,EAAE;MACpB,IAAI+K,GAAG,CAACjgB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;QACrBigB,GAAG,CAACjgB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAChB;MAEAigB,GAAG,CAACjgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGoiC,QAAQ,CAACltB,CAAC,CAAC;IAC/B;EACF;EAEA,OAAO+K,GAAG;AACZ,CAAC,CAAC;AACF;;AAEA,SAAS4kC,iBAAiBA,CAACC,CAAC,EAAE;EAC5B,IAAI3/C,IAAI,GAAG2/C,CAAC,CAAC,CAAC,CAAC;IACX3oB,OAAO,GAAG2oB,CAAC,CAAC,CAAC,CAAC;EAElB,IAAIC,KAAK,CAAC5/C,IAAI,CAAC,EAAE;IACf,IAAI6/C,QAAQ,GAAG5iB,QAAQ,CAACj9B,IAAI,CAAC,IAAIi9B,QAAQ,CAACj9B,IAAI,CAAC,CAAC6rC,IAAI;EACtD,CAAC,MAAM;IACL,IAAIgU,QAAQ,GAAG7/C,IAAI;EACrB;EAEA,IAAI4/C,KAAK,CAAC5oB,OAAO,CAAC,EAAE;IAClB,IAAI8oB,WAAW,GAAG7iB,QAAQ,CAACj9B,IAAI,CAAC,IAAIi9B,QAAQ,CAACj9B,IAAI,CAAC,CAACg3B,OAAO,CAAC;EAC7D,CAAC,MAAM;IACL,IAAI8oB,WAAW,GAAG9oB,OAAO;EAC3B;EAEA,OAAO,CAAC6oB,QAAQ,EAAEC,WAAW,CAAC;AAChC,CAAC,CAAC;AACF;AACA;AACA;;AAGA,SAASC,UAAUA,CAAC9iB,QAAQ,EAAE;EAC5B,IAAIniB,GAAG,GAAG,CAAC,CAAC;EAEZ,IAAI9c,KAAK,CAAC0J,OAAO,CAACu1B,QAAQ,CAAC,EAAE;IAC3B,KAAK,IAAIltB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGktB,QAAQ,CAACxgC,MAAM,EAAEsT,CAAC,EAAE,EAAE;MACxC,IAAIlV,CAAC,GAAG,KAAK,CAAC;MACd,IAAI8kD,CAAC,GAAGD,iBAAiB,CAACziB,QAAQ,CAACltB,CAAC,CAAC,CAAC;MAEtC,IAAIlV,CAAC,GAAGykD,UAAU,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIL,UAAU,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAClD7kC,GAAG,CAACjgB,CAAC,CAAC,GAAG,IAAI;MACf;IACF;EACF,CAAC,MAAM,IAAI,OAAOoiC,QAAQ,KAAK,QAAQ,EAAE;IACvC,KAAK,IAAIj9B,IAAI,IAAIi9B,QAAQ,EAAE;MACzB,IAAI+iB,QAAQ,GAAG/iB,QAAQ,CAACj9B,IAAI,CAAC;MAE7B,KAAK,IAAIg3B,OAAO,IAAIgpB,QAAQ,EAAE;QAC5B,IAAIC,EAAE,GAAG,KAAK,CAAC;QAEf,IAAIC,EAAE,GAAGR,iBAAiB,CAAC,CAAC1/C,IAAI,EAAEg3B,OAAO,CAAC,CAAC;QAE3C,IAAIgpB,QAAQ,CAAChpB,OAAO,CAAC,KAAKipB,EAAE,GAAGX,UAAU,CAACY,EAAE,CAAC,CAAC,CAAC,CAAC,IAAIZ,UAAU,CAACY,EAAE,CAAC,CAAC,CAAC,CAAC,CAACA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAC7EplC,GAAG,CAACmlC,EAAE,CAAC,GAAG,IAAI;QAChB;MACF;IACF;EACF;EAEA,OAAOziD,MAAM,CAAC2iD,IAAI,CAACrlC,GAAG,CAAC;AACzB;AAEA,IAAIslC,QAAQ;AACZ,IAAIC,cAAc,IAAID,QAAQ,GAAG,aAAa,YAAY;EACxD,SAASC,cAAcA,CAACn+C,KAAK,EAAE;IAC7B,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA,IAAI4J,MAAM,GAAGu0C,cAAc,CAACt0C,SAAS;EAErCD,MAAM,CAACuzB,MAAM,GAAG,SAASA,MAAMA,CAACxiB,KAAK,EAAE;IACrC,QAAQ,IAAI,CAAC3a,KAAK,CAACG,OAAO;MACxB,KAAK,CAAC;QACJ;QACA,OAAO,IAAI,CAACH,KAAK,CAAConB,MAAM,CAACmL,OAAO,CAAC5X,KAAK,CAAC;MAEzC,KAAK,CAAC,CAAC,CAAC;;MAER,KAAK,CAAC;QACJ;UACE,IAAI4hB,GAAG,GAAG,CAAC;UACX,IAAI99B,GAAG,GAAG,IAAI,CAACuB,KAAK,CAACszB,kBAAkB,CAACL,MAAM,GAAG,CAAC;UAElD,OAAOsJ,GAAG,IAAI99B,GAAG,EAAE;YACjB,IAAI0c,GAAG,GAAGohB,GAAG,GAAG99B,GAAG,IAAI,CAAC;YACxB,IAAI2/C,GAAG,GAAG,IAAI,CAACp+C,KAAK,CAACuzB,QAAQ,CAACpY,GAAG,CAAC,CAAC,CAAC;;YAEpC,IAAIijC,GAAG,CAACtwB,UAAU,KAAK,MAAM,EAAE;cAC7B,OAAO,IAAI;YACb;YAEA,IAAInT,KAAK,GAAGyjC,GAAG,CAACtwB,UAAU,EAAE;cAC1BrvB,GAAG,GAAG0c,GAAG,GAAG,CAAC;YACf,CAAC,MAAM,IAAIR,KAAK,GAAGyjC,GAAG,CAACjrB,SAAS,EAAE;cAChCoJ,GAAG,GAAGphB,GAAG,GAAG,CAAC;YACf,CAAC,MAAM;cACL,IAAI,IAAI,CAACnb,KAAK,CAACG,OAAO,KAAK,CAAC,EAAE;gBAC5B,OAAOi+C,GAAG,CAAChjD,KAAK;cAClB,CAAC,MAAM;gBACL,OAAOgjD,GAAG,CAACh3B,MAAM,CAACzM,KAAK,GAAGyjC,GAAG,CAACtwB,UAAU,CAAC;cAC3C;YACF;UACF;UAEA,OAAO,IAAI;QACb;MAEF,KAAK,CAAC;QACJ;UACE;UACA,IAAI6P,IAAI,GAAG,CAAC;UAEZ,IAAIC,IAAI,GAAG,IAAI,CAAC59B,KAAK,CAACszB,kBAAkB,CAACL,MAAM,GAAG,CAAC;UAEnD,OAAO0K,IAAI,IAAIC,IAAI,EAAE;YACnB,IAAIziB,GAAG,GAAGwiB,IAAI,GAAGC,IAAI,IAAI,CAAC;YAC1B,IAAIwgB,GAAG,GAAG,IAAI,CAACp+C,KAAK,CAACuzB,QAAQ,CAACpY,GAAG,CAAC,CAAC,CAAC;;YAEpC,IAAIijC,GAAG,CAACzjC,KAAK,KAAK,MAAM,EAAE;cACxB,OAAO,IAAI;YACb;YAEA,IAAIA,KAAK,GAAGyjC,GAAG,CAACzjC,KAAK,EAAE;cACrBijB,IAAI,GAAGziB,GAAG,GAAG,CAAC;YAChB,CAAC,MAAM,IAAIR,KAAK,GAAGyjC,GAAG,CAACzjC,KAAK,EAAE;cAC5BgjB,IAAI,GAAGxiB,GAAG,GAAG,CAAC;YAChB,CAAC,MAAM;cACL,OAAOijC,GAAG,CAAChjD,KAAK;YAClB;UACF;UAEA,OAAO,IAAI;QACb;MAEF,KAAK,CAAC;QACJ;QACA,OAAO,IAAI,CAAC4E,KAAK,CAAConB,MAAM,CAACzM,KAAK,GAAG,IAAI,CAAC3a,KAAK,CAAC8tB,UAAU,CAAC;MAEzD;QACE,MAAM,IAAI7zB,KAAK,CAAC,+BAA+B,GAAG,IAAI,CAAC+F,KAAK,CAACG,OAAO,CAAC;IACzE;EACF,CAAC;EAEDyJ,MAAM,CAACy0C,cAAc,GAAG,SAASA,cAAcA,CAACC,UAAU,EAAE;IAC1D,IAAI1lC,GAAG,GAAG,EAAE;IAEZ,QAAQ,IAAI,CAAC5Y,KAAK,CAACG,OAAO;MACxB,KAAK,CAAC,CAAC,CAAC;;MAER,KAAK,CAAC;QACJ;UACE,KAAK,IAAI+E,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACoH,KAAK,CAACuzB,QAAQ,CAAC,EAAEpuB,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;YAC9G,IAAI+sB,OAAO,GAAGhtB,KAAK,CAAC/J,KAAK;YAEzB,IAAI,IAAI,CAAC4E,KAAK,CAACG,OAAO,KAAK,CAAC,IAAIgyB,OAAO,CAAC/2B,KAAK,KAAKkjD,UAAU,EAAE;cAC5D1lC,GAAG,CAAC/e,IAAI,CAACqC,KAAK,CAAC0c,GAAG,EAAEC,KAAK,CAACsZ,OAAO,CAACrE,UAAU,EAAEqE,OAAO,CAACgB,SAAS,GAAG,CAAC,CAAC,CAAC;YACvE,CAAC,MAAM;cACL,KAAK,IAAIvb,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGua,OAAO,CAAC/K,MAAM,CAAC7sB,MAAM,EAAEqd,KAAK,EAAE,EAAE;gBAC1D,IAAIua,OAAO,CAAC/K,MAAM,CAACxP,KAAK,CAAC,KAAK0mC,UAAU,EAAE;kBACxC1lC,GAAG,CAAC/e,IAAI,CAACs4B,OAAO,CAACrE,UAAU,GAAGlW,KAAK,CAAC;gBACtC;cACF;YACF;UACF;UAEA;QACF;MAEF,KAAK,CAAC;QACJ;UACE;UACA,KAAK,IAAItM,UAAU,GAAG1S,+BAA+B,CAAC,IAAI,CAACoH,KAAK,CAACuzB,QAAQ,CAAC,EAAEhoB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;YAClH,IAAIm5C,QAAQ,GAAGhzC,MAAM,CAACnQ,KAAK;YAE3B,IAAImjD,QAAQ,CAACnjD,KAAK,KAAKkjD,UAAU,EAAE;cACjC1lC,GAAG,CAAC/e,IAAI,CAAC0kD,QAAQ,CAAC5jC,KAAK,CAAC;YAC1B;UACF;UAEA;QACF;MAEF,KAAK,CAAC;QACJ;UACE;UACA,KAAK,IAAIrgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0F,KAAK,CAAConB,MAAM,CAAC7sB,MAAM,EAAED,CAAC,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC0F,KAAK,CAAConB,MAAM,CAAC9sB,CAAC,CAAC,KAAKgkD,UAAU,EAAE;cACvC1lC,GAAG,CAAC/e,IAAI,CAAC,IAAI,CAACmG,KAAK,CAAC8tB,UAAU,GAAGxzB,CAAC,CAAC;YACrC;UACF;UAEA;QACF;MAEF;QACE,MAAM,IAAIL,KAAK,CAAC,+BAA+B,GAAG,IAAI,CAAC+F,KAAK,CAACG,OAAO,CAAC;IACzE;IAEA,OAAOyY,GAAG;EACZ,CAAC;EAED,OAAOulC,cAAc;AACvB,CAAC,CAAC,CAAC,EAAGrlD,yBAAyB,CAAColD,QAAQ,CAACr0C,SAAS,EAAE,gBAAgB,EAAE,CAAC9O,KAAK,CAAC,EAAEO,MAAM,CAAC2jC,wBAAwB,CAACif,QAAQ,CAACr0C,SAAS,EAAE,gBAAgB,CAAC,EAAEq0C,QAAQ,CAACr0C,SAAS,CAAC,EAAGq0C,QAAQ,CAAC;AAErL,IAAIM,mBAAmB,GAAG,CAAC;AAC3B,IAAIC,iBAAiB,GAAG,CAAC;AACzB,IAAIC,mBAAmB,GAAG,CAAC;AAC3B,IAAIC,mBAAmB,GAAG,CAAC;AAC3B,IAAIC,YAAY,GAAG,MAAM;AAEzB,IAAIC,eAAe,GAAG,aAAa,YAAY;EAC7C,SAASA,eAAeA,CAAC5nB,UAAU,EAAE;IACnC,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC4B,WAAW,GAAG,IAAIslB,cAAc,CAAClnB,UAAU,CAACjD,UAAU,CAAC;EAC9D;EAEA,IAAIpqB,MAAM,GAAGi1C,eAAe,CAACh1C,SAAS;EAEtCD,MAAM,CAAC5E,OAAO,GAAG,SAASA,OAAOA,CAAC0M,MAAM,EAAEotC,OAAO,EAAEC,YAAY,EAAE;IAC/D,IAAIC,YAAY,GAAGR,mBAAmB,CAAC,CAAC;;IAExC,IAAI5mC,KAAK,GAAGknC,OAAO,GAAGptC,MAAM,CAACnX,MAAM,GAAG,CAAC,GAAG,CAAC;IAC3C,IAAI0kD,GAAG,GAAGH,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;IAE1B,OAAOG,GAAG,KAAK,CAAC,IAAIrnC,KAAK,IAAIlG,MAAM,CAACnX,MAAM,IAAI0kD,GAAG,KAAK,CAAC,CAAC,IAAIrnC,KAAK,IAAI,CAAC,CAAC,EAAE;MACvE,IAAI+C,KAAK,GAAG,IAAI;MAChB,IAAIukC,SAAS,GAAGR,mBAAmB;MACnC,IAAIS,aAAa,GAAG,IAAI;MAExB,IAAIvnC,KAAK,KAAKlG,MAAM,CAACnX,MAAM,IAAIqd,KAAK,KAAK,CAAC,CAAC,EAAE;QAC3CsnC,SAAS,GAAGT,iBAAiB;MAC/B,CAAC,MAAM;QACL9jC,KAAK,GAAGjJ,MAAM,CAACkG,KAAK,CAAC;QAErB,IAAI+C,KAAK,CAACykB,EAAE,KAAK,MAAM,EAAE;UACvB;UACA8f,SAAS,GAAGP,mBAAmB;QACjC,CAAC,MAAM;UACLO,SAAS,GAAG,IAAI,CAACrmB,WAAW,CAACsE,MAAM,CAACxiB,KAAK,CAACykB,EAAE,CAAC;UAE7C,IAAI8f,SAAS,IAAI,IAAI,EAAE;YACrBA,SAAS,GAAGR,mBAAmB;UACjC;QACF;MACF;MAEA,IAAIU,GAAG,GAAG,IAAI,CAACnoB,UAAU,CAAChD,UAAU,CAAC1B,OAAO,CAACysB,YAAY,CAAC;MAC1D,IAAIK,UAAU,GAAGD,GAAG,CAACF,SAAS,CAAC;MAC/B,IAAIzzB,KAAK,GAAG,IAAI,CAACwL,UAAU,CAAC/C,UAAU,CAAC3B,OAAO,CAAC8sB,UAAU,CAAC;MAE1D,IAAIH,SAAS,KAAKT,iBAAiB,IAAIS,SAAS,KAAKP,mBAAmB,EAAE;QACxEI,YAAY,CAACpkC,KAAK,EAAE8Q,KAAK,EAAE7T,KAAK,CAAC;QACjCunC,aAAa,GAAG,EAAE1zB,KAAK,CAAC9qB,KAAK,GAAGi+C,YAAY,CAAC;MAC/C;MAEAI,YAAY,GAAGvzB,KAAK,CAACkI,QAAQ;MAE7B,IAAIwrB,aAAa,EAAE;QACjBvnC,KAAK,IAAIqnC,GAAG;MACd;IACF;IAEA,OAAOvtC,MAAM;EACf;EACA;AACF;AACA;AACA,KAHE;EAMA9H,MAAM,CAAC01C,QAAQ,GAAG,SAASA,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACxD,IAAID,KAAK,KAAK,KAAK,CAAC,EAAE;MACpBA,KAAK,GAAG,CAAC;IACX;IAEA,IAAIC,OAAO,KAAK,KAAK,CAAC,EAAE;MACtBA,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB;IAEA,IAAID,OAAO,CAACzjD,GAAG,CAACwjD,KAAK,CAAC,EAAE;MACtB;IACF;IAEAC,OAAO,CAACE,GAAG,CAACH,KAAK,CAAC;IAClB,IAAII,gBAAgB,GAAG,IAAI,CAAC3oB,UAAU;MAClCnD,QAAQ,GAAG8rB,gBAAgB,CAAC9rB,QAAQ;MACpCG,UAAU,GAAG2rB,gBAAgB,CAAC3rB,UAAU;MACxCC,UAAU,GAAG0rB,gBAAgB,CAAC1rB,UAAU;IAC5C,IAAIkrB,GAAG,GAAGnrB,UAAU,CAAC1B,OAAO,CAACitB,KAAK,CAAC,CAAC,CAAC;;IAErC,KAAK,IAAIN,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAGprB,QAAQ,EAAEorB,SAAS,EAAE,EAAE;MACzD,IAAIG,UAAU,GAAGD,GAAG,CAACF,SAAS,CAAC;MAC/B,IAAIzzB,KAAK,GAAGyI,UAAU,CAAC3B,OAAO,CAAC8sB,UAAU,CAAC,CAAC,CAAC;;MAE5C,KAAK,IAAIn6C,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACigC,WAAW,CAACwlB,cAAc,CAACa,SAAS,CAAC,CAAC,EAAE/5C,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;QACrI,IAAIuV,KAAK,GAAGxV,KAAK,CAAC/J,KAAK;QAEvB,IAAImkD,IAAI,CAACM,KAAK,EAAE;UACdN,IAAI,CAACM,KAAK,CAACllC,KAAK,EAAE8Q,KAAK,CAAC;QAC1B;QAEA,IAAIA,KAAK,CAACkI,QAAQ,KAAK,CAAC,EAAE;UACxB,IAAI,CAAC2rB,QAAQ,CAACC,IAAI,EAAE9zB,KAAK,CAACkI,QAAQ,EAAE8rB,OAAO,CAAC;QAC9C;QAEA,IAAIF,IAAI,CAACO,IAAI,EAAE;UACbP,IAAI,CAACO,IAAI,CAACnlC,KAAK,EAAE8Q,KAAK,CAAC;QACzB;MACF;IACF;EACF,CAAC;EAED,OAAOozB,eAAe;AACxB,CAAC,CAAC,CAAC;AAEH,IAAIkB,QAAQ;AAEZ,IAAIC,UAAU,GAAG,MAAM;AACvB,IAAIC,SAAS,GAAG,MAAM;AACtB,IAAIC,IAAI,GAAG,MAAM,CAAC,CAAC;;AAEnB,IAAIC,QAAQ,GAAG,MAAM,CAAC,CAAC;;AAEvB,IAAIC,aAAa,GAAG,MAAM;AAC1B,IAAIC,cAAc,GAAG,MAAM,CAAC,CAAC;;AAE7B,IAAIC,SAAS,GAAG,UAAU;AAC1B,IAAIC,UAAU,GAAG,UAAU;AAC3B,IAAIC,WAAW,GAAG,UAAU;AAC5B,IAAIC,iBAAiB,GAAG,QAAQ;AAChC,IAAIC,qBAAqB,GAAG,MAAM;AAClC,IAAIC,oBAAoB,GAAG,MAAM;AACjC,IAAIC,oBAAoB,GAAG,MAAM;AACjC,IAAIC,mBAAmB,GAAG,MAAM;AAChC,IAAIC,gBAAgB,IAAIf,QAAQ,GAAG,aAAa,YAAY;EAC1D,SAASe,gBAAgBA,CAACrmD,IAAI,EAAE;IAC9B,IAAI,CAACsmD,wBAAwB,GAAG,IAAI,CAACA,wBAAwB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxE,IAAI,CAACC,6BAA6B,GAAG,IAAI,CAACA,6BAA6B,CAACD,IAAI,CAAC,IAAI,CAAC;IAClF,IAAI,CAACE,eAAe,GAAG,IAAI,CAACA,eAAe,CAACF,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACG,iCAAiC,GAAG,IAAI,CAACA,iCAAiC,CAACH,IAAI,CAAC,IAAI,CAAC;IAC1F,IAAI,CAACI,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACJ,IAAI,CAAC,IAAI,CAAC;IAClE,IAAI,CAACvmD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACwgC,IAAI,GAAGxgC,IAAI,CAACwgC,IAAI;IACrB,IAAI,CAAComB,UAAU,GAAG,IAAI;EACxB,CAAC,CAAC;EACF;;EAGA,IAAIz3C,MAAM,GAAGk3C,gBAAgB,CAACj3C,SAAS;EAEvCD,MAAM,CAAC5E,OAAO,GAAG,SAASA,OAAOA,CAAC0M,MAAM,EAAEqpB,QAAQ,EAAE;IAClD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;MACvBA,QAAQ,GAAG,CAAC,CAAC;IACf;IAEA,KAAK,IAAI71B,SAAS,GAAGtM,+BAA+B,CAAC,IAAI,CAACqiC,IAAI,CAACG,MAAM,CAAC,EAAEj2B,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MAC3G,IAAIk8C,KAAK,GAAGn8C,KAAK,CAAC/J,KAAK;MACvB,IAAIuF,KAAK,GAAG2gD,KAAK,CAAC3mB,YAAY,CAAC,CAAC;;MAEhC,KAAK,IAAIrvB,UAAU,GAAG1S,+BAA+B,CAAC0oD,KAAK,CAACvmB,QAAQ,CAAC,EAAExvB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;QAC7G,IAAIqL,OAAO,GAAGlF,MAAM,CAACnQ,KAAK;QAC1B,IAAIqiD,CAAC,GAAG,KAAK,CAAC;QAEd,IAAIA,CAAC,GAAG1iB,QAAQ,CAACtqB,OAAO,CAAC6pB,WAAW,CAAC,EAAE;UACrC,IAAImjB,CAAC,CAAChtC,OAAO,CAAC8pB,cAAc,CAAC,EAAE;YAC7B55B,KAAK,IAAI8P,OAAO,CAACgqB,YAAY;YAC7B95B,KAAK,IAAI8P,OAAO,CAAC+pB,WAAW;UAC9B,CAAC,MAAM,IAAIijB,CAAC,CAAChtC,OAAO,CAAC8pB,cAAc,CAAC,KAAK,KAAK,EAAE;YAC9C55B,KAAK,IAAI,CAAC8P,OAAO,CAACgqB,YAAY;YAC9B95B,KAAK,IAAI,CAAC8P,OAAO,CAAC+pB,WAAW;UAC/B;QACF;MACF;MAEA,KAAK,IAAIxsB,UAAU,GAAGpV,+BAA+B,CAAC0oD,KAAK,CAACtmB,SAAS,CAAC,EAAE/sB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE5I,IAAI,GAAG;QAC9G,IAAIwZ,QAAQ,GAAG3Q,MAAM,CAAC7S,KAAK;QAE3B,IAAIwjB,QAAQ,CAACoY,eAAe,GAAGr2B,KAAK,EAAE;UACpC,IAAI,CAAC4gD,eAAe,CAAC3iC,QAAQ,EAAElN,MAAM,CAAC;QACxC;MACF;IACF,CAAC,CAAC;;IAGF,IAAIkG,KAAK,GAAGlG,MAAM,CAACnX,MAAM,GAAG,CAAC;IAE7B,OAAOqd,KAAK,IAAI,CAAC,EAAE;MACjB,IAAIlG,MAAM,CAACkG,KAAK,CAAC,CAACwnB,EAAE,KAAK,MAAM,EAAE;QAC/B1tB,MAAM,CAAC8vC,MAAM,CAAC5pC,KAAK,EAAE,CAAC,CAAC;MACzB;MAEAA,KAAK,EAAE;IACT;IAEA,OAAOlG,MAAM;EACf,CAAC;EAED9H,MAAM,CAAC23C,eAAe,GAAG,SAASA,eAAeA,CAAC3iC,QAAQ,EAAElN,MAAM,EAAE;IAClE,IAAI,CAACkN,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAClN,MAAM,GAAGA,MAAM;IAEpB,IAAI,IAAI,CAACkN,QAAQ,CAAC9gB,IAAI,KAAK,CAAC,EAAE;MAC5B,IAAI,CAACqjD,iCAAiC,CAAC,IAAI,CAACviC,QAAQ,EAAE,IAAI,CAAClN,MAAM,CAAC;MAClE;IACF;IAEA,IAAI,CAAC+vC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAAC5zB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACqF,SAAS,GAAG,IAAI;IACrB,IAAI,CAACwuB,WAAW,GAAG,IAAI;IACvB,IAAIC,YAAY,GAAG,IAAI,CAACC,eAAe,CAACjjC,QAAQ,CAAC;IACjD,IAAI5Z,OAAO,GAAG,IAAI,CAAC88C,YAAY,CAAC,CAAC;IACjC,IAAIhD,OAAO,GAAG,CAAC,EAAE,IAAI,CAAClgC,QAAQ,CAAC1L,QAAQ,GAAGutC,iBAAiB,CAAC;IAC5D,OAAOmB,YAAY,CAAC58C,OAAO,CAAC,IAAI,CAAC0M,MAAM,EAAEotC,OAAO,EAAE95C,OAAO,CAAC;EAC5D,CAAC;EAED4E,MAAM,CAACi4C,eAAe,GAAG,SAASA,eAAeA,CAACjjC,QAAQ,EAAE;IAC1D,OAAO,IAAIigC,eAAe,CAACjgC,QAAQ,CAAC5e,KAAK,CAACi3B,UAAU,CAAC;EACvD,CAAC;EAEDrtB,MAAM,CAACk4C,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;IAC5C,QAAQ,IAAI,CAACljC,QAAQ,CAAC9gB,IAAI;MACxB,KAAK,CAAC;QACJ,OAAO,IAAI,CAACijD,wBAAwB;MAEtC,KAAK,CAAC;QACJ,OAAO,IAAI,CAACE,6BAA6B;MAE3C,KAAK,CAAC;QACJ,OAAO,IAAI,CAACC,eAAe;MAE7B,KAAK,CAAC;QACJ,OAAO,IAAI,CAACC,iCAAiC;MAE/C,KAAK,CAAC;QACJ,OAAO,IAAI,CAACC,qBAAqB;MAEnC;QACE,MAAM,IAAInnD,KAAK,CAAC,8BAA8B,GAAG,IAAI,CAAC2kB,QAAQ,CAAC9gB,IAAI,CAAC;IACxE;EACF,CAAC;EAED8L,MAAM,CAACm3C,wBAAwB,GAAG,SAASA,wBAAwBA,CAACpmC,KAAK,EAAE8Q,KAAK,EAAE7T,KAAK,EAAE;IACvF,IAAI6T,KAAK,CAAC9qB,KAAK,GAAGq/C,UAAU,EAAE;MAC5B,IAAI,CAAClyB,UAAU,GAAGlW,KAAK;IACzB;IAEA,IAAI6T,KAAK,CAAC9qB,KAAK,GAAGs/C,SAAS,EAAE;MAC3B,IAAI,CAAC9sB,SAAS,GAAGvb,KAAK;IACxB;IAEAmqC,aAAa,CAAC,IAAI,CAACrwC,MAAM,EAAE+Z,KAAK,CAAC9qB,KAAK,GAAGu/C,IAAI,EAAE,IAAI,CAACpyB,UAAU,EAAE,IAAI,CAACqF,SAAS,CAAC;EACjF,CAAC;EAEDvpB,MAAM,CAACq3C,6BAA6B,GAAG,SAASA,6BAA6BA,CAACtmC,KAAK,EAAE8Q,KAAK,EAAE7T,KAAK,EAAE;IACjG,IAAIoqC,YAAY,GAAG,IAAI,CAACpjC,QAAQ,CAAC5e,KAAK,CAACg6B,iBAAiB,CAACF,KAAK;IAE9D,IAAIrO,KAAK,CAAC+N,SAAS,KAAK,MAAM,EAAE;MAC9B,IAAI2D,MAAM,GAAG6kB,YAAY,CAACzvB,OAAO,CAAC9G,KAAK,CAAC+N,SAAS,CAAC;MAClD,IAAIX,WAAW,GAAG,IAAIslB,cAAc,CAAChhB,MAAM,CAAC;MAC5CxiB,KAAK,GAAG,IAAI,CAACjJ,MAAM,CAAC,IAAI,CAACgwC,WAAW,CAAC;MACrC,IAAI5mC,GAAG,GAAG+d,WAAW,CAACsE,MAAM,CAACxiB,KAAK,CAACykB,EAAE,CAAC;MAEtC,IAAItkB,GAAG,EAAE;QACP,IAAI,CAACpJ,MAAM,CAAC,IAAI,CAACgwC,WAAW,CAAC,GAAG,IAAI,CAACjnD,IAAI,CAACwnD,QAAQ,CAACnnC,GAAG,EAAEH,KAAK,CAAC2lB,UAAU,CAAC;MAC3E;IACF;IAEA,IAAI7U,KAAK,CAACgO,YAAY,KAAK,MAAM,EAAE;MACjC,IAAIyoB,OAAO,GAAGF,YAAY,CAACzvB,OAAO,CAAC9G,KAAK,CAACgO,YAAY,CAAC;MAEtD,IAAI0oB,YAAY,GAAG,IAAIhE,cAAc,CAAC+D,OAAO,CAAC;MAE9CvnC,KAAK,GAAG,IAAI,CAACjJ,MAAM,CAACkG,KAAK,CAAC;MAE1B,IAAIkD,GAAG,GAAGqnC,YAAY,CAAChlB,MAAM,CAACxiB,KAAK,CAACykB,EAAE,CAAC;MAEvC,IAAItkB,GAAG,EAAE;QACP,IAAI,CAACpJ,MAAM,CAACkG,KAAK,CAAC,GAAG,IAAI,CAACnd,IAAI,CAACwnD,QAAQ,CAACnnC,GAAG,EAAEH,KAAK,CAAC2lB,UAAU,CAAC;MAChE;IACF;IAEA,IAAI7U,KAAK,CAAC9qB,KAAK,GAAGw/C,QAAQ,EAAE;MAC1B,IAAI,CAACuB,WAAW,GAAG9pC,KAAK;IAC1B;EACF,CAAC;EAEDhO,MAAM,CAACs3C,eAAe,GAAG,SAASA,eAAeA,CAACvmC,KAAK,EAAE8Q,KAAK,EAAE7T,KAAK,EAAE;IACrE,IAAI6T,KAAK,CAAC9qB,KAAK,GAAGy/C,aAAa,EAAE;MAC/B,IAAI,CAACqB,aAAa,CAAC5nD,IAAI,CAAC+d,KAAK,CAAC;IAChC;IAEA,IAAI6T,KAAK,CAAC9qB,KAAK,GAAG0/C,cAAc,EAAE;MAChC,IAAI+B,mBAAmB;MAEvB,IAAIC,OAAO,GAAG,IAAI,CAACzjC,QAAQ,CAAC5e,KAAK,CAACi6B,eAAe;MACjD,IAAI9c,UAAU,GAAG,IAAI,CAACyB,QAAQ,CAAC5e,KAAK,CAACmd,UAAU;MAC/C,IAAI+c,YAAY,GAAG,IAAI,CAACtb,QAAQ,CAAC5e,KAAK,CAACk6B,YAAY;MACnD,IAAIooB,WAAW,GAAG72B,KAAK,CAAC6N,MAAM;MAC9B,IAAIipB,IAAI,GAAG,KAAK;MAChB,IAAIC,aAAa,GAAG,CAAC;MACrB,IAAIliB,UAAU,GAAG,EAAE;MACnB,IAAImiB,cAAc,GAAG,EAAE;MAEvB,OAAO,CAACF,IAAI,EAAE;QACZ,IAAIG,WAAW;QAEf,IAAIC,cAAc,GAAG,IAAI,CAAClB,aAAa,CAACzyC,GAAG,CAAC,CAAC;QAE7C,CAAC0zC,WAAW,GAAGpiB,UAAU,EAAEsiB,OAAO,CAAC1mD,KAAK,CAACwmD,WAAW,EAAE,IAAI,CAAChxC,MAAM,CAACixC,cAAc,CAAC,CAACriB,UAAU,CAAC;QAE7F,IAAIhH,MAAM,GAAG+oB,OAAO,CAAC9vB,OAAO,CAAC+vB,WAAW,EAAE,CAAC;QAC3CC,IAAI,GAAG,CAAC,EAAEjpB,MAAM,GAAGgnB,SAAS,CAAC;QAC7B,IAAIuC,KAAK,GAAG,CAAC,EAAEvpB,MAAM,GAAGinB,UAAU,CAAC;QACnC,IAAI31C,MAAM,GAAG,CAAC0uB,MAAM,GAAGknB,WAAW,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;QAE/C51C,MAAM,IAAI,IAAI,CAAC8G,MAAM,CAACixC,cAAc,CAAC,CAACvjB,EAAE;QACxC,IAAI0jB,SAAS,GAAG3lC,UAAU,CAACoV,OAAO,CAAC3nB,MAAM,CAAC;QAC1C43C,aAAa,IAAIM,SAAS;QAE1B,IAAIP,IAAI,IAAIM,KAAK,EAAE;UACjB,IAAIE,aAAa,GAAG7oB,YAAY,CAAC3H,OAAO,CAACiwB,aAAa,CAAC;UACvD,IAAI,CAAC9wC,MAAM,CAACixC,cAAc,CAAC,GAAG,IAAI,CAACloD,IAAI,CAACwnD,QAAQ,CAACc,aAAa,EAAEziB,UAAU,CAAC;UAC3EmiB,cAAc,CAAC5oD,IAAI,CAAC8oD,cAAc,CAAC;UACnCH,aAAa,GAAG,CAAC;UACjBliB,UAAU,GAAG,EAAE;QACjB,CAAC,MAAM;UACL,IAAI,CAAC5uB,MAAM,CAACixC,cAAc,CAAC,GAAG,IAAI,CAACloD,IAAI,CAACwnD,QAAQ,CAAC,MAAM,CAAC;QAC1D;MACF,CAAC,CAAC;;MAGF,CAACG,mBAAmB,GAAG,IAAI,CAACX,aAAa,EAAE5nD,IAAI,CAACqC,KAAK,CAACkmD,mBAAmB,EAAEK,cAAc,CAAC;IAC5F;EACF,CAAC;EAED74C,MAAM,CAACu3C,iCAAiC,GAAG,SAASA,iCAAiCA,CAACviC,QAAQ,EAAElN,MAAM,EAAEkG,KAAK,EAAE;IAC7G,IAAIihB,WAAW,GAAG,IAAIslB,cAAc,CAACv/B,QAAQ,CAAC5e,KAAK,CAAC64B,WAAW,CAAC;IAEhE,KAAKjhB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlG,MAAM,CAACnX,MAAM,EAAEqd,KAAK,EAAE,EAAE;MAC9C,IAAI+C,KAAK,GAAGjJ,MAAM,CAACkG,KAAK,CAAC;MAEzB,IAAI+C,KAAK,CAACykB,EAAE,KAAK,MAAM,EAAE;QACvB,IAAItkB,GAAG,GAAG+d,WAAW,CAACsE,MAAM,CAACxiB,KAAK,CAACykB,EAAE,CAAC;QAEtC,IAAItkB,GAAG,EAAE;UACP;UACApJ,MAAM,CAACkG,KAAK,CAAC,GAAG,IAAI,CAACnd,IAAI,CAACwnD,QAAQ,CAACnnC,GAAG,EAAEH,KAAK,CAAC2lB,UAAU,CAAC;QAC3D;MACF;IACF;EACF,CAAC;EAED12B,MAAM,CAACo5C,aAAa,GAAG,SAASA,aAAaA,CAACtnC,UAAU,EAAEunC,oBAAoB,EAAEv+C,KAAK,EAAEw+C,QAAQ,EAAE;IAC/F,IAAIC,YAAY;IAEhB,IAAIC,UAAU,GAAG,EAAE;IAEnB,OAAO1+C,KAAK,EAAE,EAAE;MACd,IAAIoW,GAAG,GAAG,IAAI,CAAC8D,QAAQ,CAAC5e,KAAK,CAACm6B,gBAAgB,CAAC5H,OAAO,CAAC0wB,oBAAoB,EAAE,CAAC;MAC9EG,UAAU,CAACvpD,IAAI,CAAC,IAAI,CAACY,IAAI,CAACwnD,QAAQ,CAACnnC,GAAG,CAAC,CAAC;IAC1C;IAEA,IAAI,CAACooC,QAAQ,EAAE;MACbxnC,UAAU,EAAE;IACd;IAEA,CAACynC,YAAY,GAAG,IAAI,CAACzxC,MAAM,EAAE8vC,MAAM,CAACtlD,KAAK,CAACinD,YAAY,EAAE,CAACznC,UAAU,EAAE,CAAC,CAAC,CAAC9F,MAAM,CAACwtC,UAAU,CAAC,CAAC;EAC7F,CAAC;EAEDx5C,MAAM,CAACw3C,qBAAqB,GAAG,SAASA,qBAAqBA,CAACzmC,KAAK,EAAE8Q,KAAK,EAAE7T,KAAK,EAAE;IACjF,IAAI6T,KAAK,CAAC9qB,KAAK,GAAGw/C,QAAQ,EAAE;MAC1B,IAAI,CAACwB,WAAW,GAAG/pC,KAAK;IAC1B;IAEA,IAAI6T,KAAK,CAACmO,iBAAiB,KAAK,MAAM,EAAE;MACtC,IAAIl1B,KAAK,GAAG,CAAC+mB,KAAK,CAAC9qB,KAAK,GAAGkgD,mBAAmB,MAAM,CAAC;MACrD,IAAIqC,QAAQ,GAAG,CAAC,EAAEz3B,KAAK,CAAC9qB,KAAK,GAAGggD,oBAAoB,CAAC;MAErD,IAAI,CAACqC,aAAa,CAAC,IAAI,CAACrB,WAAW,EAAEl2B,KAAK,CAACmO,iBAAiB,EAAEl1B,KAAK,EAAEw+C,QAAQ,CAAC;IAChF;IAEA,IAAIz3B,KAAK,CAACkO,kBAAkB,KAAK,MAAM,EAAE;MACvC,IAAI0pB,MAAM,GAAG,CAAC53B,KAAK,CAAC9qB,KAAK,GAAGigD,oBAAoB,MAAM,CAAC;MAEvD,IAAI0C,SAAS,GAAG,CAAC,EAAE73B,KAAK,CAAC9qB,KAAK,GAAG+/C,qBAAqB,CAAC;MAEvD,IAAI,CAACsC,aAAa,CAACprC,KAAK,EAAE6T,KAAK,CAACkO,kBAAkB,EAAE0pB,MAAM,EAAEC,SAAS,CAAC;IACxE;EACF,CAAC;EAED15C,MAAM,CAAC25C,oBAAoB,GAAG,SAASA,oBAAoBA,CAAA,EAAG;IAC5D,IAAIxoB,QAAQ,GAAG,EAAE;IAEjB,KAAK,IAAI7sB,UAAU,GAAGtV,+BAA+B,CAAC,IAAI,CAACqiC,IAAI,CAACG,MAAM,CAAC,EAAEjtB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE9I,IAAI,GAAG;MAC/G,IAAIk8C,KAAK,GAAGnzC,MAAM,CAAC/S,KAAK;MAExB,KAAK,IAAIgT,UAAU,GAAGxV,+BAA+B,CAAC0oD,KAAK,CAACvmB,QAAQ,CAAC,EAAE1sB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAEhJ,IAAI,GAAG;QAC7G,IAAIqL,OAAO,GAAGpC,MAAM,CAACjT,KAAK;QAC1B2/B,QAAQ,CAAClhC,IAAI,CAAC,CAAC4W,OAAO,CAAC6pB,WAAW,EAAE7pB,OAAO,CAAC8pB,cAAc,CAAC,CAAC;MAC9D;IACF;IAEA,OAAOQ,QAAQ;EACjB,CAAC;EAEDnxB,MAAM,CAAC45C,cAAc,GAAG,SAASA,cAAcA,CAAC1oC,GAAG,EAAE;IACnD,IAAI,CAAC,IAAI,CAACumC,UAAU,EAAE;MACpB,IAAI,CAACoC,kBAAkB,CAAC,CAAC;IAC3B;IAEA,OAAO,IAAI,CAACpC,UAAU,CAACvmC,GAAG,CAAC,IAAI,EAAE;EACnC,CAAC;EAEDlR,MAAM,CAAC65C,kBAAkB,GAAG,SAASA,kBAAkBA,CAAA,EAAG;IACxD,IAAI,CAACpC,UAAU,GAAG,CAAC,CAAC;IAEpB,KAAK,IAAIviB,UAAU,GAAGlmC,+BAA+B,CAAC,IAAI,CAACqiC,IAAI,CAACG,MAAM,CAAC,EAAE2D,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE15B,IAAI,GAAG;MAC/G,IAAIk8C,KAAK,GAAGviB,MAAM,CAAC3jC,KAAK;MACxB,IAAIuF,KAAK,GAAG2gD,KAAK,CAAC3mB,YAAY;MAE9B,KAAK,IAAI+oB,UAAU,GAAG9qD,+BAA+B,CAAC0oD,KAAK,CAACtmB,SAAS,CAAC,EAAE2oB,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAEt+C,IAAI,GAAG;QAC9G,IAAIwZ,QAAQ,GAAG+kC,MAAM,CAACvoD,KAAK;QAE3B,IAAIwjB,QAAQ,CAACoY,eAAe,GAAGr2B,KAAK,EAAE;UACpC,IAAI,CAACijD,yBAAyB,CAAChlC,QAAQ,CAAC;QAC1C;MACF;IACF;EACF,CAAC;EAEDhV,MAAM,CAACg6C,yBAAyB,GAAG,SAASA,yBAAyBA,CAAChlC,QAAQ,EAAE;IAC9E,IAAI3R,KAAK,GAAG,IAAI;;IAEhB;IACA,IAAI2R,QAAQ,CAAC9gB,IAAI,KAAK,CAAC,EAAE;MACvB;IACF;IAEA,IAAIghD,OAAO,GAAG,CAAC,EAAElgC,QAAQ,CAAC1L,QAAQ,GAAGutC,iBAAiB,CAAC;IAEvD,IAAI3B,OAAO,EAAE;MACX,MAAM,IAAI7kD,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,IAAI,CAAC2kB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC6iC,aAAa,GAAG,EAAE;IACvB,IAAIG,YAAY,GAAG,IAAI,CAACC,eAAe,CAACjjC,QAAQ,CAAC;IACjD,IAAI5Z,OAAO,GAAG,IAAI,CAAC88C,YAAY,CAAC,CAAC;IACjC,IAAInvC,KAAK,GAAG,EAAE;IACd,IAAIkxC,KAAK,GAAG,EAAE;IACd,IAAI,CAACnyC,MAAM,GAAG,EAAE;IAChBkwC,YAAY,CAACtC,QAAQ,CAAC;MACpBO,KAAK,EAAE,SAASA,KAAKA,CAACllC,KAAK,EAAE8Q,KAAK,EAAE;QAClC,IAAI/Z,MAAM,GAAGzE,KAAK,CAACyE,MAAM;QACzBmyC,KAAK,CAAChqD,IAAI,CAAC;UACT6X,MAAM,EAAEA,MAAM,CAACyrC,KAAK,CAAC,CAAC;UACtBsE,aAAa,EAAEx0C,KAAK,CAACw0C,aAAa,CAACtE,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAIxe,CAAC,GAAG1xB,KAAK,CAACxS,IAAI,CAACwnD,QAAQ,CAACtnC,KAAK,CAAC;QAElChI,KAAK,CAAC9Y,IAAI,CAAC8kC,CAAC,CAAC;QACbjtB,MAAM,CAAC7X,IAAI,CAAC8Y,KAAK,CAACA,KAAK,CAACpY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEtCyK,OAAO,CAAC0M,MAAM,CAACA,MAAM,CAACnX,MAAM,GAAG,CAAC,CAAC,EAAEkxB,KAAK,EAAE/Z,MAAM,CAACnX,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;QAE9D,IAAImK,KAAK,GAAG,CAAC;QACb,IAAIo/C,KAAK,GAAG,CAAC;QAEb,KAAK,IAAIxpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoX,MAAM,CAACnX,MAAM,IAAImK,KAAK,IAAI,CAAC,EAAEpK,CAAC,EAAE,EAAE;UACpD,IAAIoX,MAAM,CAACpX,CAAC,CAAC,CAAC8kC,EAAE,KAAK,MAAM,EAAE;YAC3B16B,KAAK,EAAE;YACPo/C,KAAK,GAAGpyC,MAAM,CAACpX,CAAC,CAAC,CAAC8kC,EAAE;UACtB;QACF;QAEA,IAAI16B,KAAK,KAAK,CAAC,EAAE;UACf,IAAIzI,MAAM,GAAG0W,KAAK,CAACzJ,GAAG,CAAC,UAAUy1B,CAAC,EAAE;YAClC,OAAOA,CAAC,CAACS,EAAE;UACb,CAAC,CAAC;UACF,IAAI2kB,MAAM,GAAG92C,KAAK,CAACo0C,UAAU,CAACyC,KAAK,CAAC;UAEpC,IAAIC,MAAM,EAAE;YACVA,MAAM,CAAClqD,IAAI,CAACoC,MAAM,CAAC;UACrB,CAAC,MAAM;YACLgR,KAAK,CAACo0C,UAAU,CAACyC,KAAK,CAAC,GAAG,CAAC7nD,MAAM,CAAC;UACpC;QACF;MACF,CAAC;MACD6jD,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;QACpB,IAAIkE,UAAU,GAAGH,KAAK,CAAC70C,GAAG,CAAC,CAAC;QAE5B/B,KAAK,CAACyE,MAAM,GAAGsyC,UAAU,CAACtyC,MAAM;QAChCzE,KAAK,CAACw0C,aAAa,GAAGuC,UAAU,CAACvC,aAAa;QAC9C9uC,KAAK,CAAC3D,GAAG,CAAC,CAAC;MACb;IACF,CAAC,CAAC;EACJ,CAAC;EAED,OAAO8xC,gBAAgB;AACzB,CAAC,CAAC,CAAC,EAAGhoD,yBAAyB,CAACinD,QAAQ,CAACl2C,SAAS,EAAE,iBAAiB,EAAE,CAAC9O,KAAK,CAAC,EAAEO,MAAM,CAAC2jC,wBAAwB,CAAC8gB,QAAQ,CAACl2C,SAAS,EAAE,iBAAiB,CAAC,EAAEk2C,QAAQ,CAACl2C,SAAS,CAAC,EAAGk2C,QAAQ,CAAC;AACvL;AACA;;AAEA,SAASkE,IAAIA,CAACvyC,MAAM,EAAEwyC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EACxD,IAAID,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,KAAK;EAClB;EAEA,IAAIC,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,KAAK;EAClB;EAEA,IAAI15C,GAAG,GAAG+G,MAAM,CAAC8vC,MAAM,CAAC2C,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;EAE/D,IAAIE,QAAQ,EAAE;IACZ15C,GAAG,CAACm0C,OAAO,CAAC,CAAC;EACf;EAEA,IAAIp0C,KAAK,GAAGgH,MAAM,CAAC8vC,MAAM,CAACtlD,KAAK,CAACwV,MAAM,EAAE,CAACwyC,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACtuC,MAAM,CAACjL,GAAG,CAAC,CAAC;EAE3E,IAAIy5C,QAAQ,EAAE;IACZ15C,KAAK,CAACo0C,OAAO,CAAC,CAAC;EACjB;EAEAptC,MAAM,CAAC8vC,MAAM,CAACtlD,KAAK,CAACwV,MAAM,EAAE,CAACyyC,MAAM,CAAC,CAAC,CAAC,IAAID,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAACtuC,MAAM,CAAClL,KAAK,CAAC,CAAC;EAC3E,OAAOgH,MAAM;AACf;AAEA,SAASqwC,aAAaA,CAACrwC,MAAM,EAAE4yC,IAAI,EAAEx2B,UAAU,EAAEqF,SAAS,EAAE;EAE1D,QAAQmxB,IAAI;IACV,KAAK,CAAC;MACJ;MACA,OAAO5yC,MAAM;IAEf,KAAK,CAAC;MACJ;MACA,OAAOuyC,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;IAEnE,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;IAEnE,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,CAAC;MACJ;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;IAEnE,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;IAEnE,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;IAEnE,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;IAEnE,KAAK,EAAE;MACL;MACA,OAAO8wB,IAAI,CAACvyC,MAAM,EAAE,CAACoc,UAAU,EAAE,CAAC,CAAC,EAAE,CAACqF,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAElE;MACE,MAAM,IAAIl5B,KAAK,CAAC,gBAAgB,GAAGqqD,IAAI,CAAC;EAC5C;AACF;AAEA,IAAIC,eAAe,GAAG,aAAa,YAAY;EAC7C,SAASA,eAAeA,CAAC9pD,IAAI,EAAE;IAC7B,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC+pD,aAAa,GAAG,IAAI1D,gBAAgB,CAACrmD,IAAI,CAAC;IAC/C,IAAI,CAACgqD,gBAAgB,GAAG,KAAK;EAC/B;EAEA,IAAI76C,MAAM,GAAG26C,eAAe,CAAC16C,SAAS;EAEtCD,MAAM,CAAC6f,UAAU,GAAG,SAASA,UAAUA,CAACi7B,QAAQ,EAAE;IAChD;IACA;IACA,IAAIA,QAAQ,CAAC/Y,SAAS,KAAK,KAAK,EAAE;MAChC+Y,QAAQ,CAAChzC,MAAM,CAACotC,OAAO,CAAC,CAAC;IAC3B;IAEA,IAAI,CAAC0F,aAAa,CAACx/C,OAAO,CAAC0/C,QAAQ,CAAChzC,MAAM,EAAE6rC,UAAU,CAACmH,QAAQ,CAAC3pB,QAAQ,CAAC,CAAC;EAC5E,CAAC;EAEDnxB,MAAM,CAAC+6C,oBAAoB,GAAG,SAASA,oBAAoBA,CAACz0C,MAAM,EAAEhS,QAAQ,EAAE;IAC5E,OAAO2/C,UAAU,CAAC,IAAI,CAAC2G,aAAa,CAACjB,oBAAoB,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED35C,MAAM,CAACg7C,eAAe,GAAG,SAASA,eAAeA,CAAC9pC,GAAG,EAAE;IACrD,IAAI+pC,YAAY,GAAG,IAAI,CAACL,aAAa,CAAChB,cAAc,CAAC1oC,GAAG,CAAC;IACzD,IAAI7e,MAAM,GAAG,IAAIyjD,GAAG,CAAC,CAAC;IAEtB,KAAK,IAAIx6C,SAAS,GAAGtM,+BAA+B,CAACisD,YAAY,CAAC,EAAE1/C,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MACvG,IAAIsM,MAAM,GAAGvM,KAAK,CAAC/J,KAAK;MAExB,IAAI,CAAC0pD,WAAW,CAACpzC,MAAM,EAAE,CAAC,EAAEzV,MAAM,EAAE,EAAE,CAAC;IACzC;IAEA,OAAOA,MAAM;EACf,CAAC;EAED2N,MAAM,CAACk7C,WAAW,GAAG,SAASA,WAAWA,CAACpzC,MAAM,EAAEkG,KAAK,EAAEmtC,OAAO,EAAE5gD,MAAM,EAAE;IACxE,IAAIm8B,UAAU,GAAG,IAAI,CAAC7lC,IAAI,CAACuqD,cAAc,CAACzmB,kBAAkB,CAAC7sB,MAAM,CAACkG,KAAK,CAAC,CAAC;IAE3E,KAAK,IAAItM,UAAU,GAAG1S,+BAA+B,CAAC0nC,UAAU,CAAC,EAAE/0B,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;MACzG,IAAI67B,SAAS,GAAG11B,MAAM,CAACnQ,KAAK;MAC5B,IAAI8P,CAAC,GAAG/G,MAAM,GAAGC,MAAM,CAACm5B,aAAa,CAAC0D,SAAS,CAAC;MAEhD,IAAIrpB,KAAK,GAAGlG,MAAM,CAACnX,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,CAACuqD,WAAW,CAACpzC,MAAM,EAAEkG,KAAK,GAAG,CAAC,EAAEmtC,OAAO,EAAE75C,CAAC,CAAC;MACjD,CAAC,MAAM;QACL65C,OAAO,CAACpF,GAAG,CAACz0C,CAAC,CAAC;MAChB;IACF;EACF,CAAC;EAED,OAAOq5C,eAAe;AACxB,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIU,WAAW,GAAG,aAAa,YAAY;EACzC,SAASA,WAAWA,CAACxqD,IAAI,EAAEyV,MAAM,EAAEy7B,SAAS,EAAE;IAC5C,IAAI,CAAClxC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACyV,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACy7B,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACuZ,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;EACvB;EACA;AACF;AACA;AACA;;EAGE,IAAIx7C,MAAM,GAAGq7C,WAAW,CAACp7C,SAAS;EAElCD,MAAM,CAACy7C,YAAY,GAAG,SAASA,YAAYA,CAACtqB,QAAQ,EAAEuqB,MAAM,EAAE;IAC5D,IAAIC,UAAU,GAAG,IAAI,CAACL,MAAM,CAAC3qD,MAAM,GAAG,CAAC;IACvC,IAAIirD,KAAK,GAAG,IAAI,CAACN,MAAM,CAACK,UAAU,CAAC;IAEnC,KAAK,IAAIrgD,SAAS,GAAGtM,+BAA+B,CAACmiC,QAAQ,CAAC,EAAE51B,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEE,IAAI,GAAG;MACnG,IAAIqL,OAAO,GAAGtL,KAAK,CAAC/J,KAAK;MAEzB,IAAI,IAAI,CAACgqD,WAAW,CAAC30C,OAAO,CAAC,IAAI,IAAI,EAAE;QACrC+0C,KAAK,CAAC3rD,IAAI,CAAC4W,OAAO,CAAC;QACnB,IAAI,CAAC20C,WAAW,CAAC30C,OAAO,CAAC,GAAG80C,UAAU;QAEtC,IAAID,MAAM,EAAE;UACV,IAAI,CAACH,cAAc,CAAC10C,OAAO,CAAC,GAAG,IAAI;QACrC;MACF;IACF;EACF;EACA;AACF;AACA,KAFE;EAKA7G,MAAM,CAAC+1C,GAAG,GAAG,SAASA,GAAGA,CAAC8F,GAAG,EAAEH,MAAM,EAAE;IACrC,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;MACrBA,MAAM,GAAG,IAAI;IACf;IAEA,IAAI,IAAI,CAACJ,MAAM,CAAC3qD,MAAM,KAAK,CAAC,EAAE;MAC5B,IAAI,CAAC2qD,MAAM,CAACrrD,IAAI,CAAC,EAAE,CAAC;IACtB;IAEA,IAAI,OAAO4rD,GAAG,KAAK,QAAQ,EAAE;MAC3BA,GAAG,GAAG,CAACA,GAAG,CAAC;IACb;IAEA,IAAI3pD,KAAK,CAAC0J,OAAO,CAACigD,GAAG,CAAC,EAAE;MACtB,IAAI,CAACJ,YAAY,CAACI,GAAG,EAAEH,MAAM,CAAC;IAChC,CAAC,MAAM,IAAI,OAAOG,GAAG,KAAK,QAAQ,EAAE;MAClC,IAAI,CAACJ,YAAY,CAACI,GAAG,CAACH,MAAM,IAAI,EAAE,EAAE,IAAI,CAAC;MAEzC,IAAI,CAACD,YAAY,CAACI,GAAG,CAACC,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC;IAC3C,CAAC,MAAM;MACL,MAAM,IAAIzrD,KAAK,CAAC,yCAAyC,CAAC;IAC5D;EACF;EACA;AACF;AACA,KAFE;EAKA2P,MAAM,CAAC+7C,QAAQ,GAAG,SAASA,QAAQA,CAACF,GAAG,EAAEH,MAAM,EAAE;IAC/C,IAAI,OAAOG,GAAG,KAAK,UAAU,EAAE;MAC7B,IAAI,CAACP,MAAM,CAACrrD,IAAI,CAAC4rD,GAAG,EAAE,EAAE,CAAC;IAC3B,CAAC,MAAM;MACL,IAAI,CAACP,MAAM,CAACrrD,IAAI,CAAC,EAAE,CAAC;MACpB,IAAI,CAAC8lD,GAAG,CAAC8F,GAAG,EAAEH,MAAM,CAAC;IACvB;EACF,CAAC;EAED17C,MAAM,CAACg8C,mBAAmB,GAAG,SAASA,mBAAmBA,CAAC7qB,QAAQ,EAAE;IAClE,IAAIj/B,KAAK,CAAC0J,OAAO,CAACu1B,QAAQ,CAAC,EAAE;MAC3B,IAAI,CAAC4kB,GAAG,CAAC5kB,QAAQ,CAAC;IACpB,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MACvC,KAAK,IAAIv2B,GAAG,IAAIu2B,QAAQ,EAAE;QACxB,IAAIA,QAAQ,CAACv2B,GAAG,CAAC,EAAE;UACjB,IAAI,CAACm7C,GAAG,CAACn7C,GAAG,CAAC;QACf,CAAC,MAAM,IAAI,IAAI,CAAC4gD,WAAW,CAAC5gD,GAAG,CAAC,IAAI,IAAI,EAAE;UACxC,IAAIghD,KAAK,GAAG,IAAI,CAACN,MAAM,CAAC,IAAI,CAACE,WAAW,CAAC5gD,GAAG,CAAC,CAAC;UAC9CghD,KAAK,CAAChE,MAAM,CAACgE,KAAK,CAAC9/C,OAAO,CAAClB,GAAG,CAAC,EAAE,CAAC,CAAC;UACnC,OAAO,IAAI,CAAC4gD,WAAW,CAAC5gD,GAAG,CAAC;UAC5B,OAAO,IAAI,CAAC2gD,cAAc,CAAC3gD,GAAG,CAAC;QACjC;MACF;IACF;EACF;EACA;AACF;AACA,KAFE;EAKAoF,MAAM,CAACi8C,oBAAoB,GAAG,SAASA,oBAAoBA,CAACn0C,MAAM,EAAE;IAClE,KAAK,IAAIpG,UAAU,GAAG1S,+BAA+B,CAAC8Y,MAAM,CAAC,EAAEnG,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAElG,IAAI,GAAG;MACrG,IAAIuV,KAAK,GAAGpP,MAAM,CAACnQ,KAAK;MAExB,KAAK,IAAIqV,OAAO,IAAI,IAAI,CAAC00C,cAAc,EAAE;QACvCxqC,KAAK,CAACogB,QAAQ,CAACtqB,OAAO,CAAC,GAAG,IAAI;MAChC;IACF;EACF;EACA;AACF;AACA,KAFE;EAKA7G,MAAM,CAAC5E,OAAO,GAAG,SAASA,OAAOA,CAAC8gD,SAAS,EAAEp0C,MAAM,EAAEytB,SAAS,EAAE;IAC9D,KAAK,IAAInxB,UAAU,GAAGpV,+BAA+B,CAAC,IAAI,CAACssD,MAAM,CAAC,EAAEj3C,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE5I,IAAI,GAAG;MAC1G,IAAIogD,KAAK,GAAGv3C,MAAM,CAAC7S,KAAK;MAExB,IAAI,OAAOoqD,KAAK,KAAK,UAAU,EAAE;QAC/B,IAAI,CAACrmB,SAAS,EAAE;UACdqmB,KAAK,CAAC,IAAI,CAAC/qD,IAAI,EAAEiX,MAAM,EAAE,IAAI,CAAC;QAChC;MACF,CAAC,MAAM,IAAI8zC,KAAK,CAACjrD,MAAM,GAAG,CAAC,EAAE;QAC3BurD,SAAS,CAACC,aAAa,CAACP,KAAK,EAAE9zC,MAAM,EAAEytB,SAAS,CAAC;MACnD;IACF;EACF,CAAC;EAED,OAAO8lB,WAAW;AACpB,CAAC,CAAC,CAAC;;AAEH;AACA,IAAIe,kBAAkB,GAAG,CAAC,MAAM,CAAC;AACjC,IAAIC,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;AAC9D,IAAIC,mBAAmB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;AAClD,IAAIC,mBAAmB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;AAC1E,IAAIC,oBAAoB,GAAG;EACzBC,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACrBC,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM;AACtB,CAAC;AAED,IAAIC,aAAa,GAAG,aAAa,YAAY;EAC3C,SAASA,aAAaA,CAAA,EAAG,CAAC;EAE1BA,aAAa,CAACC,IAAI,GAAG,SAASA,IAAIA,CAACC,KAAK,EAAE/0C,MAAM,EAAEqpB,QAAQ,EAAE;IAC1D;IACA,IAAI,CAAC2rB,iBAAiB,CAACD,KAAK,CAAC;IAC7B,IAAI,CAACE,YAAY,CAACF,KAAK,CAAC;IACxB,IAAI,CAACG,kBAAkB,CAACH,KAAK,EAAE1rB,QAAQ,CAAC,CAAC,CAAC;;IAE1C0rB,KAAK,CAACZ,oBAAoB,CAACn0C,MAAM,CAAC,CAAC,CAAC;;IAGpC,IAAI,CAACm1C,cAAc,CAACJ,KAAK,EAAE/0C,MAAM,CAAC;EACpC,CAAC;EAED60C,aAAa,CAACG,iBAAiB,GAAG,SAASA,iBAAiBA,CAACF,IAAI,EAAE;IACjEA,IAAI,CAAC7G,GAAG,CAAC;MACP2F,MAAM,EAAE,EAAE,CAAC1vC,MAAM,CAACowC,kBAAkB,EAAEI,oBAAoB,CAACI,IAAI,CAAC7a,SAAS,CAAC,CAAC;MAC3E+Z,KAAK,EAAEQ;IACT,CAAC,CAAC;EACJ,CAAC;EAEDK,aAAa,CAACI,YAAY,GAAG,SAASA,YAAYA,CAACH,IAAI,EAAE,CAAC;EAAA,CACzD;EAEDD,aAAa,CAACK,kBAAkB,GAAG,SAASA,kBAAkBA,CAACJ,IAAI,EAAEM,YAAY,EAAE;IACjFN,IAAI,CAAC7G,GAAG,CAAC,EAAE,CAAC/pC,MAAM,CAACqwC,eAAe,EAAEE,mBAAmB,CAAC,CAAC;IACzDK,IAAI,CAACZ,mBAAmB,CAACkB,YAAY,CAAC;EACxC,CAAC;EAEDP,aAAa,CAACM,cAAc,GAAG,SAASA,cAAcA,CAACL,IAAI,EAAE90C,MAAM,EAAE;IACnE;IACA,KAAK,IAAIpX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoX,MAAM,CAACnX,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIqgB,KAAK,GAAGjJ,MAAM,CAACpX,CAAC,CAAC;MAErB,IAAIqgB,KAAK,CAAC2lB,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;QAClC;QACA,IAAI51B,KAAK,GAAGpQ,CAAC;QACb,IAAIqQ,GAAG,GAAGrQ,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEjB,OAAOoQ,KAAK,GAAG,CAAC,IAAIvR,OAAO,CAAC4tD,OAAO,CAACr1C,MAAM,CAAChH,KAAK,GAAG,CAAC,CAAC,CAAC41B,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;UACpE5uB,MAAM,CAAChH,KAAK,GAAG,CAAC,CAAC,CAACqwB,QAAQ,CAAC4d,IAAI,GAAG,IAAI;UACtCjnC,MAAM,CAAChH,KAAK,GAAG,CAAC,CAAC,CAACqwB,QAAQ,CAAC0d,IAAI,GAAG,IAAI;UACtC/tC,KAAK,EAAE;QACT,CAAC,CAAC;;QAGF,OAAOC,GAAG,GAAG+G,MAAM,CAACnX,MAAM,IAAIpB,OAAO,CAAC4tD,OAAO,CAACr1C,MAAM,CAAC/G,GAAG,CAAC,CAAC21B,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;UACxE5uB,MAAM,CAAC/G,GAAG,CAAC,CAACowB,QAAQ,CAAC2d,IAAI,GAAG,IAAI;UAChChnC,MAAM,CAAC/G,GAAG,CAAC,CAACowB,QAAQ,CAAC0d,IAAI,GAAG,IAAI;UAChC9tC,GAAG,EAAE;QACP,CAAC,CAAC;;QAGFgQ,KAAK,CAACogB,QAAQ,CAAC0d,IAAI,GAAG,IAAI;QAC1Bn+C,CAAC,GAAGqQ,GAAG,GAAG,CAAC;MACb;IACF;EACF,CAAC;EAED,OAAO47C,aAAa;AACtB,CAAC,CAAC,CAAC;AAEHA,aAAa,CAACS,cAAc,GAAG,YAAY;AAE3C,IAAIC,MAAM,GAAG,QAAQ;AACrB,IAAIC,MAAM,GAAG,CACZ,CAAC,EACD,CAAC,EACD,GAAG,EACH,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,EACD,CAAC,EACD,GAAG,EACH,CAAC,EACD,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,CAAC,EACD,CAAC,EACD,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,CAAC,EACD,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,CAAC,EACD,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,CAAC,EACD,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,CAAC,EACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,CACD;AACD,IAAIC,UAAU,GAAG;EAChBrpD,IAAI,EAAEmpD,MAAM;EACZjqC,IAAI,EAAEkqC;AACP,CAAC;AAED,IAAIE,MAAM,GAAG,IAAIhuD,WAAW,CAAC,IAAIiuD,UAAU,CAA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ChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,CACC,oBAAoB,EACpB,gBAAgB,CAChB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,EACC,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,oBAAoB,CACpB,EACD,EACC,EACD,CACC,oBAAoB,CACpB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,oBAAoB,CACpB,CACD;AACD,IAAIC,YAAY,GAAG;EAClB38B,UAAU,EAAEw8B,YAAY;EACxBf,SAAS,EAAEgB,WAAW;EACtBf,IAAI,EAAEgB;AACP,CAAC;AAED,IAAIE,YAAY,GAAG,CAClB,GAAG,EACH,KAAK,EACL,GAAG,EACH,IAAI,EACJ,GAAG,EACH,IAAI,EACJ,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,MAAM,EACN,GAAG,EACH,OAAO,EACP,OAAO,EACP,MAAM,EACN,IAAI,EACJ,GAAG,EACH,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,MAAM,EACN,KAAK,EACL,IAAI,EACJ,GAAG,EACH,IAAI,EACJ,GAAG,EACH,IAAI,EACJ,MAAM,CACN;AACD,IAAIC,gBAAgB,GAAG;EACtB,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,MAAM,EAAE,CACP,IAAI,EACJ,IAAI,CACJ;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK,CACL;EACD,OAAO,EAAE,CACR,KAAK,EACL,KAAK;AAEP,CAAC;AACD,IAAI78B,UAAU,GAAG,CAChy7B,SAAS,GAAG,CACfgBAAgB,CAChB,EACD,CACC,qBAAqB,CACrB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,kBAAkB,CAClB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,EACC,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,iBAAiB,CACjB,EACD,CACC,gBAAgB,CAChB,EACD,CACC,qBAAqB,CACrB,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","ignoreList":[]},"metadata":{},"sourceType":"module"}