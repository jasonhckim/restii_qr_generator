{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _append = _interopRequireDefault(require(\"../attributedString/append\"));\nvar _trim = _interopRequireDefault(require(\"../attributedString/trim\"));\nvar ELLIPSIS_UNICODE = 8230;\nvar ELLIPSIS_STRING = String.fromCharCode(ELLIPSIS_UNICODE);\n/**\n * Get ellipsis codepoint. This may be different in standard and embedded fonts\n *\n * @param  {number}  font\n * @return {Object} ellipsis codepoint\n */\n\nvar getEllipsisCodePoint = function getEllipsisCodePoint(font) {\n  if (!font.encode) return ELLIPSIS_UNICODE;\n  var _font$encode = font.encode(ELLIPSIS_STRING),\n    codePoints = _font$encode[0];\n  return parseInt(codePoints[0], 16);\n};\n/**\n * Trucante block with ellipsis\n *\n * @param  {number}  lines quantity\n * @param  {Object}  paragraph block\n * @return {Object} sliced paragraph block\n */\n\nvar truncate = function truncate(block) {\n  var runs = R.propOr([], 'runs', R.last(block));\n  var font = R.path(['attributes', 'font'], R.last(runs));\n  if (font) {\n    var codePoint = getEllipsisCodePoint(font);\n    var glyph = font.glyphForCodePoint(codePoint);\n    return R.adjust(-1, R.compose((0, _append.default)(glyph), _trim.default))(block);\n  }\n  return block;\n};\nvar _default = truncate;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_append","_trim","ELLIPSIS_UNICODE","ELLIPSIS_STRING","String","fromCharCode","getEllipsisCodePoint","font","encode","_font$encode","codePoints","parseInt","truncate","block","runs","propOr","last","path","codePoint","glyph","glyphForCodePoint","adjust","compose","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/block/truncate.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _append = _interopRequireDefault(require(\"../attributedString/append\"));\n\nvar _trim = _interopRequireDefault(require(\"../attributedString/trim\"));\n\nvar ELLIPSIS_UNICODE = 8230;\nvar ELLIPSIS_STRING = String.fromCharCode(ELLIPSIS_UNICODE);\n/**\n * Get ellipsis codepoint. This may be different in standard and embedded fonts\n *\n * @param  {number}  font\n * @return {Object} ellipsis codepoint\n */\n\nvar getEllipsisCodePoint = function getEllipsisCodePoint(font) {\n  if (!font.encode) return ELLIPSIS_UNICODE;\n\n  var _font$encode = font.encode(ELLIPSIS_STRING),\n      codePoints = _font$encode[0];\n\n  return parseInt(codePoints[0], 16);\n};\n/**\n * Trucante block with ellipsis\n *\n * @param  {number}  lines quantity\n * @param  {Object}  paragraph block\n * @return {Object} sliced paragraph block\n */\n\n\nvar truncate = function truncate(block) {\n  var runs = R.propOr([], 'runs', R.last(block));\n  var font = R.path(['attributes', 'font'], R.last(runs));\n\n  if (font) {\n    var codePoint = getEllipsisCodePoint(font);\n    var glyph = font.glyphForCodePoint(codePoint);\n    return R.adjust(-1, R.compose((0, _append.default)(glyph), _trim.default))(block);\n  }\n\n  return block;\n};\n\nvar _default = truncate;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACF,OAAO,GAAG,KAAK,CAAC;AAExB,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIM,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAE3E,IAAIO,KAAK,GAAGR,sBAAsB,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAEvE,IAAIQ,gBAAgB,GAAG,IAAI;AAC3B,IAAIC,eAAe,GAAGC,MAAM,CAACC,YAAY,CAACH,gBAAgB,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAII,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,IAAI,EAAE;EAC7D,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE,OAAON,gBAAgB;EAEzC,IAAIO,YAAY,GAAGF,IAAI,CAACC,MAAM,CAACL,eAAe,CAAC;IAC3CO,UAAU,GAAGD,YAAY,CAAC,CAAC,CAAC;EAEhC,OAAOE,QAAQ,CAACD,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACpC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIE,QAAQ,GAAG,SAASA,QAAQA,CAACC,KAAK,EAAE;EACtC,IAAIC,IAAI,GAAGf,CAAC,CAACgB,MAAM,CAAC,EAAE,EAAE,MAAM,EAAEhB,CAAC,CAACiB,IAAI,CAACH,KAAK,CAAC,CAAC;EAC9C,IAAIN,IAAI,GAAGR,CAAC,CAACkB,IAAI,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAElB,CAAC,CAACiB,IAAI,CAACF,IAAI,CAAC,CAAC;EAEvD,IAAIP,IAAI,EAAE;IACR,IAAIW,SAAS,GAAGZ,oBAAoB,CAACC,IAAI,CAAC;IAC1C,IAAIY,KAAK,GAAGZ,IAAI,CAACa,iBAAiB,CAACF,SAAS,CAAC;IAC7C,OAAOnB,CAAC,CAACsB,MAAM,CAAC,CAAC,CAAC,EAAEtB,CAAC,CAACuB,OAAO,CAAC,CAAC,CAAC,EAAEtB,OAAO,CAACL,OAAO,EAAEwB,KAAK,CAAC,EAAElB,KAAK,CAACN,OAAO,CAAC,CAAC,CAACkB,KAAK,CAAC;EACnF;EAEA,OAAOA,KAAK;AACd,CAAC;AAED,IAAIU,QAAQ,GAAGX,QAAQ;AACvBf,OAAO,CAACF,OAAO,GAAG4B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}