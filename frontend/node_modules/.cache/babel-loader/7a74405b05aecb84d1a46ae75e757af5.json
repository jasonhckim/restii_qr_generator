{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _append = _interopRequireDefault(require(\"./append\"));\nvar _copy = _interopRequireDefault(require(\"../run/copy\"));\nvar _insert = _interopRequireDefault(require(\"../run/insert\"));\nvar _runIndexAt = _interopRequireDefault(require(\"./runIndexAt\"));\nvar _stringFromCodePoints = _interopRequireDefault(require(\"../utils/stringFromCodePoints\"));\nvar mapCond = function mapCond(conds) {\n  return R.addIndex(R.map)(R.cond(conds));\n};\nvar idxEquals = function idxEquals(idx) {\n  return R.compose(R.equals(idx), R.nthArg(1));\n};\nvar idxGt = function idxGt(idx) {\n  return R.compose(R.gt(R.__, idx), R.nthArg(1));\n};\n/**\n * Insert glyph into attributed string\n *\n * @param {number} index\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */\n\nvar insertGlyph = function insertGlyph(index, glyph, string) {\n  var runIndex = (0, _runIndexAt.default)(index, string); // Add glyph to the end if run index invalid\n\n  if (runIndex === -1) {\n    return (0, _append.default)(glyph, string);\n  }\n  var codePoints = R.propOr([], 'codePoints')(glyph);\n  var incRange = R.add(R.length(codePoints));\n  return R.evolve({\n    string: R.compose(R.join(''), R.insert(index, (0, _stringFromCodePoints.default)(codePoints))),\n    runs: mapCond([[idxEquals(runIndex), function (run) {\n      return (0, _insert.default)(index - run.start, glyph, run);\n    }], [idxGt(runIndex), R.evolve({\n      start: incRange,\n      end: incRange\n    })], [R.T, _copy.default]])\n  })(string);\n};\nvar _default = R.curryN(3, insertGlyph);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_append","_copy","_insert","_runIndexAt","_stringFromCodePoints","mapCond","conds","addIndex","map","cond","idxEquals","idx","compose","equals","nthArg","idxGt","gt","__","insertGlyph","index","glyph","string","runIndex","codePoints","propOr","incRange","add","length","evolve","join","insert","runs","run","start","end","T","_default","curryN"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/textkit/lib/attributedString/insertGlyph.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _append = _interopRequireDefault(require(\"./append\"));\n\nvar _copy = _interopRequireDefault(require(\"../run/copy\"));\n\nvar _insert = _interopRequireDefault(require(\"../run/insert\"));\n\nvar _runIndexAt = _interopRequireDefault(require(\"./runIndexAt\"));\n\nvar _stringFromCodePoints = _interopRequireDefault(require(\"../utils/stringFromCodePoints\"));\n\nvar mapCond = function mapCond(conds) {\n  return R.addIndex(R.map)(R.cond(conds));\n};\n\nvar idxEquals = function idxEquals(idx) {\n  return R.compose(R.equals(idx), R.nthArg(1));\n};\n\nvar idxGt = function idxGt(idx) {\n  return R.compose(R.gt(R.__, idx), R.nthArg(1));\n};\n/**\n * Insert glyph into attributed string\n *\n * @param {number} index\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */\n\n\nvar insertGlyph = function insertGlyph(index, glyph, string) {\n  var runIndex = (0, _runIndexAt.default)(index, string); // Add glyph to the end if run index invalid\n\n  if (runIndex === -1) {\n    return (0, _append.default)(glyph, string);\n  }\n\n  var codePoints = R.propOr([], 'codePoints')(glyph);\n  var incRange = R.add(R.length(codePoints));\n  return R.evolve({\n    string: R.compose(R.join(''), R.insert(index, (0, _stringFromCodePoints.default)(codePoints))),\n    runs: mapCond([[idxEquals(runIndex), function (run) {\n      return (0, _insert.default)(index - run.start, glyph, run);\n    }], [idxGt(runIndex), R.evolve({\n      start: incRange,\n      end: incRange\n    })], [R.T, _copy.default]])\n  })(string);\n};\n\nvar _default = R.curryN(3, insertGlyph);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}