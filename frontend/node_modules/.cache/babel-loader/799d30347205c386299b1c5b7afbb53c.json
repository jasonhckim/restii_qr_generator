{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar VALID_ORIENTATIONS = ['portrait', 'landscape'];\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\n\nvar getOrientation = function getOrientation(page) {\n  var _page$props;\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.orientation) || 'portrait';\n  return VALID_ORIENTATIONS.includes(value) ? value : 'portrait';\n};\nvar _default = getOrientation;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","VALID_ORIENTATIONS","getOrientation","page","_page$props","value","props","orientation","includes","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/page/getOrientation.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar VALID_ORIENTATIONS = ['portrait', 'landscape'];\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\n\nvar getOrientation = function getOrientation(page) {\n  var _page$props;\n\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.orientation) || 'portrait';\n  return VALID_ORIENTATIONS.includes(value) ? value : 'portrait';\n};\n\nvar _default = getOrientation;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,kBAAkB,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,IAAI,EAAE;EACjD,IAAIC,WAAW;EAEf,IAAIC,KAAK,GAAG,CAAC,CAACD,WAAW,GAAGD,IAAI,CAACG,KAAK,MAAM,IAAI,IAAIF,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,WAAW,KAAK,UAAU;EAC5H,OAAON,kBAAkB,CAACO,QAAQ,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,UAAU;AAChE,CAAC;AAED,IAAII,QAAQ,GAAGP,cAAc;AAC7BJ,OAAO,CAACE,OAAO,GAAGS,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}