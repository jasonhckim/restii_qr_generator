{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nvar upperFirst = R.ifElse(R.isNil, R.identity, R.compose(R.join(''), R.juxt([R.compose(R.toUpper, R.head), R.tail])));\nvar _default = R.memoizeWith(R.identity, upperFirst);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","upperFirst","ifElse","isNil","identity","compose","join","juxt","toUpper","head","tail","_default","memoizeWith"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/utils/upperFirst.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nvar upperFirst = R.ifElse(R.isNil, R.identity, R.compose(R.join(''), R.juxt([R.compose(R.toUpper, R.head), R.tail])));\n\nvar _default = R.memoizeWith(R.identity, upperFirst);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACD,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACF,CAAC,CAACG,KAAK,EAAEH,CAAC,CAACI,QAAQ,EAAEJ,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,IAAI,CAAC,EAAE,CAAC,EAAEN,CAAC,CAACO,IAAI,CAAC,CAACP,CAAC,CAACK,OAAO,CAACL,CAAC,CAACQ,OAAO,EAAER,CAAC,CAACS,IAAI,CAAC,EAAET,CAAC,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;AAErH,IAAIC,QAAQ,GAAGX,CAAC,CAACY,WAAW,CAACZ,CAAC,CAACI,QAAQ,EAAEH,UAAU,CAAC;AAEpDH,OAAO,CAACD,OAAO,GAAGc,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}