{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\nvar INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nvar isSvg = R.propEq('type', P.Svg);\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\n\nvar getInheritStyles = R.compose(R.pick(INHERITED_PROPERTIES), R.propOr({}, 'style')); // Merge style values\n\nvar mergeValues = function mergeValues(styleName, value, inheritedValue) {\n  switch (styleName) {\n    case 'textDecoration':\n      {\n        // merge not none and not false textDecoration values to one rule\n        return [inheritedValue, value].filter(function (v) {\n          return v && v !== 'none';\n        }).join(' ');\n      }\n    default:\n      return value;\n  }\n}; // Merge inherited and node styles\n\nvar merge = function merge(inheritedStyles, style) {\n  var mergedStyles = (0, _extends2.default)({}, inheritedStyles);\n  Object.entries(style).forEach(function (_ref) {\n    var styleName = _ref[0],\n      value = _ref[1];\n    mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n  });\n  return mergedStyles;\n};\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\n\nvar mergeStyles = function mergeStyles(inheritedStyles) {\n  return R.evolve({\n    style: function style(_style) {\n      return merge(inheritedStyles, _style);\n    }\n  });\n};\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\n\nvar resolveInheritance = function resolveInheritance(node) {\n  if (isSvg(node)) return node;\n  var inheritStyles = getInheritStyles(node);\n  var resolveChild = R.compose(resolveInheritance, mergeStyles(inheritStyles));\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\nvar _default = resolveInheritance;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","exports","__esModule","_extends2","R","P","INHERITED_PROPERTIES","isSvg","propEq","Svg","getInheritStyles","compose","pick","propOr","mergeValues","styleName","value","inheritedValue","filter","v","join","merge","inheritedStyles","style","mergedStyles","Object","entries","forEach","_ref","mergeStyles","evolve","_style","resolveInheritance","node","inheritStyles","resolveChild","children","map","_default"],"sources":["C:/Users/user/restii_qr_generator/frontend/node_modules/@react-pdf/layout/lib/steps/resolveInheritance.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nvar isSvg = R.propEq('type', P.Svg);\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\n\nvar getInheritStyles = R.compose(R.pick(INHERITED_PROPERTIES), R.propOr({}, 'style')); // Merge style values\n\nvar mergeValues = function mergeValues(styleName, value, inheritedValue) {\n  switch (styleName) {\n    case 'textDecoration':\n      {\n        // merge not none and not false textDecoration values to one rule\n        return [inheritedValue, value].filter(function (v) {\n          return v && v !== 'none';\n        }).join(' ');\n      }\n\n    default:\n      return value;\n  }\n}; // Merge inherited and node styles\n\n\nvar merge = function merge(inheritedStyles, style) {\n  var mergedStyles = (0, _extends2.default)({}, inheritedStyles);\n  Object.entries(style).forEach(function (_ref) {\n    var styleName = _ref[0],\n        value = _ref[1];\n    mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n  });\n  return mergedStyles;\n};\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\n\n\nvar mergeStyles = function mergeStyles(inheritedStyles) {\n  return R.evolve({\n    style: function style(_style) {\n      return merge(inheritedStyles, _style);\n    }\n  });\n};\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\n\n\nvar resolveInheritance = function resolveInheritance(node) {\n  if (isSvg(node)) return node;\n  var inheritStyles = getInheritStyles(node);\n  var resolveChild = R.compose(resolveInheritance, mergeStyles(inheritStyles));\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\n\nvar _default = resolveInheritance;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}